{"version":3,"file":"26251.0d12bd5b4b758084.js","mappings":"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","names":["GdprRequestService","constructor","restService","this","apiName","deleteUserData","request","method","url","getDownloadToken","id","params","getList","input","userId","sorting","skipCount","maxResultCount","getUserData","requestId","token","responseType","isNewRequestAllowed","prepareUserData","static","ɵfac","t","i0","i1","ɵprov","factory","providedIn","GdprActionColumnComponent_span_1_Template","rf","ctx","GdprActionColumnComponent_button_2_Template","_r3","ctx_r2","RequestPersonalDataToolbarActionComponent_div_0_ng_container_1_Template","RequestPersonalDataToolbarActionComponent_div_0_Template","_r4","_r2","RequestPersonalDataToolbarActionComponent_ng_template_2_Template","_r7","ctx_r6","requestPersonalDataService","requestPersonalDate","ctx_r1","btnDisabled$","RequestPersonalDataToolbarActionComponent_ng_template_4_Template","RequestPersonalDataService","list","gdprRequestService","store","InternalStore","sliceState","s","subscribe","get","checkRequestAllowed","res","patch","i2","GdprComponent","currentUserId","configState","getDeep","service","cdr","confirmation","data","items","totalCount","ngOnInit","hookToQuery","deleteData","warn","pipe","filter","status","Confirmation","Status","confirm","success","query","detectChanges","i3","ɵcmp","type","selectors","features","ListService","provide","EXTENSIONS_IDENTIFIER","useValue","decls","vars","consts","template","dependencies","i5","i6","encapsulation","GdprActionColumnComponent","apiUrl","environment","getApiUrl","value$","subscription","isReadyToDownload","addOne","checkIsReadyToDownload","readyTime","take","gdprRequest","switchMap","file","downloadBlob","Date","PROP_DATA_STREAM","SubscriptionService","i2$1","DEFAULT_PERSONAL_DATA_ENTITY_PROPS","EntityProp","createMany","name","displayName","sortable","columnWidth","component","valueResolver","requestDto","of","getStatus","record","RequestPersonalDataToolbarActionComponent","i3$1","changeDetection","DEFAULT_GDPR_TOOLBAR","ToolbarComponent","ToolbarAction","text","action","getInjected","btnClass","DEFAULT_GDPR_ENTITY_PROPS","DEFAULT_GDPR_TOOLBAR_ACTIONS","routes","path","RouterOutletComponent","canActivate","authGuard","permissionGuard","resolve","gdprExtensionsResolver","injector","inject","Injector","extensions","ExtensionsService","propContributors","toolbarContributors","ConfigStateService","getObjectExtensionEntitiesFromStore","map","entities","PersonalData","mapEntitiesToContributors","tap","objectExtensionContributors","mergeWithDefaultProps","entityProps","prop","mergeWithDefaultActions","toolbarActions","children","ReplaceableRouteContainerComponent","replaceableComponent","defaultComponent","key","GdprRoutingModule","ɵmod","ɵinj","imports","RouterModule","forChild","GdprModule","options","ngModule","providers","createFormPropContributors","toolbarActionContributors","forLazy","LazyModuleFactory","CoreModule","ThemeSharedModule","ExtensibleModule","PageModule","NgbTooltipModule","GdprExtensionsGuard","map$1","tap$1"],"sourceRoot":"webpack:///","sources":["./node_modules/@volo/abp.ng.gdpr/fesm2022/volo-abp.ng.gdpr-proxy.mjs","./node_modules/@volo/abp.ng.gdpr/fesm2022/volo-abp.ng.gdpr.mjs"],"sourcesContent":["import * as i1 from '@abp/ng.core';\nimport * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\nclass GdprRequestService {\n    constructor(restService) {\n        this.restService = restService;\n        this.apiName = 'Gdpr';\n        this.deleteUserData = () => this.restService.request({\n            method: 'DELETE',\n            url: '/api/gdpr/requests',\n        }, { apiName: this.apiName });\n        this.getDownloadToken = (id) => this.restService.request({\n            method: 'GET',\n            url: '/api/gdpr/requests/download-token',\n            params: { id },\n        }, { apiName: this.apiName });\n        this.getList = (input) => this.restService.request({\n            method: 'GET',\n            url: '/api/gdpr/requests/list',\n            params: { userId: input.userId, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n        }, { apiName: this.apiName });\n        this.getUserData = (requestId, token) => this.restService.request({\n            method: 'GET',\n            responseType: 'blob',\n            url: `/api/gdpr/requests/data/${requestId}`,\n            params: { token },\n        }, { apiName: this.apiName });\n        this.isNewRequestAllowed = () => this.restService.request({\n            method: 'GET',\n            url: '/api/gdpr/requests/is-request-allowed',\n        }, { apiName: this.apiName });\n        this.prepareUserData = () => this.restService.request({\n            method: 'POST',\n            url: '/api/gdpr/requests/prepare-data',\n        }, { apiName: this.apiName });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprRequestService, deps: [{ token: i1.RestService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprRequestService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprRequestService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1.RestService }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GdprRequestService };\n","import * as i1 from '@abp/ng.core';\nimport { InternalStore, ListService, downloadBlob, SubscriptionService, ConfigStateService, RouterOutletComponent, authGuard, permissionGuard, ReplaceableRouteContainerComponent, LazyModuleFactory, CoreModule } from '@abp/ng.core';\nimport * as i3 from '@abp/ng.theme.shared';\nimport { Confirmation, ThemeSharedModule } from '@abp/ng.theme.shared';\nimport * as i5 from '@abp/ng.components/extensible';\nimport { EXTENSIONS_IDENTIFIER, PROP_DATA_STREAM, EntityProp, ToolbarComponent, ToolbarAction, ExtensionsService, getObjectExtensionEntitiesFromStore, mapEntitiesToContributors, mergeWithDefaultProps, mergeWithDefaultActions, ExtensibleModule } from '@abp/ng.components/extensible';\nimport * as i0 from '@angular/core';\nimport { Injectable, Component, Inject, ChangeDetectionStrategy, inject, Injector, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2 from '@volo/abp.ng.gdpr/proxy';\nimport { filter, take, map as map$1, tap as tap$1 } from 'rxjs/operators';\nimport * as i6 from '@abp/ng.components/page';\nimport { PageModule } from '@abp/ng.components/page';\nimport * as i4 from 'rxjs';\nimport { switchMap, of, map, tap } from 'rxjs';\nimport * as i2$1 from '@angular/common';\nimport * as i3$1 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n\nclass RequestPersonalDataService {\n    constructor(list, gdprRequestService) {\n        this.list = list;\n        this.gdprRequestService = gdprRequestService;\n        this.store = new InternalStore(false);\n        this.btnDisabled$ = this.store.sliceState(s => !s);\n    }\n    requestPersonalDate() {\n        this.gdprRequestService.prepareUserData().subscribe(() => {\n            this.list.get();\n            this.checkRequestAllowed();\n        });\n    }\n    checkRequestAllowed() {\n        this.gdprRequestService.isNewRequestAllowed().subscribe(res => {\n            this.store.patch(res);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: RequestPersonalDataService, deps: [{ token: i1.ListService }, { token: i2.GdprRequestService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: RequestPersonalDataService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: RequestPersonalDataService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i1.ListService }, { type: i2.GdprRequestService }] });\n\nclass GdprComponent {\n    get currentUserId() {\n        return this.configState.getDeep('currentUser.id');\n    }\n    constructor(list, service, configState, cdr, confirmation, requestPersonalDataService) {\n        this.list = list;\n        this.service = service;\n        this.configState = configState;\n        this.cdr = cdr;\n        this.confirmation = confirmation;\n        this.requestPersonalDataService = requestPersonalDataService;\n        this.data = { items: [], totalCount: 0 };\n    }\n    ngOnInit() {\n        this.hookToQuery();\n        this.requestPersonalDataService.checkRequestAllowed();\n    }\n    deleteData() {\n        this.confirmation\n            .warn('AbpGdpr::DeletePersonalDataWarning', '')\n            .pipe(filter(status => status === Confirmation.Status.confirm))\n            .subscribe(() => this.deleteUserData());\n    }\n    deleteUserData() {\n        this.service.deleteUserData().subscribe(() => {\n            this.list.get();\n            this.confirmation.success('AbpGdpr::PersonalDataDeleteRequestReceived', '');\n        });\n    }\n    hookToQuery() {\n        const userId = this.currentUserId;\n        this.list\n            .hookToQuery(query => this.service.getList({ ...query, userId }))\n            .subscribe(res => {\n            this.data = res;\n            this.cdr.detectChanges();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprComponent, deps: [{ token: i1.ListService }, { token: i2.GdprRequestService }, { token: i1.ConfigStateService }, { token: i0.ChangeDetectorRef }, { token: i3.ConfirmationService }, { token: RequestPersonalDataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GdprComponent, selector: \"abp-gdpr\", providers: [\n            ListService,\n            {\n                provide: EXTENSIONS_IDENTIFIER,\n                useValue: \"Gdpr.GdprComponent\" /* eGdprComponents.PersonalData */,\n            },\n            RequestPersonalDataService,\n        ], ngImport: i0, template: \"<abp-page [title]=\\\"'AbpGdpr::PersonalData' | abpLocalization\\\" [toolbar]=\\\"data.items\\\">\\r\\n  <p class=\\\"alert alert-info\\\">{{ 'AbpGdpr::PersonalDataDescription' | abpLocalization }}</p>\\r\\n  <div class=\\\"mt-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <abp-extensible-table\\r\\n        [data]=\\\"data.items\\\"\\r\\n        [recordsTotal]=\\\"data.totalCount\\\"\\r\\n        [list]=\\\"list\\\"\\r\\n      ></abp-extensible-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</abp-page>\\r\\n\", dependencies: [{ kind: \"component\", type: i5.ExtensibleTableComponent, selector: \"abp-extensible-table\", inputs: [\"actionsText\", \"data\", \"list\", \"recordsTotal\", \"actionsColumnWidth\", \"actionsTemplate\"], outputs: [\"tableActivate\"], exportAs: [\"abpExtensibleTable\"] }, { kind: \"component\", type: i6.PageComponent, selector: \"abp-page\", inputs: [\"title\", \"toolbar\", \"breadcrumb\"] }, { kind: \"pipe\", type: i1.LocalizationPipe, name: \"abpLocalization\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'abp-gdpr', providers: [\n                        ListService,\n                        {\n                            provide: EXTENSIONS_IDENTIFIER,\n                            useValue: \"Gdpr.GdprComponent\" /* eGdprComponents.PersonalData */,\n                        },\n                        RequestPersonalDataService,\n                    ], template: \"<abp-page [title]=\\\"'AbpGdpr::PersonalData' | abpLocalization\\\" [toolbar]=\\\"data.items\\\">\\r\\n  <p class=\\\"alert alert-info\\\">{{ 'AbpGdpr::PersonalDataDescription' | abpLocalization }}</p>\\r\\n  <div class=\\\"mt-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <abp-extensible-table\\r\\n        [data]=\\\"data.items\\\"\\r\\n        [recordsTotal]=\\\"data.totalCount\\\"\\r\\n        [list]=\\\"list\\\"\\r\\n      ></abp-extensible-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</abp-page>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.ListService }, { type: i2.GdprRequestService }, { type: i1.ConfigStateService }, { type: i0.ChangeDetectorRef }, { type: i3.ConfirmationService }, { type: RequestPersonalDataService }] });\n\nclass GdprActionColumnComponent {\n    get apiUrl() {\n        return this.environment.getApiUrl('Gdpr');\n    }\n    constructor(value$, environment, gdprRequestService, subscription) {\n        this.value$ = value$;\n        this.environment = environment;\n        this.gdprRequestService = gdprRequestService;\n        this.subscription = subscription;\n        this.isReadyToDownload = false;\n    }\n    ngOnInit() {\n        this.subscription.addOne(this.value$, list => {\n            this.isReadyToDownload = this.checkIsReadyToDownload(list.readyTime);\n        });\n    }\n    getUserData() {\n        this.value$.pipe(take(1)).subscribe(gdprRequest => {\n            if (this.checkIsReadyToDownload(gdprRequest.readyTime)) {\n                this.gdprRequestService\n                    .getDownloadToken(gdprRequest.id)\n                    .pipe(switchMap(res => this.gdprRequestService.getUserData(gdprRequest.id, res.token)))\n                    .subscribe(file => {\n                    downloadBlob(file, 'PersonalData');\n                });\n            }\n        });\n    }\n    checkIsReadyToDownload(readyTime) {\n        return new Date(readyTime) < new Date();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprActionColumnComponent, deps: [{ token: PROP_DATA_STREAM }, { token: i1.EnvironmentService }, { token: i2.GdprRequestService }, { token: i1.SubscriptionService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GdprActionColumnComponent, selector: \"abp-gdpr-action-column\", providers: [SubscriptionService], ngImport: i0, template: \"<div  style=\\\"max-width: 160px\\\" class=\\\"pointer abp-ellipsis-inline\\\" >\\r\\n  <span *ngIf=\\\"!isReadyToDownload\\\" class=\\\"badge bg-warning\\\">{{\\\"AbpGdpr::Preparing\\\" | abpLocalization}}</span>\\r\\n  <button *ngIf=\\\"isReadyToDownload\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getUserData()\\\">{{\\\"AbpGdpr::Download\\\" | abpLocalization}}</button>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i1.LocalizationPipe, name: \"abpLocalization\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprActionColumnComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'abp-gdpr-action-column', providers: [SubscriptionService], template: \"<div  style=\\\"max-width: 160px\\\" class=\\\"pointer abp-ellipsis-inline\\\" >\\r\\n  <span *ngIf=\\\"!isReadyToDownload\\\" class=\\\"badge bg-warning\\\">{{\\\"AbpGdpr::Preparing\\\" | abpLocalization}}</span>\\r\\n  <button *ngIf=\\\"isReadyToDownload\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getUserData()\\\">{{\\\"AbpGdpr::Download\\\" | abpLocalization}}</button>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i4.Observable, decorators: [{\n                    type: Inject,\n                    args: [PROP_DATA_STREAM]\n                }] }, { type: i1.EnvironmentService }, { type: i2.GdprRequestService }, { type: i1.SubscriptionService }] });\n\nconst getStatus = (requestDto) => {\n    return of(requestDto);\n};\n\nconst DEFAULT_PERSONAL_DATA_ENTITY_PROPS = EntityProp.createMany([\n    {\n        type: \"string\" /* ePropType.String */,\n        name: 'action',\n        displayName: 'AbpGdpr::Action',\n        sortable: true,\n        columnWidth: 180,\n        component: GdprActionColumnComponent,\n        valueResolver: data => getStatus(data.record),\n    },\n    {\n        type: \"datetime\" /* ePropType.DateTime */,\n        name: 'creationTime',\n        displayName: 'AbpGdpr::CreationTime',\n        sortable: true,\n        columnWidth: 200,\n    },\n    {\n        type: \"datetime\" /* ePropType.DateTime */,\n        name: 'readyTime',\n        displayName: 'AbpGdpr::ReadyTime',\n        sortable: true,\n        columnWidth: 200,\n    },\n]);\n\nclass RequestPersonalDataToolbarActionComponent {\n    constructor(requestPersonalDataService) {\n        this.requestPersonalDataService = requestPersonalDataService;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: RequestPersonalDataToolbarActionComponent, deps: [{ token: RequestPersonalDataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.9\", type: RequestPersonalDataToolbarActionComponent, selector: \"abp-request-personal-data-toolbar-action\", ngImport: i0, template: \"<div *ngIf=\\\"requestPersonalDataService.btnDisabled$ | async; else btnTmp\\\" [ngbTooltip]=\\\"tooltipTmp\\\">\\r\\n  <ng-container *ngTemplateOutlet=\\\"btnTmp\\\"></ng-container>\\r\\n</div>\\r\\n<ng-template #btnTmp>\\r\\n  <button\\r\\n    class=\\\"btn btn-sm btn-primary\\\"\\r\\n    (click)=\\\"requestPersonalDataService.requestPersonalDate()\\\"\\r\\n    type=\\\"button\\\"\\r\\n    [disabled]=\\\"requestPersonalDataService.btnDisabled$ | async\\\"\\r\\n  >\\r\\n    {{ 'AbpGdpr::RequestPersonalData' | abpLocalization }}\\r\\n  </button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #tooltipTmp>\\r\\n  <span>{{ 'AbpGdpr::Volo.Abp.Gdpr:010001' | abpLocalization }}</span>\\r\\n</ng-template>\\r\\n\", dependencies: [{ kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3$1.NgbTooltip, selector: \"[ngbTooltip]\", inputs: [\"animation\", \"autoClose\", \"placement\", \"popperOptions\", \"triggers\", \"positionTarget\", \"container\", \"disableTooltip\", \"tooltipClass\", \"tooltipContext\", \"openDelay\", \"closeDelay\", \"ngbTooltip\"], outputs: [\"shown\", \"hidden\"], exportAs: [\"ngbTooltip\"] }, { kind: \"pipe\", type: i2$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i1.LocalizationPipe, name: \"abpLocalization\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: RequestPersonalDataToolbarActionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'abp-request-personal-data-toolbar-action', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"requestPersonalDataService.btnDisabled$ | async; else btnTmp\\\" [ngbTooltip]=\\\"tooltipTmp\\\">\\r\\n  <ng-container *ngTemplateOutlet=\\\"btnTmp\\\"></ng-container>\\r\\n</div>\\r\\n<ng-template #btnTmp>\\r\\n  <button\\r\\n    class=\\\"btn btn-sm btn-primary\\\"\\r\\n    (click)=\\\"requestPersonalDataService.requestPersonalDate()\\\"\\r\\n    type=\\\"button\\\"\\r\\n    [disabled]=\\\"requestPersonalDataService.btnDisabled$ | async\\\"\\r\\n  >\\r\\n    {{ 'AbpGdpr::RequestPersonalData' | abpLocalization }}\\r\\n  </button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #tooltipTmp>\\r\\n  <span>{{ 'AbpGdpr::Volo.Abp.Gdpr:010001' | abpLocalization }}</span>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: RequestPersonalDataService }] });\n\nconst DEFAULT_PERSONAL_DATA_TOOLBAR_COMPONENTS = ToolbarComponent.createMany([\n    {\n        component: RequestPersonalDataToolbarActionComponent,\n    },\n]);\nconst DEFAULT_PERSONAL_DATA_TOOLBAR_ACTIONS = ToolbarAction.createMany([\n    {\n        text: 'AbpGdpr::DeletePersonalData',\n        action: data => {\n            const component = data.getInjected(GdprComponent);\n            component.deleteData();\n        },\n        btnClass: 'btn btn-sm btn-danger',\n    },\n]);\nconst DEFAULT_GDPR_TOOLBAR = [\n    ...DEFAULT_PERSONAL_DATA_TOOLBAR_COMPONENTS,\n    ...DEFAULT_PERSONAL_DATA_TOOLBAR_ACTIONS,\n];\n\nconst DEFAULT_GDPR_ENTITY_PROPS = {\n    [\"Gdpr.GdprComponent\" /* eGdprComponents.PersonalData */]: DEFAULT_PERSONAL_DATA_ENTITY_PROPS,\n};\nconst DEFAULT_GDPR_TOOLBAR_ACTIONS = {\n    [\"Gdpr.GdprComponent\" /* eGdprComponents.PersonalData */]: DEFAULT_GDPR_TOOLBAR,\n};\n\nconst gdprExtensionsResolver = () => {\n    const injector = inject(Injector);\n    const extensions = injector.get(ExtensionsService);\n    const propContributors = injector.get(DEFAULT_GDPR_ENTITY_PROPS, null) || {};\n    const toolbarContributors = injector.get(DEFAULT_GDPR_TOOLBAR_ACTIONS, null) || {};\n    const configState = injector.get(ConfigStateService);\n    return getObjectExtensionEntitiesFromStore(configState, 'Gdpr').pipe(map(entities => ({\n        [\"Gdpr.GdprComponent\" /* eGdprComponents.PersonalData */]: entities.PersonalData,\n    })), mapEntitiesToContributors(configState, 'AbpGdpr'), tap(objectExtensionContributors => {\n        mergeWithDefaultProps(extensions.entityProps, DEFAULT_GDPR_ENTITY_PROPS, objectExtensionContributors.prop, propContributors);\n        mergeWithDefaultActions(extensions.toolbarActions, DEFAULT_GDPR_TOOLBAR_ACTIONS, toolbarContributors);\n    }));\n};\n\nconst routes = [\n    {\n        path: '',\n        component: RouterOutletComponent,\n        canActivate: [authGuard, permissionGuard],\n        resolve: [gdprExtensionsResolver],\n        children: [\n            {\n                path: '',\n                component: ReplaceableRouteContainerComponent,\n                data: {\n                    replaceableComponent: {\n                        defaultComponent: GdprComponent,\n                        key: \"Gdpr.GdprComponent\" /* eGdprComponents.PersonalData */,\n                    },\n                },\n            },\n        ],\n    },\n];\nclass GdprRoutingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprRoutingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprRoutingModule, imports: [i1$1.RouterModule], exports: [RouterModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprRoutingModule, imports: [RouterModule.forChild(routes), RouterModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprRoutingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [RouterModule.forChild(routes)],\n                    exports: [RouterModule],\n                }]\n        }] });\n\nconst declarations = [\n    GdprComponent,\n    GdprActionColumnComponent,\n    RequestPersonalDataToolbarActionComponent,\n];\nclass GdprModule {\n    static forChild(options = {}) {\n        return {\n            ngModule: GdprModule,\n            providers: [\n                {\n                    provide: DEFAULT_GDPR_ENTITY_PROPS,\n                    useValue: options.createFormPropContributors,\n                },\n                {\n                    provide: DEFAULT_GDPR_TOOLBAR_ACTIONS,\n                    useValue: options.toolbarActionContributors,\n                },\n            ],\n        };\n    }\n    static forLazy() {\n        return new LazyModuleFactory(GdprModule.forChild());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprModule, declarations: [GdprComponent,\n            GdprActionColumnComponent,\n            RequestPersonalDataToolbarActionComponent], imports: [CoreModule,\n            ThemeSharedModule,\n            GdprRoutingModule,\n            ExtensibleModule,\n            PageModule,\n            NgbTooltipModule], exports: [GdprComponent,\n            GdprActionColumnComponent,\n            RequestPersonalDataToolbarActionComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprModule, imports: [CoreModule,\n            ThemeSharedModule,\n            GdprRoutingModule,\n            ExtensibleModule,\n            PageModule,\n            NgbTooltipModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [...declarations],\n                    imports: [\n                        CoreModule,\n                        ThemeSharedModule,\n                        GdprRoutingModule,\n                        ExtensibleModule,\n                        PageModule,\n                        NgbTooltipModule,\n                    ],\n                    exports: [...declarations],\n                }]\n        }] });\n\n/**\n * @deprecated Use `gdprExtensionsResolver` *function* instead.\n */\nclass GdprExtensionsGuard {\n    constructor(injector) {\n        this.injector = injector;\n    }\n    canActivate() {\n        const extensions = this.injector.get(ExtensionsService);\n        const propContributors = this.injector.get(DEFAULT_GDPR_ENTITY_PROPS, null) || {};\n        const toolbarContributors = this.injector.get(DEFAULT_GDPR_TOOLBAR_ACTIONS, null) || {};\n        const configState = this.injector.get(ConfigStateService);\n        return getObjectExtensionEntitiesFromStore(configState, 'Gdpr').pipe(map$1(entities => ({\n            [\"Gdpr.GdprComponent\" /* eGdprComponents.PersonalData */]: entities.PersonalData,\n        })), mapEntitiesToContributors(configState, 'AbpGdpr'), tap$1(objectExtensionContributors => {\n            mergeWithDefaultProps(extensions.entityProps, DEFAULT_GDPR_ENTITY_PROPS, objectExtensionContributors.prop, propContributors);\n            mergeWithDefaultActions(extensions.toolbarActions, DEFAULT_GDPR_TOOLBAR_ACTIONS, toolbarContributors);\n        }), map$1(() => true));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprExtensionsGuard, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprExtensionsGuard }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GdprExtensionsGuard, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.Injector }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_GDPR_ENTITY_PROPS, DEFAULT_GDPR_TOOLBAR_ACTIONS, GdprActionColumnComponent, GdprComponent, GdprExtensionsGuard, GdprModule, RequestPersonalDataToolbarActionComponent };\n"],"x_google_ignoreList":[0,1]}