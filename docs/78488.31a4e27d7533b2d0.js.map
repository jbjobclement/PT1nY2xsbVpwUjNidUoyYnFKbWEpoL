{"version":3,"file":"78488.31a4e27d7533b2d0.js","mappings":"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","names":["dataFieldTranslationKeysMapping","dataFieldLookupSourceMapping","dataField","path","pathForSelectedDisplay","getFieldDataFromValidationCallbackData","option","validator","instance","validateADxFormField","form","element","getEditor","Validator","getInstance","validate","formProperties","colCount","items","itemType","name","cssClass","caption","editorType","label","text","validationRules","requiredValidationRule","template","visible","type","message","reevaluate","validationCallback","receiverGroupIds","topicIds","value","length","receiverIds","colSpan","editorOptions","height","htmlProperties","placeholder","formData","notificationProviderIds","isSendToAllReceivers","isIndependentNotificationSettingUsing","isUsingTemplate","isFetchNotificationDataByEachReceiver","notificationSettings","notificationCategoryId","title","subTitle","textContent","htmlContent","textContentNotificationTemplateId","textContentNotificationTemplateArgs","htmlContentNotificationTemplateId","htmlContentNotificationTemplateArgs","notificationDataFetchEndpoint","hookEndpoint","elementAttr","class","notificationSchedulePlans","min","currentValue","expectedEndTime","onOpened","e","component","_popup","at","expectedPushCount","cronExpression","i0","$event","_r14","ctx_r13","templateData_r12","dataSource","ctx_r1","isUsingCronExpressions","_r17","ctx_r16","ctx_r18","toggleNotificationRadioButton","_c3","_c1","_c2","ctx_r2","_r21","ctx_r20","_r0","updateData","templateData_r19","ctx_r3","_r25","templateData_r23","ctx_r4","_r28","templateData_r26","ctx_r5","_r31","ctx_r30","_c4","_c5","ctx_r6","_r34","ctx_r33","ctx_r7","_r37","ctx_r36","ctx_r38","_c6","_c7","ctx_r8","_r41","ctx_r40","ctx_r9","_r44","ctx_r43","ctx_r10","_r47","ctx_r46","ctx_r11","routes","CreateNotificationInfoComponent","constructor","route","router","configStateService","appRestService","localization","this","createPageTitle","parentURL","initReceiversValidateSelection","isReceiversValidateSelectionValidating","ngOnInit","SpecifiedTenantId","getOne","id","getParentRouteURL","ngAfterViewInit","includes","decodeURIComponent","split","request","method","url","subscribe","res","description","onFieldDataChanged","validationEngine","groups","validators","parent","parentRoute","currentRouteUrl","snapshot","map","segment","join","localizationPermissionCreate","instant","cloneDeep","instantFormProperties","instantDataFieldLookupSourceMapping","postURL","reserveFormProperties","reserveDataFieldLookupSourceMapping","recurringFormProperties","recurringDataFieldLookupSourceMapping","cronExpressionsFormProperties","cronExpressionsDataFieldLookupSourceMapping","isSelected","key","itemOption","handleSubmit","isValid","receiverGroupId","topicId","body","params","apiName","apiDefaultName","parentURLSplit","navigate","slice","handleCancel","static","t","i1","i2","i3","core","Xpm","selectors","viewQuery","rf","ctx","CreateNotificationInfoComponent_app_notification_tag_box_4_Template","CreateNotificationInfoComponent_app_notification_radio_button_5_Template","CreateNotificationInfoComponent_app_notification_tag_box_6_Template","CreateNotificationInfoComponent_app_notification_tree_view_7_Template","CreateNotificationInfoComponent_app_notification_tag_box_8_Template","CreateNotificationInfoComponent_app_notification_radio_button_9_Template","CreateNotificationInfoComponent_app_notification_setting_items_10_Template","CreateNotificationInfoComponent_app_notification_radio_button_11_Template","CreateNotificationInfoComponent_app_notification_template_args_12_Template","CreateNotificationInfoComponent_app_recurring_notification_schedule_plan_13_Template","CreateNotificationInfoComponent_app_reserve_notification_schedule_plan_14_Template","_c8","_c9","canActivate","AuthGuard","PermissionGuard","CreateNotificationInfoRoutingModule","oAB","cJS","RouterModule","forChild","CreateNotificationInfoModule","CommonModule","SharedModule","DXComponentsModule","NotificationTagBoxComponent","NotificationRadioButtonComponent","NotificationTreeViewComponent","NotificationSettingItemsComponent","NotificationTemplateArgsComponent","RecurringNotificationSchedulePlanComponent","ReserveNotificationSchedulePlanComponent"],"sourceRoot":"webpack:///","sources":["./src/app/create-notification-info/config/datafield-translation-mapping.ts","./src/app/create-notification-info/config/lookup/instant-datafield-translation-mapping.ts","./src/app/create-notification-info/config/lookup/reserve-datafield-translation-mapping.ts","./src/app/create-notification-info/config/lookup/recurring-datafield-translation-mapping.ts","./src/app/create-notification-info/config/lookup/cron-expressions-instant-datafield-translation-mapping.ts","./src/app/shared/utils/validation/form.ts","./src/app/create-notification-info/config/formProperties/instant-notification-form-properties.ts","./src/app/create-notification-info/config/formProperties/reserve-notification-form-properties.ts","./src/app/create-notification-info/config/formProperties/recurring-notification-form-properties.ts","./src/app/create-notification-info/config/formProperties/cron-expressions-form-properites.ts","./src/app/create-notification-info/components/create-notification-info.component.html","./src/app/create-notification-info/create-notification-info-routing.module.ts","./src/app/create-notification-info/components/create-notification-info.component.ts","./src/app/create-notification-info/create-notification-info.module.ts"],"sourcesContent":["import { DataFieldTranslationKeysMapping } from \"src/app/shared/typing\";\r\n\r\n\r\nexport const dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = [\r\n];\r\n","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n    {\r\n        dataField: 'notificationProviderIds',\r\n        path: '/api/app/instant-notifications/notification-provider-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverIds',\r\n        path: '/api/app/instant-notifications/receiver-lookup',\r\n    },\r\n    {\r\n        dataField: 'topicIds',\r\n        path: '/api/app/instant-notifications/topic-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverGroupIds',\r\n        path: '/api/app/notification-infos/receiver-group-treeview',\r\n    },\r\n    {\r\n        dataField: 'notificationCategoryId',\r\n        path: '/api/app/instant-notifications/notification-category-lookup',\r\n    },\r\n    {\r\n        dataField: 'textContentNotificationTemplateId',\r\n        path: '/api/app/instant-notifications/notification-template-lookup',\r\n    },\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n        pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants'\r\n    },\r\n];","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n    {\r\n        dataField: 'notificationProviderIds',\r\n        path: '/api/app/reserved-notifications/notification-provider-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverIds',\r\n        path: '/api/app/reserved-notifications/receiver-lookup',\r\n    },\r\n    {\r\n        dataField: 'topicIds',\r\n        path: '/api/app/reserved-notifications/topic-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverGroupIds',\r\n        path: '/api/app/notification-infos/receiver-group-treeview',\r\n    },\r\n    {\r\n        dataField: 'notificationCategoryId',\r\n        path: '/api/app/reserved-notifications/notification-category-lookup',\r\n    },\r\n    {\r\n        dataField: 'textContentNotificationTemplateId',\r\n        path: '/api/app/reserved-notifications/notification-template-lookup',\r\n    },\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n        pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants'\r\n    },\r\n];","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n    {\r\n        dataField: 'notificationProviderIds',\r\n        path: '/api/app/recurring-notifications/notification-provider-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverIds',\r\n        path: '/api/app/recurring-notifications/receiver-lookup',\r\n    },\r\n    {\r\n        dataField: 'topicIds',\r\n        path: '/api/app/recurring-notifications/topic-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverGroupIds',\r\n        path: '/api/app/notification-infos/receiver-group-treeview',\r\n    },\r\n    {\r\n        dataField: 'notificationCategoryId',\r\n        path: '/api/app/recurring-notifications/notification-category-lookup',\r\n    },\r\n    {\r\n        dataField: 'textContentNotificationTemplateId',\r\n        path: '/api/app/recurring-notifications/notification-template-lookup',\r\n    },\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n        pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants'\r\n    },\r\n];","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n    {\r\n        dataField: 'notificationProviderIds',\r\n        path: '/api/app/instant-notifications/notification-provider-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverIds',\r\n        path: '/api/app/instant-notifications/receiver-lookup',\r\n    },\r\n    {\r\n        dataField: 'topicIds',\r\n        path: '/api/app/instant-notifications/topic-lookup',\r\n    },\r\n    {\r\n        dataField: 'receiverGroupIds',\r\n        path: '/api/app/notification-infos/receiver-group-treeview',\r\n    },\r\n    {\r\n        dataField: 'notificationCategoryId',\r\n        path: '/api/app/instant-notifications/notification-category-lookup',\r\n    },\r\n    {\r\n        dataField: 'textContentNotificationTemplateId',\r\n        path: '/api/app/instant-notifications/notification-template-lookup',\r\n    },\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n        pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants'\r\n    },\r\n];","import type { DxFormComponent } from \"devextreme-angular\";\r\nimport type { ValidationCallbackData } from \"devextreme/common\";\r\nimport Validator from \"devextreme/ui/validator\";\r\n\r\n/**\r\n * [ValidationCallbackData]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxValidator/Validation_Rules/CustomRule/#validationCallback}\r\n * \r\n * [DxForm]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/Form/Getting_Started_with_Form/}\r\n * 的[items]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxForm/Configuration/#items}的\r\n * [validationCallback]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxValidator/Validation_Rules/CustomRule/#validationCallback}適用，用來取得驗證當下其他欄位的值。\r\n * @param option \r\n * @returns \r\n */\r\nexport const getFieldDataFromValidationCallbackData = (\r\n\toption: ValidationCallbackData,\r\n\tdataField: string\r\n) => {\r\n\treturn option.validator.instance().option('validationGroup')?.option(\"formData\")[dataField];\r\n}\r\n\r\n/**\r\n * [DxFormComponent]{@link https://js.devexpress.com/Angular/Documentation/Guide/UI_Components/Form/Overview/}\r\n * \r\n * 1. 透過[getEditor]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxForm/Methods/#getEditordataField}取得editor與element\r\n * \r\n * 2. 利用[Validator]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxValidator/}的[getInstance]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxValidator/Methods/#getInstanceelement}\r\n * element取得validator的instance，並用這個instance觸發驗證。\r\n *\r\n * 注意: 不適用template的custom editor，因為getEditor無法取得editor。\r\n * \r\n * @param dataField 欄位\r\n * @param form DxFormComponent\r\n */\r\nexport const validateADxFormField = (dataField: string, form: DxFormComponent) => {\r\n\tconst editor = form.instance.getEditor(dataField)\r\n\tconst element = editor.element()\r\n\tconst validationInstance = Validator.getInstance(element) as Validator;\r\n\tvalidationInstance.validate();\r\n}","import type { Properties } from 'devextreme/ui/form';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\nimport { htmlProperties } from 'src/app/shared/htmlProperties';\r\nimport { getFieldDataFromValidationCallbackData } from 'src/app/shared/utils/validation/form';\r\n\r\nconst formItems: Properties['items'] = [\r\n    {\r\n        itemType: 'group',\r\n        name: 'BasicGroup',\r\n        cssClass: 'BasicGroup',\r\n        caption: '基本',\r\n        items: [\r\n            {\r\n                dataField: 'SpecifiedTenantId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '指定租戶'\r\n                },\r\n            },\r\n            {\r\n                dataField: 'name',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '通知名稱'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'notificationProviderIds',\r\n                template: 'notificationProviderIds',\r\n                label: {\r\n                    visible: false,\r\n                    text: '通知提供者 id (可複選)'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'isSendToAllReceivers',\r\n                template: 'isSendToAllReceivers',\r\n                cssClass: 'isSendToAllReceivers',\r\n                label: {\r\n                    text: '接收者'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'ReceiversGroup',\r\n                cssClass: 'ReceiversGroup',\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'receiverIds',\r\n                        template: 'receiverIds',\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback: (option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收者 (可複選)'\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'receiverGroupIds',\r\n                        template: 'receiverGroupIds',\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback: (option) => {\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收群組 (可複選)'\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'topicIds',\r\n                        template: 'topicIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '主題 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback: (option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        receiverIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'SettingGroup',\r\n        cssClass: 'SettingGroup',\r\n        caption: '設定',\r\n        items: [\r\n            {\r\n                dataField: 'isIndependentNotificationSettingUsing',\r\n                template: 'isIndependentNotificationSettingUsing',\r\n                cssClass: 'isIndependentNotificationSettingUsing',\r\n                label: {\r\n                    text: '通知設定'\r\n                }\r\n            },\r\n            {\r\n                dataField: 'notificationSettings',\r\n                template: 'notificationSettings',\r\n                cssClass: 'notificationSettings',\r\n                label: {\r\n                    visible: false\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'NotificationContentGroup',\r\n        cssClass: 'NotificationContentGroup',\r\n        caption: '通知內容',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'isUsingTemplate',\r\n                template: 'isUsingTemplate',\r\n                cssClass: 'isUsingTemplate',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'notificationCategoryId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '通知分類 id',\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'title',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '標題'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'subtitle',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '子標題'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'CustomContentGroup',\r\n                cssClass: 'CustomContentGroup',\r\n                colSpan: 2,\r\n                colCount: 8,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContent',\r\n                        editorType: 'dxTextArea',\r\n                        editorOptions: {\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: '文字內容'\r\n                        },\r\n                        colSpan: 3\r\n                    },\r\n                    {\r\n                        dataField: 'htmlContent',\r\n                        editorType: 'dxHtmlEditor',\r\n                        editorOptions: {\r\n                            ...htmlProperties,\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: 'HTML 內容'\r\n                        },\r\n                        colSpan: 5\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'NotificationTemplateGroup',\r\n                cssClass: 'NotificationTemplateGroup NotificationTemplateGroup--inactive',\r\n                colSpan: 2,\r\n                colCount: 2,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateId',\r\n                        cssClass: 'textContentNotificationTemplateId',\r\n                        editorType: 'dxSelectBox',\r\n                        label: {\r\n                            text: '通知模板'\r\n                        },\r\n                        editorOptions: {\r\n                            placeholder: '請選擇...'\r\n                        }\r\n                    },\r\n                    {\r\n                        itemType: 'empty'\r\n                    },\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateArgs',\r\n                        template: 'textContentNotificationTemplateArgs',\r\n                        label: {\r\n                            visible: false\r\n                        },\r\n                        colSpan: 2,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'EndpointGroup',\r\n                cssClass: 'EndpointGroup',\r\n                colSpan: 2,\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'notificationDataFetchEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: '取得通知資料 Endpoint'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'hookEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: 'Hook'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'isFetchNotificationDataByEachReceiver',\r\n                        editorType: 'dxCheckBox',\r\n                        cssClass: 'basic-form-checkbox',\r\n                        label: {\r\n                            text: '是否依各通知接收者取得資料'\r\n                        },\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nconst formData: Properties['formData'] = {\r\n    notificationProviderIds: [],\r\n    isSendToAllReceivers: true,\r\n    isIndependentNotificationSettingUsing: false,\r\n    isUsingTemplate: false,\r\n    isFetchNotificationDataByEachReceiver: false,\r\n    receiverIds: [],\r\n    receiverGroupIds: [],\r\n    topicIds: [],\r\n    notificationSettings: [],\r\n    notificationCategoryId: '',\r\n    title: '',\r\n    subTitle: '',\r\n    textContent: '',\r\n    htmlContent: '',\r\n    textContentNotificationTemplateId: '',\r\n    textContentNotificationTemplateArgs: '',\r\n    htmlContentNotificationTemplateId: '',\r\n    htmlContentNotificationTemplateArgs: '',\r\n    notificationDataFetchEndpoint: '',\r\n    hookEndpoint: ''\r\n}\r\n\r\nexport const formProperties: Properties = {\r\n    colCount: 1,\r\n    items: formItems,\r\n    formData,\r\n    elementAttr: { class: 'custom-form create-form' }\r\n};","import type { Properties } from 'devextreme/ui/form';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\nimport { htmlProperties } from 'src/app/shared/htmlProperties';\r\nimport { getFieldDataFromValidationCallbackData } from 'src/app/shared/utils/validation/form';\r\n\r\nconst formItems: Properties['items'] = [\r\n    {\r\n        itemType: 'group',\r\n        name: 'BasicGroup',\r\n        cssClass: 'BasicGroup',\r\n        caption: '基本',\r\n        items: [\r\n            {\r\n                dataField: 'SpecifiedTenantId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '指定租戶'\r\n                },\r\n            },\r\n            {\r\n                dataField: 'name',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '通知名稱'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'notificationProviderIds',\r\n                template: 'notificationProviderIds',\r\n                label: {\r\n                    visible: false,\r\n                    text: '通知提供者 id (可複選)'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'isSendToAllReceivers',\r\n                template: 'isSendToAllReceivers',\r\n                cssClass: 'isSendToAllReceivers',\r\n                label: {\r\n                    text: '接收者'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'ReceiversGroup',\r\n                cssClass: 'ReceiversGroup',\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'receiverIds',\r\n                        template: 'receiverIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收者 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback: (option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    },\r\n                    {\r\n                        dataField: 'receiverGroupIds',\r\n                        template: 'receiverGroupIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收群組 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback: (option) => {\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    },\r\n                    {\r\n                        dataField: 'topicIds',\r\n                        template: 'topicIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '主題 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback: (option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        receiverIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'SettingGroup',\r\n        cssClass: 'SettingGroup',\r\n        caption: '設定',\r\n        items: [\r\n            {\r\n                dataField: 'isIndependentNotificationSettingUsing',\r\n                template: 'isIndependentNotificationSettingUsing',\r\n                cssClass: 'isIndependentNotificationSettingUsing',\r\n                label: {\r\n                    text: '通知設定'\r\n                }\r\n            },\r\n            {\r\n                dataField: 'notificationSettings',\r\n                template: 'notificationSettings',\r\n                cssClass: 'notificationSettings',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'SchedulePlanGroup',\r\n        cssClass: 'SchedulePlanGroup',\r\n        caption: '預約時間計劃',\r\n        items: [\r\n            {\r\n                dataField: 'notificationSchedulePlans',\r\n                template: 'reserveNotificationSchedulePlans',\r\n                cssClass: 'notificationSchedulePlans',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'NotificationContentGroup',\r\n        cssClass: 'NotificationContentGroup',\r\n        caption: '通知內容',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'isUsingTemplate',\r\n                template: 'isUsingTemplate',\r\n                cssClass: 'isUsingTemplate',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'notificationCategoryId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '通知分類 id',\r\n                },\r\n                editorOptions: {\r\n                    placeholder: '請選擇...'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'title',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '標題'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'subtitle',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '子標題'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'CustomContentGroup',\r\n                cssClass: 'CustomContentGroup',\r\n                colSpan: 2,\r\n                colCount: 8,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContent',\r\n                        editorType: 'dxTextArea',\r\n                        editorOptions: {\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: '文字內容'\r\n                        },\r\n                        colSpan: 3\r\n                    },\r\n                    {\r\n                        dataField: 'htmlContent',\r\n                        editorType: 'dxHtmlEditor',\r\n                        editorOptions: {\r\n                            ...htmlProperties,\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: 'HTML 內容'\r\n                        },\r\n                        colSpan: 5\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'NotificationTemplateGroup',\r\n                cssClass: 'NotificationTemplateGroup NotificationTemplateGroup--inactive',\r\n                colSpan: 2,\r\n                colCount: 2,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateId',\r\n                        cssClass: 'textContentNotificationTemplateId',\r\n                        editorType: 'dxSelectBox',\r\n                        label: {\r\n                            text: '通知模板'\r\n                        },\r\n                        editorOptions: {\r\n                            placeholder: '請選擇...'\r\n                        }\r\n                    },\r\n                    {\r\n                        itemType: 'empty'\r\n                    },\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateArgs',\r\n                        template: 'textContentNotificationTemplateArgs',\r\n                        label: {\r\n                            visible: false\r\n                        },\r\n                        colSpan: 2,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'EndpointGroup',\r\n                cssClass: 'EndpointGroup',\r\n                colSpan: 2,\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'notificationDataFetchEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: '取得通知資料 Endpoint'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'hookEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: 'Hook'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'isFetchNotificationDataByEachReceiver',\r\n                        editorType: 'dxCheckBox',\r\n                        cssClass: 'basic-form-checkbox',\r\n                        label: {\r\n                            text: '是否依各通知接收者取得資料'\r\n                        },\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nconst formData: Properties['formData'] = {\r\n    notificationProviderIds: [],\r\n    isSendToAllReceivers: true,\r\n    isIndependentNotificationSettingUsing: false,\r\n    isUsingTemplate: false,\r\n    isFetchNotificationDataByEachReceiver: false,\r\n    receiverIds: [],\r\n    receiverGroupIds: [],\r\n    topicIds: [],\r\n    notificationSettings: [],\r\n    notificationCategoryId: '',\r\n    title: '',\r\n    subTitle: '',\r\n    textContent: '',\r\n    htmlContent: '',\r\n    textContentNotificationTemplateId: '',\r\n    textContentNotificationTemplateArgs: '',\r\n    htmlContentNotificationTemplateId: '',\r\n    htmlContentNotificationTemplateArgs: '',\r\n    notificationDataFetchEndpoint: '',\r\n    hookEndpoint: '',\r\n    notificationSchedulePlans: []\r\n}\r\n\r\nexport const formProperties: Properties = {\r\n    colCount: 1,\r\n    items: formItems,\r\n    formData,\r\n    elementAttr: { class: 'custom-form create-form' }\r\n};","import type { Properties } from 'devextreme/ui/form';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\nimport { htmlProperties } from 'src/app/shared/htmlProperties';\r\nimport { getFieldDataFromValidationCallbackData } from 'src/app/shared/utils/validation/form';\r\n\r\nconst formItems: Properties['items'] = [\r\n    {\r\n        itemType: 'group',\r\n        name: 'BasicGroup',\r\n        cssClass: 'BasicGroup',\r\n        caption: '基本',\r\n        items: [\r\n            {\r\n                dataField: 'SpecifiedTenantId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '指定租戶'\r\n                },\r\n            },\r\n            {\r\n                dataField: 'name',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '通知名稱'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'notificationProviderIds',\r\n                template: 'notificationProviderIds',\r\n                label: {\r\n                    visible: false,\r\n                    text: '通知提供者 id (可複選)'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'isSendToAllReceivers',\r\n                template: 'isSendToAllReceivers',\r\n                cssClass: 'isSendToAllReceivers',\r\n                label: {\r\n                    text: '接收者'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'ReceiversGroup',\r\n                cssClass: 'ReceiversGroup',\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'receiverIds',\r\n                        template: 'receiverIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收者 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback :(option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    },\r\n                    {\r\n                        dataField: 'receiverGroupIds',\r\n                        template: 'receiverGroupIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收群組 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback :(option) => {\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    },\r\n                    {\r\n                        dataField: 'topicIds',\r\n                        template: 'topicIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '主題 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback :(option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        receiverIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'SettingGroup',\r\n        cssClass: 'SettingGroup',\r\n        caption: '設定',\r\n        items: [\r\n            {\r\n                dataField: 'isIndependentNotificationSettingUsing',\r\n                template: 'isIndependentNotificationSettingUsing',\r\n                cssClass: 'isIndependentNotificationSettingUsing',\r\n                label: {\r\n                    text: '通知設定'\r\n                }\r\n            },\r\n            {\r\n                dataField: 'notificationSettings',\r\n                template: 'notificationSettings',\r\n                cssClass: 'notificationSettings',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'SchedulePlanGroup',\r\n        cssClass: 'SchedulePlanGroup',\r\n        caption: '重複時間計劃',\r\n        items: [\r\n            {\r\n                dataField: 'notificationSchedulePlans',\r\n                template: 'recurringNotificationSchedulePlans',\r\n                cssClass: 'notificationSchedulePlans',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'NotificationContentGroup',\r\n        cssClass: 'NotificationContentGroup',\r\n        caption: '通知內容',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'isUsingTemplate',\r\n                template: 'isUsingTemplate',\r\n                cssClass: 'isUsingTemplate',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'notificationCategoryId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '通知分類 id',\r\n                },\r\n                editorOptions: {\r\n                    placeholder: '請選擇...'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'title',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '標題'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'subtitle',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '子標題'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'CustomContentGroup',\r\n                cssClass: 'CustomContentGroup',\r\n                colSpan: 2,\r\n                colCount: 8,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContent',\r\n                        editorType: 'dxTextArea',\r\n                        editorOptions: {\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: '文字內容'\r\n                        },\r\n                        colSpan: 3\r\n                    },\r\n                    {\r\n                        dataField: 'htmlContent',\r\n                        editorType: 'dxHtmlEditor',\r\n                        editorOptions: {\r\n                            ...htmlProperties,\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: 'HTML 內容'\r\n                        },\r\n                        colSpan: 5\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'NotificationTemplateGroup',\r\n                cssClass: 'NotificationTemplateGroup NotificationTemplateGroup--inactive',\r\n                colSpan: 2,\r\n                colCount: 2,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateId',\r\n                        cssClass: 'textContentNotificationTemplateId',\r\n                        editorType: 'dxSelectBox',\r\n                        label: {\r\n                            text: '通知模板'\r\n                        },\r\n                        editorOptions: {\r\n                            placeholder: '請選擇...'\r\n                        }\r\n                    },\r\n                    {\r\n                        itemType: 'empty'\r\n                    },\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateArgs',\r\n                        template: 'textContentNotificationTemplateArgs',\r\n                        label: {\r\n                            visible: false\r\n                        },\r\n                        colSpan: 2,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'EndpointGroup',\r\n                cssClass: 'EndpointGroup',\r\n                colSpan: 2,\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'notificationDataFetchEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: '取得通知資料 Endpoint'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'hookEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: 'Hook'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'isFetchNotificationDataByEachReceiver',\r\n                        editorType: 'dxCheckBox',\r\n                        cssClass: 'basic-form-checkbox',\r\n                        label: {\r\n                            text: '是否依各通知接收者取得資料'\r\n                        },\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nconst formData: Properties['formData'] = {\r\n    notificationProviderIds: [],\r\n    isSendToAllReceivers: true,\r\n    isIndependentNotificationSettingUsing: false,\r\n    isUsingTemplate: false,\r\n    isFetchNotificationDataByEachReceiver: false,\r\n    receiverIds: [],\r\n    receiverGroupIds: [],\r\n    topicIds: [],\r\n    notificationSettings: [],\r\n    notificationCategoryId: '',\r\n    title: '',\r\n    subTitle: '',\r\n    textContent: '',\r\n    htmlContent: '',\r\n    textContentNotificationTemplateId: '',\r\n    textContentNotificationTemplateArgs: '',\r\n    htmlContentNotificationTemplateId: '',\r\n    htmlContentNotificationTemplateArgs: '',\r\n    notificationDataFetchEndpoint: '',\r\n    hookEndpoint: '',\r\n    notificationSchedulePlans: []\r\n}\r\n\r\nexport const formProperties: Properties = {\r\n    colCount: 1,\r\n    items: formItems,\r\n    formData,\r\n    elementAttr: { class: 'custom-form create-form' }\r\n};","import type { Properties } from 'devextreme/ui/form';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\nimport { htmlProperties } from 'src/app/shared/htmlProperties';\r\nimport { getFieldDataFromValidationCallbackData } from 'src/app/shared/utils/validation/form';\r\n\r\nconst formItems: Properties['items'] = [\r\n    {\r\n        itemType: 'group',\r\n        name: 'CronExpressionGroup',\r\n        cssClass: 'CronExpressionGroup',\r\n        caption: '',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'expectedPushCount',\r\n                editorType: 'dxNumberBox',\r\n                cssClass: 'expectedPushCount',\r\n                label: {\r\n                    text: '預計推送次數',\r\n                },\r\n                editorOptions: {\r\n                    min: 1\r\n                },\r\n                validationRules: [\r\n                    {\r\n                        type: 'custom',\r\n                        message: '預計推送次數與預計結束時間請擇一填入。',\r\n                        reevaluate: true,\r\n                        validationCallback(option) {\r\n                            const currentValue = option.value;\r\n                            const expectedEndTime = getFieldDataFromValidationCallbackData(option, 'expectedEndTime')\r\n\r\n                            if (!currentValue && !expectedEndTime) {\r\n                                return false;\r\n                            }\r\n\r\n                            if (currentValue && expectedEndTime) {\r\n                                return false\r\n                            }\r\n\r\n                            return true;\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                dataField: 'expectedEndTime',\r\n                editorType: 'dxDateBox',\r\n                cssClass: 'expectedEndTime',\r\n                label: {\r\n                    text: '預計結束時間'\r\n                },\r\n                editorOptions: {\r\n                    type: 'datetime',\r\n                    onOpened: (e) => {\r\n                        e.component._popup.option(\"position\", {\r\n                            at: \"left\",\r\n                        });\r\n                    }\r\n                },\r\n                validationRules: [\r\n                    {\r\n                        type: 'custom',\r\n                        message: '預計推送次數與預計結束時間請擇一填入。',\r\n                        reevaluate: true,\r\n                        validationCallback(option) {\r\n                            const currentValue = option.value;\r\n                            const expectedPushCount = getFieldDataFromValidationCallbackData(option, 'expectedPushCount')\r\n                            if (!currentValue && !expectedPushCount) {\r\n                                return false;\r\n                            }\r\n                            if (currentValue && expectedPushCount) {\r\n                                return false\r\n                            }\r\n                            return true;\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'BasicGroup',\r\n        cssClass: 'BasicGroup',\r\n        caption: '基本',\r\n        items: [\r\n            {\r\n                dataField: 'SpecifiedTenantId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '指定租戶'\r\n                },\r\n            },\r\n            {\r\n                dataField: 'name',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '通知名稱'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'notificationProviderIds',\r\n                template: 'notificationProviderIds',\r\n                label: {\r\n                    visible: false,\r\n                    text: '通知提供者 id (可複選)'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'isSendToAllReceivers',\r\n                template: 'isSendToAllReceivers',\r\n                cssClass: 'isSendToAllReceivers',\r\n                label: {\r\n                    text: '接收者'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'ReceiversGroup',\r\n                cssClass: 'ReceiversGroup',\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'receiverIds',\r\n                        template: 'receiverIds',\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback :(option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收者 (可複選)'\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'receiverGroupIds',\r\n                        template: 'receiverGroupIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '接收群組 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback :(option) => {\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const topicIds = getFieldDataFromValidationCallbackData(option, 'topicIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverIds?.length ||\r\n                                        topicIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    },\r\n                    {\r\n                        dataField: 'topicIds',\r\n                        template: 'topicIds',\r\n                        label: {\r\n                            visible: false,\r\n                            text: '主題 (可複選)'\r\n                        },\r\n                        validationRules: [\r\n                            {\r\n                                type: 'custom',\r\n                                message: '接收者、接收者群組、主題必須選擇一項',\r\n                                reevaluate: true,\r\n                                validationCallback :(option) => {\r\n                                    const receiverGroupIds = getFieldDataFromValidationCallbackData(option, 'receiverGroupIds')\r\n                                    const receiverIds = getFieldDataFromValidationCallbackData(option, 'receiverIds')\r\n                                    const isSendToAllReceivers = getFieldDataFromValidationCallbackData(option, 'isSendToAllReceivers')\r\n                                    if (\r\n                                        isSendToAllReceivers ||\r\n                                        option.value?.length ||\r\n                                        receiverGroupIds?.length ||\r\n                                        receiverIds?.length\r\n                                    ) {\r\n                                        return true\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        ],\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'SettingGroup',\r\n        cssClass: 'SettingGroup',\r\n        caption: '設定',\r\n        items: [\r\n            {\r\n                dataField: 'isIndependentNotificationSettingUsing',\r\n                template: 'isIndependentNotificationSettingUsing',\r\n                cssClass: 'isIndependentNotificationSettingUsing',\r\n                label: {\r\n                    text: '通知設定'\r\n                }\r\n            },\r\n            {\r\n                dataField: 'notificationSettings',\r\n                template: 'notificationSettings',\r\n                cssClass: 'notificationSettings',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'NotificationContentGroup',\r\n        cssClass: 'NotificationContentGroup',\r\n        caption: '通知內容',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'isUsingTemplate',\r\n                template: 'isUsingTemplate',\r\n                cssClass: 'isUsingTemplate',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'notificationCategoryId',\r\n                editorType: 'dxSelectBox',\r\n                label: {\r\n                    text: '通知分類 id',\r\n                },\r\n                editorOptions: {\r\n                    placeholder: '請選擇...'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'title',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '標題'\r\n                },\r\n                validationRules: [requiredValidationRule]\r\n            },\r\n            {\r\n                dataField: 'subtitle',\r\n                editorType: 'dxTextBox',\r\n                label: {\r\n                    text: '子標題'\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'CustomContentGroup',\r\n                cssClass: 'CustomContentGroup',\r\n                colSpan: 2,\r\n                colCount: 8,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContent',\r\n                        editorType: 'dxTextArea',\r\n                        editorOptions: {\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: '文字內容'\r\n                        },\r\n                        colSpan: 3\r\n                    },\r\n                    {\r\n                        dataField: 'htmlContent',\r\n                        editorType: 'dxHtmlEditor',\r\n                        editorOptions: {\r\n                            ...htmlProperties,\r\n                            height: '240px'\r\n                        },\r\n                        label: {\r\n                            text: 'HTML 內容'\r\n                        },\r\n                        colSpan: 5\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'NotificationTemplateGroup',\r\n                cssClass: 'NotificationTemplateGroup NotificationTemplateGroup--inactive',\r\n                colSpan: 2,\r\n                colCount: 2,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateId',\r\n                        cssClass: 'textContentNotificationTemplateId',\r\n                        editorType: 'dxSelectBox',\r\n                        label: {\r\n                            text: '通知模板'\r\n                        },\r\n                        editorOptions: {\r\n                            placeholder: '請選擇...'\r\n                        }\r\n                    },\r\n                    {\r\n                        itemType: 'empty'\r\n                    },\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateArgs',\r\n                        template: 'textContentNotificationTemplateArgs',\r\n                        label: {\r\n                            visible: false\r\n                        },\r\n                        colSpan: 2,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'EndpointGroup',\r\n                cssClass: 'EndpointGroup',\r\n                colSpan: 2,\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'notificationDataFetchEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: '取得通知資料 Endpoint'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'hookEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        label: {\r\n                            text: 'Hook'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'isFetchNotificationDataByEachReceiver',\r\n                        editorType: 'dxCheckBox',\r\n                        cssClass: 'basic-form-checkbox',\r\n                        label: {\r\n                            text: '是否依各通知接收者取得資料'\r\n                        },\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nconst formData: Properties['formData'] = {\r\n    notificationProviderIds: [],\r\n    isSendToAllReceivers: true,\r\n    isIndependentNotificationSettingUsing: false,\r\n    isUsingTemplate: false,\r\n    isFetchNotificationDataByEachReceiver: false,\r\n    receiverIds: [],\r\n    receiverGroupIds: [],\r\n    topicIds: [],\r\n    notificationSettings: [],\r\n    notificationCategoryId: '',\r\n    title: '',\r\n    subTitle: '',\r\n    textContent: '',\r\n    htmlContent: '',\r\n    textContentNotificationTemplateId: '',\r\n    textContentNotificationTemplateArgs: '',\r\n    htmlContentNotificationTemplateId: '',\r\n    htmlContentNotificationTemplateArgs: '',\r\n    notificationDataFetchEndpoint: '',\r\n    hookEndpoint: '',\r\n    expectedPushCount: null,\r\n    expectedEndTime: null,\r\n    cronExpression: ''\r\n}\r\n\r\nexport const formProperties: Properties = {\r\n    colCount: 1,\r\n    items: formItems,\r\n    formData,\r\n    elementAttr: { class: 'custom-form create-form' }\r\n};","<h2 class=\"create-page-title\">{{createPageTitle}}</h2>\r\n<dx-form\r\n    #form\r\n    appFormFeature\r\n    [formProperties]=\"formProperties\"\r\n    [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n    [dataFieldTranslationKeysMapping]=\"dataFieldTranslationKeysMapping\"\r\n    (onFieldDataChanged)=\"onFieldDataChanged($event)\"\r\n\r\n>\r\n    <app-notification-tag-box\r\n        *dxTemplate=\"let templateData of 'notificationProviderIds'\"\r\n        [dataSource]=\"templateData.editorOptions.dataSource\"\r\n        [label]=\"formProperties.items[0 + (isUsingCronExpressions && 1)].items[2].label.text\"\r\n        [isRequired]=\"true\"\r\n        [(value)]=\"formProperties.formData.notificationProviderIds\"\r\n    >\r\n    </app-notification-tag-box>\r\n\r\n    <app-notification-radio-button\r\n        *dxTemplate=\"let templateData of 'isSendToAllReceivers'\"\r\n        [dataSource]=\"[\r\n            { name: '所有人', value: true },\r\n            { name: '指定接收者', value: false }\r\n        ]\"\r\n        [(value)]=\"formProperties.formData.isSendToAllReceivers\"\r\n        (valueChange)=\"toggleNotificationRadioButton($event, 'isSendToAllReceivers')\"\r\n    >\r\n    </app-notification-radio-button>\r\n\r\n    <app-notification-tag-box\r\n        *dxTemplate=\"let templateData of 'receiverIds'\"\r\n        [dataSource]=\"templateData.editorOptions.dataSource\"\r\n        [label]=\"formProperties.items[0 + (isUsingCronExpressions && 1)].items[4].items[0].label.text\"\r\n        [(value)]=\"formProperties.formData.receiverIds\"\r\n        [hidden]=\"formProperties.formData.isSendToAllReceivers\"\r\n        (valueChange)=\"form.instance.updateData('receiverIds', $event)\"   \r\n    >\r\n    </app-notification-tag-box>\r\n\r\n    <app-notification-tree-view\r\n        *dxTemplate=\"let templateData of 'receiverGroupIds'\"\r\n        [dataSource]=\"templateData.editorOptions.dataSource\"\r\n        [label]=\"formProperties.items[0 + (isUsingCronExpressions && 1)].items[4].items[1].label.text\"\r\n        [selected]=\"formProperties.formData.receiverGroupIds\"\r\n        [hidden]=\"formProperties.formData.isSendToAllReceivers\"\r\n        (selectedChange)=\"form.instance.updateData('receiverGroupIds', $event)\"\r\n    >\r\n    </app-notification-tree-view>\r\n    \r\n    <!-- https://supportcenter.devexpress.com/ticket/details/t1095478/dxform-onfielddatachanged-event-when-custom-editor-is-used -->\r\n    <!-- 使用了custom editor時候，使用雙向綁定formData沒有觸發onFieldDataChanged, 因此使用form的updateData觸發。 -->\r\n    <app-notification-tag-box\r\n        *dxTemplate=\"let templateData of 'topicIds'\"\r\n        [dataSource]=\"templateData.editorOptions.dataSource\"\r\n        [label]=\"formProperties.items[0 + (isUsingCronExpressions && 1)].items[4].items[2].label.text\"\r\n        [value]=\"formProperties.formData.topicIds\"\r\n        [hidden]=\"formProperties.formData.isSendToAllReceivers\"\r\n        (valueChange)=\"form.instance.updateData('topicIds', $event)\"\r\n    >\r\n    </app-notification-tag-box>\r\n\r\n    <app-notification-radio-button\r\n        *dxTemplate=\"let templateData of 'isIndependentNotificationSettingUsing'\"\r\n        [dataSource]=\"[\r\n            { name: '套用共用設定', value: false },\r\n            { name: '另行設定', value: true }\r\n        ]\"\r\n        [(value)]=\"formProperties.formData.isIndependentNotificationSettingUsing\"\r\n    >\r\n    </app-notification-radio-button>\r\n\r\n    <app-notification-setting-items\r\n        *dxTemplate=\"let templateData of 'notificationSettings'\"\r\n        [isIndependentNotificationSettingUsing]=\"formProperties.formData.isIndependentNotificationSettingUsing\"\r\n        [(value)]=\"formProperties.formData.notificationSettings\"\r\n    >\r\n    </app-notification-setting-items>\r\n\r\n    <app-notification-radio-button\r\n        *dxTemplate=\"let templateData of 'isUsingTemplate'\"\r\n        [dataSource]=\"[\r\n            { name: '自訂', value: false },\r\n            { name: '模板', value: true }\r\n        ]\"\r\n        [(value)]=\"formProperties.formData.isUsingTemplate\"\r\n        (valueChange)=\"toggleNotificationRadioButton($event, 'isUsingTemplate')\"\r\n    >\r\n    </app-notification-radio-button>\r\n\r\n    <app-notification-template-args\r\n        *dxTemplate=\"let templateData of 'textContentNotificationTemplateArgs'\"\r\n        [notificationTemplateId]=\"formProperties.formData.textContentNotificationTemplateId\"\r\n        [(value)]=\"formProperties.formData.textContentNotificationTemplateArgs\"\r\n    >\r\n    </app-notification-template-args>\r\n\r\n    <app-recurring-notification-schedule-plan\r\n        *dxTemplate=\"let cellInfo of 'recurringNotificationSchedulePlans'\"\r\n        [(value)]=\"formProperties.formData.notificationSchedulePlans\"\r\n    >\r\n    </app-recurring-notification-schedule-plan>\r\n\r\n    <app-reserve-notification-schedule-plan\r\n        *dxTemplate=\"let cellInfo of 'reserveNotificationSchedulePlans'\"\r\n        [(value)]=\"formProperties.formData.notificationSchedulePlans\"\r\n    >\r\n    </app-reserve-notification-schedule-plan> \r\n</dx-form>\r\n\r\n<div class=\"form-buttons\">\r\n    <dx-button\r\n        appCustomButton \r\n        text=\"儲存\"\r\n        [elementAttr]=\"{class: 'custom-button custom-button--blue'}\"\r\n        (onClick)=\"handleSubmit()\"\r\n    >\r\n    </dx-button>\r\n    <dx-button\r\n        appCustomButton \r\n        text=\"取消\"\r\n        [elementAttr]=\"{class: 'custom-button'}\"\r\n        (onClick)=\"handleCancel()\"\r\n    >\r\n    </dx-button>\r\n</div>","import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateNotificationInfoComponent } from './components/create-notification-info.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CreateNotificationInfoComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CreateNotificationInfoRoutingModule { }\r\n","import { AfterViewInit, Component, OnInit, ViewChild, } from '@angular/core';\r\nimport { FieldDataChangedEvent, Properties } from 'devextreme/ui/form';\r\nimport { DataFieldLookUpSourceMapping, DataFieldTranslationKeysMapping } from 'src/app/shared/typing';\r\nimport { dataFieldTranslationKeysMapping } from '../config/datafield-translation-mapping';\r\nimport { dataFieldLookupSourceMapping as instantDataFieldLookupSourceMapping } from '../config/lookup/instant-datafield-translation-mapping';\r\nimport { dataFieldLookupSourceMapping as reserveDataFieldLookupSourceMapping } from '../config/lookup/reserve-datafield-translation-mapping';\r\nimport { dataFieldLookupSourceMapping as recurringDataFieldLookupSourceMapping } from '../config/lookup/recurring-datafield-translation-mapping';\r\nimport { dataFieldLookupSourceMapping as cronExpressionsDataFieldLookupSourceMapping } from '../config/lookup/cron-expressions-instant-datafield-translation-mapping';\r\nimport { DxFormComponent } from 'devextreme-angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { formProperties as instantFormProperties } from '../config/formProperties/instant-notification-form-properties'\r\nimport { formProperties as reserveFormProperties } from '../config/formProperties/reserve-notification-form-properties'\r\nimport { formProperties as recurringFormProperties } from '../config/formProperties/recurring-notification-form-properties'\r\nimport { formProperties as cronExpressionsFormProperties } from '../config/formProperties/cron-expressions-form-properites'\r\nimport { AppRestService } from 'src/app/shared/service/rest.service';\r\nimport { apiDefaultName } from 'src/app/shared/const';\r\nimport { ConfigStateService, LocalizationService } from '@abp/ng.core';\r\nimport { cloneDeep } from 'lodash'\r\nimport validationEngine from \"devextreme/ui/validation_engine\"\r\nimport { validateADxFormField } from 'src/app/shared/utils/validation/form';\r\n@Component({\r\n  selector: 'app-create-notification-info',\r\n  templateUrl: 'create-notification-info.component.html',\r\n  styleUrls: ['./create-notification-info.component.scss'],\r\n})\r\nexport class CreateNotificationInfoComponent implements OnInit, AfterViewInit {\r\n  /**\r\n   * 取得表單元件\r\n   */\r\n  @ViewChild('form') form: DxFormComponent\r\n\r\n  /**\r\n   * [form]{@link CreateNotificationInfoComponent#form}的設定檔，需配合目前新增頁面的父層(即時通知、預約通知... etc)，已取得正確的設定檔\r\n   * \r\n   * 參考{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxForm/Configuration/}\r\n   */\r\n  formProperties: Properties\r\n\r\n  /**\r\n   * 選單與資料路徑對應設定檔案\r\n   * \r\n   * {@link FormFeatureDirective}接收後用來設定[form]{@link https://js.devexpress.com/Angular/Documentation/Guide/UI_Components/Form/Getting_Started_with_Form/}的新增表單裡的選單。\r\n   */\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping\r\n\r\n  /**\r\n   * 選單與翻譯鍵對應設定檔案\r\n   * \r\n   * {@link FormFeatureDirective}接收後用來設定欄位名稱的翻譯。\r\n   */\r\n  dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = dataFieldTranslationKeysMapping\r\n\r\n  /**\r\n   * 新增頁面的標題，判斷目前替哪個項目做新增的行為\r\n   */\r\n  createPageTitle: string = '新增'\r\n\r\n  /**\r\n   * 租戶ID，需使用[configStateService]{@link CreateNotificationInfoComponent#configStateService}取得\r\n   */\r\n  SpecifiedTenantId: string\r\n\r\n  /**\r\n   * 新增頁面的父層URL(即時通知、預約通知... etc)\r\n   */\r\n  parentURL: string = './'\r\n\r\n  /**\r\n   * 新增頁面類型(instant、reserved... etc)的POST URL\r\n   */\r\n  postURL: string\r\n\r\n  /**\r\n   * 是否為cron expressions的新增使用\r\n   * \r\n   * 如果isUsingCronExpressions===true的話，HTML結構中的設定檔，在第一層items陣列必須位置+1，才能取得正確的設定\r\n   */\r\n  isUsingCronExpressions: boolean = false\r\n\r\n  /**\r\n   * 記錄cronExpression\r\n   */\r\n  cronExpression: string\r\n\r\n  /**\r\n   * 參考[route]{@link https://angular.dev/guide/routing/common-router-tasks}、[router]{@link https://angular.dev/guide/routing/common-router-tasks}、[configStateService]{@link https://abp.io/docs/latest/framework/ui/angular/config-state-service?_redirected=B8ABF606AA1BDF5C629883DF1061649A}\r\n   * \r\n   * @param route 取得URL路徑，判斷頁面的父層的URL，已取得正確的[createPageTitle]{@link CreateNotificationInfoComponent#createPageTitle}\r\n   * @param configStateService\r\n   * @param appRestService\r\n   * @param notificationTagBoxService\r\n   */\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private configStateService: ConfigStateService,\r\n    private appRestService: AppRestService,\r\n    private localization: LocalizationService\r\n  ) { }\r\n  /**\r\n   * 使用[configStateService]{@link CreateNotificationInfoComponent#configStateService}取得目前租戶ID\r\n   * \r\n   * 呼叫[getParentRouteURL]{@link CreateNotificationInfoComponent#getParentRouteURL}，已取得新增頁面的父層URL\r\n   */\r\n  ngOnInit() {\r\n    this.SpecifiedTenantId = this.configStateService.getOne('currentTenant').id\r\n    this.getParentRouteURL(this.route);\r\n    if (this.SpecifiedTenantId) {\r\n      (this.formProperties as any).items[0 + (this.isUsingCronExpressions && 1)].items[0].visible = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 元件渲染後，根據URL中是否有cron-expressions，判斷是否為cron-expressions的新增頁面，並取得該cronExpression的解釋，\r\n   * 放入表單的caption中\r\n   */\r\n  ngAfterViewInit() {\r\n    if (this.parentURL.includes('cron-expressions')) {\r\n      this.cronExpression = decodeURIComponent(this.parentURL.split('/')[2])\r\n      this.form.instance.updateData('cronExpression', this.cronExpression)\r\n\r\n      this.appRestService.request<void, { description: string }>({\r\n        method: 'GET',\r\n        url: `/api/app/jbnotifier-admin/cron-expressions/description/${this.parentURL.split('/')[2]}`\r\n      }).subscribe((res) => {\r\n        this.form.instance.option('items[0].caption', `${res.description} | ${this.cronExpression}`)\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * [onFieldDataChanged]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxForm/Configuration/#onFieldDataChanged}\r\n   * [補充說明]{@link https://supportcenter.devexpress.com/ticket/details/t1095478/dxform-onfielddatachanged-event-when-custom-editor-is-used}\r\n   * \r\n   * 使用{@link validateADxFormField}在expectedPushCount與expectedEndTime變更時對指定欄位進行驗證。\r\n   * \r\n   * 使用[validationEngine]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/Common/Utils/validationEngine/}取得receiverIds, receiverGroupIds, topicIds的validator，並在變更時重新validate。\r\n   * \r\n   * 使用了custom editor時候，使用雙向綁定formData沒有觸發onFieldDataChanged, 因此使用form的updateData觸發。\r\n   * \r\n   * 只有cron expression的頁面的驗證位置不一樣。\r\n   * @param e \r\n   */\r\n  onFieldDataChanged(e: FieldDataChangedEvent) {\r\n    if (\r\n      (e.dataField === 'receiverIds' ||\r\n        e.dataField === 'receiverGroupIds' ||\r\n        e.dataField === 'topicIds') &&\r\n      (\r\n        this.parentURL === './instant-notification-infos/' ||\r\n        this.parentURL === './reserve-notification-infos/' ||\r\n        this.parentURL === './recurring-notification-infos/'\r\n      )\r\n    ) {\r\n      validationEngine['groups'][1].validators[2]?.validate();\r\n      validationEngine['groups'][1].validators[3]?.validate();\r\n      validationEngine['groups'][1].validators[4]?.validate();\r\n    }\r\n\r\n    if (\r\n      (e.dataField === 'receiverIds' ||\r\n        e.dataField === 'receiverGroupIds' ||\r\n        e.dataField === 'topicIds') &&\r\n      this.parentURL !== './instant-notification-infos/' &&\r\n      this.parentURL !== './reserve-notification-infos/' &&\r\n      this.parentURL !== './recurring-notification-infos/'\r\n    ) {\r\n      validationEngine['groups'][1].validators[4]?.validate();\r\n      validationEngine['groups'][1].validators[5]?.validate();\r\n      validationEngine['groups'][1].validators[6]?.validate();\r\n    }\r\n\r\n    if (\r\n      e.dataField === 'expectedPushCount' ||\r\n      e.dataField === 'expectedEndTime'\r\n    ) {\r\n      validateADxFormField('expectedPushCount', this.form);\r\n      validateADxFormField('expectedEndTime', this.form);\r\n    }\r\n  }\r\n  /**\r\n   * 使用[route]{@link CreateNotificationInfoComponent#route}已取得父層URL路徑，並判斷需要使用的[formProperties]{@link CreateNotificationInfoComponent#formProperties}、[createPageTitle]{@link CreateNotificationInfoComponent#createPageTitle}、[parentURL]{@link CreateNotificationInfoComponent#parentURL}、[postURL]{@link CreateNotificationInfoComponent#postURL}\r\n   * \r\n   * 呼叫[receiversValidateSelection]{@link CreateNotificationInfoComponent#receiversValidateSelection}配置接收者區塊的卡控\r\n   */\r\n  getParentRouteURL(route: ActivatedRoute) {\r\n    if (!route.parent) {\r\n      return;\r\n    }\r\n\r\n    const parentRoute = route.parent;\r\n    this.getParentRouteURL(parentRoute);\r\n\r\n    // 获取当前路由的 URL\r\n    const currentRouteUrl = parentRoute.snapshot.url.map(segment => segment.path).join('/');\r\n    this.parentURL = this.parentURL + (currentRouteUrl === 'create-notification-info' || !currentRouteUrl ? '' : currentRouteUrl + '/')\r\n    const localizationPermissionCreate = this.localization.instant('JbNotifier::Permission:Create')\r\n\r\n    switch (currentRouteUrl) {\r\n      case 'instant-notification-infos':\r\n        this.formProperties = cloneDeep(instantFormProperties)\r\n        this.dataFieldLookupSourceMapping = cloneDeep(instantDataFieldLookupSourceMapping)\r\n        this.createPageTitle = localizationPermissionCreate + this.localization.instant('JbNotifier::Menu:InstantNotifications')\r\n        this.postURL = '/api/app/instant-notifications';\r\n        break\r\n      case 'reserve-notification-infos':\r\n        this.formProperties = cloneDeep(reserveFormProperties)\r\n        this.dataFieldLookupSourceMapping = cloneDeep(reserveDataFieldLookupSourceMapping)\r\n        this.createPageTitle = localizationPermissionCreate + this.localization.instant('JbNotifier::Menu:ReservedNotifications')\r\n        this.postURL = '/api/app/reserved-notifications';\r\n        break\r\n      case 'recurring-notification-infos':\r\n        this.formProperties = cloneDeep(recurringFormProperties)\r\n        this.dataFieldLookupSourceMapping = cloneDeep(recurringDataFieldLookupSourceMapping)\r\n        this.createPageTitle = localizationPermissionCreate + this.localization.instant('JbNotifier::Menu:RecurringNotifications')\r\n        this.postURL = '/api/app/recurring-notifications';\r\n        break;\r\n      case 'cron-expressions':\r\n        this.formProperties = cloneDeep(cronExpressionsFormProperties)\r\n        this.dataFieldLookupSourceMapping = cloneDeep(cronExpressionsDataFieldLookupSourceMapping)\r\n        this.createPageTitle = localizationPermissionCreate + this.localization.instant('JbNotifier::Notification')\r\n        this.postURL = '/api/app/jbnotifier-admin/cron-expressions/notifications'\r\n        this.isUsingCronExpressions = true;\r\n        break\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 新增頁面接收者卡控初始化，避免一進入新增頁面就執行接收者區塊的卡控驗證\r\n   */\r\n  initReceiversValidateSelection = true\r\n\r\n  /**\r\n   * 判斷是否已經呼叫[updateData]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxForm/Methods/#updateDatadata}，\r\n   * 避免當每次判斷接收者區塊的陣列皆為空時，都會對其他接收者陣列使用[updateData]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxForm/Methods/#updateDatadata}\r\n   */\r\n  isReceiversValidateSelectionValidating = false\r\n\r\n  /**\r\n   * 當畫面中的radio group觸發時，判斷是哪個欄位的radio group，並給予對應的行為\r\n   * \r\n   * 當 key==='isSendToAllReceivers' 且 isSelected===false 時，\r\n   * 呼叫validationEngine{@link https://js.devexpress.com/Angular/Documentation/ApiReference/Common/Utils/validationEngine/}，\r\n   * 驗證 'receiverIds'、'receiverGroupIds'、'topicIds' 是否至少有一個欄位是有選取項目，如果路由不是 '即時通知'、'預約通知'、'重複通知' 的話，呼叫驗證的的位置會不同\r\n   * \r\n   * 根據isUsingTemplate與isSelected，更新通知內容區塊的CSS，並決定顯示自訂文字內容或是顯示模板\r\n   * \r\n   * @param isSelected 判斷radio group選擇的欄位為true或false\r\n   * @param key 判斷使用radio group的欄位名稱\r\n   */\r\n  toggleNotificationRadioButton(isSelected: boolean, key: string) {\r\n    if (key === 'isSendToAllReceivers' && !isSelected) {\r\n      if (this.parentURL !== './instant-notification-infos/' &&\r\n        this.parentURL !== './reserve-notification-infos/' &&\r\n        this.parentURL !== './recurring-notification-infos/') {\r\n        validationEngine['groups'][1].validators[4]?.validate();\r\n        validationEngine['groups'][1].validators[5]?.validate();\r\n        validationEngine['groups'][1].validators[6]?.validate();\r\n        return\r\n      }\r\n\r\n      validationEngine['groups'][1].validators[2]?.validate();\r\n      validationEngine['groups'][1].validators[3]?.validate();\r\n      validationEngine['groups'][1].validators[4]?.validate();\r\n      return\r\n    }\r\n\r\n    if (key === 'isUsingTemplate') {\r\n      this.form.instance.itemOption('NotificationContentGroup.NotificationTemplateGroup', 'cssClass', isSelected ? 'NotificationTemplateGroup' : 'NotificationTemplateGroup NotificationTemplateGroup--inactive');\r\n      this.form.instance.itemOption('NotificationContentGroup.CustomContentGroup', 'cssClass', isSelected ? 'CustomContentGroup CustomContentGroup--inactive' : 'CustomContentGroup');\r\n      return\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 新增，並判斷是否有必填欄位未填，新增完成後返回該通知類型的頁面\r\n   * \r\n   * 如果接收者選擇 '所有人' ，則將 'receiverIds'、'receiverGroupIds'、'topicIds' 設為空陣列\r\n   * \r\n   * 如果有使用通知模板的話，則將htmlContentNotificationTemplateId、htmlContentNotificationTemplateArgs與\r\n   * textContentNotificationTemplateId、textContentNotificationTemplateArgs的值設為一樣\r\n   * \r\n   * 如果沒使用通知模板，則將htmlContentNotificationTemplateId、htmlContentNotificationTemplateArgs與\r\n   * textContentNotificationTemplateId、textContentNotificationTemplateArgs的值設為空字串\r\n   */\r\n  handleSubmit() {\r\n    if (!this.form.instance.validate().isValid) {\r\n      return\r\n    }\r\n\r\n    const formData = cloneDeep(this.form.instance.option('formData'))\r\n    const SpecifiedTenantId = formData['SpecifiedTenantId']\r\n\r\n    if (formData.isSendToAllReceivers) {\r\n      formData.receiverIds = []\r\n      formData.receiverGroupId = []\r\n      formData.topicId = []\r\n    }\r\n\r\n    if (formData.isUsingTemplate) {\r\n      formData.htmlContentNotificationTemplateId = formData.textContentNotificationTemplateId\r\n      formData.htmlContentNotificationTemplateArgs = formData.textContentNotificationTemplateArgs\r\n    } else {\r\n      formData.htmlContentNotificationTemplateId = ''\r\n      formData.htmlContentNotificationTemplateArgs = ''\r\n      formData.textContentNotificationTemplateId = ''\r\n      formData.textContentNotificationTemplateArgs = ''\r\n    }\r\n\r\n    this.appRestService.request<any, void>(\r\n      {\r\n        method: 'POST',\r\n        url: this.postURL,\r\n        body: formData,\r\n        params: {\r\n          SpecifiedTenantId: SpecifiedTenantId\r\n        }\r\n      },\r\n      { apiName: apiDefaultName }\r\n    ).subscribe(() => {\r\n      if (this.parentURL.includes('cron-expressions')) {\r\n        const parentURLSplit = this.parentURL.split('/')\r\n        this.router.navigate([parentURLSplit.slice(1, 2).join(''), this.cronExpression])\r\n        return\r\n      }\r\n\r\n      this.router.navigate([this.parentURL])\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 取消新增時，必須返回上一頁\r\n   */\r\n  handleCancel() {\r\n    if (this.parentURL.includes('cron-expressions')) {\r\n      const parentURLSplit = this.parentURL.split('/')\r\n      this.router.navigate([parentURLSplit.slice(1, 2).join(''), this.cronExpression])\r\n      return\r\n    }\r\n\r\n    this.router.navigate([this.parentURL])\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { CreateNotificationInfoComponent } from './components/create-notification-info.component';\r\nimport { CreateNotificationInfoRoutingModule } from './create-notification-info-routing.module';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { NotificationTagBoxComponent } from \"../shared/components/notification/notification-tag-box/notification-tag-box.component\";\r\nimport { NotificationRadioButtonComponent } from \"../shared/components/notification/notification-radio-button/notification-radio-button.component\";\r\nimport { NotificationTreeViewComponent } from \"../shared/components/notification/notification-tree-view/notification-tree-view.component\";\r\nimport { NotificationSettingItemsComponent } from \"../shared/components/notification/notification-setting-items/notification-setting-items.component\";\r\nimport { NotificationTemplateArgsComponent } from \"../shared/components/notification/notification-template-args/notification-template-args.component\";\r\nimport { RecurringNotificationSchedulePlanComponent } from \"../shared/components/notification/recurring-notification-schedule-plan/recurring-notification-schedule-plan.component\";\r\nimport { ReserveNotificationSchedulePlanComponent } from \"../shared/components/notification/reserve-notification-schedule-plan/reserve-notification-schedule-plan.component\";\r\nimport { DxValidationGroupModule } from 'devextreme-angular';\r\n@NgModule({\r\n  declarations: [CreateNotificationInfoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CreateNotificationInfoRoutingModule,\r\n    SharedModule,\r\n    DXComponentsModule,\r\n    NotificationTagBoxComponent,\r\n    NotificationRadioButtonComponent,\r\n    NotificationTreeViewComponent,\r\n    NotificationSettingItemsComponent,\r\n    NotificationTemplateArgsComponent,\r\n    RecurringNotificationSchedulePlanComponent,\r\n    ReserveNotificationSchedulePlanComponent,\r\n    // DxValidationGroupModule\r\n  ],\r\n})\r\nexport class CreateNotificationInfoModule { }"],"x_google_ignoreList":[]}