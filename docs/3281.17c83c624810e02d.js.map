{"version":3,"file":"3281.17c83c624810e02d.js","mappings":"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","names":["columns","name","caption","dataType","filterOperations","filterOperationTypes","text","cRUDEndpoints","index","get","create","update","delete","dataFieldLookupSourceMapping","dataField","path","pathForSelectedDisplay","relatedDataValueAndQueryStringKeyMapping","queryStringKey","mapping","formItems","editorType","colSpan","editingPropertiesForCreating","popup","title","toolbarItems","toolbar","template","form","colCount","items","editingPropertiesForUpdating","i0","_r0","ReceiversComponent_ng_container_6_ng_container_1_ng_container_1_Template","ctx_r5","templateStore","getGridTemplates","template_r4","key","_c1","cellInfo_r6","ReceiversComponent_ng_container_6_ng_container_1_Template","routes","component","ReceiversComponent","constructor","gridDataSourceService","tenantChooser","configStateService","this","properties","editing","allowUpdating","allowDeleting","getOne$","subscribe","currentUser","tenantId","visible","tenantId$","tenandId","grid","instance","refresh","ngOnInit","gridDataSource","getDataSource","onRowPrepared","e","rowElement","style","height","static","t","i1","i2","i3","i4","core","Xpm","selectors","viewQuery","rf","ctx","$event","ReceiversComponent_app_grid_popup_bottom_toolbar_5_Template","ReceiversComponent_ng_container_6_Template","gridTemplates","canActivate","AuthGuard","PermissionGuard","ReceiversRoutingModule","oAB","cJS","RouterModule","forChild","ReceiversModule","CommonModule","SharedModule","DXComponentsModule","NotificationPagerComponent","TenantChooserModule"],"sourceRoot":"webpack:///","sources":["./src/app/receivers/config/columns.ts","./src/app/receivers/config/crud-endpoints.ts","./src/app/receivers/config/datafield-lookup-source-mapping.ts","./src/app/receivers/config/datafield-value-query-string-key-mapping.ts","./src/app/receivers/config/form-properties.ts","./src/app/receivers/components/receivers.component.html","./src/app/receivers/receivers-routing.module.ts","./src/app/receivers/components/receivers.component.ts","./src/app/receivers/receivers.module.ts"],"sourcesContent":["import { Column } from 'devextreme/ui/data_grid';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    name: 'tenantName',\r\n    caption: '租戶名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    name: 'subTenantName',\r\n    caption: '子租戶名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    name: 'outerId',\r\n    caption: '接收者外部Id',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    name: 'receiverName',\r\n    caption: '接收者名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n];","import { CRUDEndpoints } from \"src/app/shared/typing\";\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n  index: '/api/app/jbnotifier-admin/receivers',\r\n  get: '',\r\n  create: '',\r\n  update: '',\r\n  delete: '',\r\n};","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n  {\r\n    dataField: 'outerId',\r\n    path: '',\r\n    pathForSelectedDisplay: '',\r\n  },\r\n\r\n  {\r\n    dataField: 'subTenantId',\r\n    path: '',\r\n    pathForSelectedDisplay: '',\r\n  },\r\n];\r\n","import { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n  {\r\n    name: 'tenantName',\r\n    queryStringKey: 'TenantName',\r\n    mapping: ['tenant', 'name'],\r\n  },\r\n  {\r\n    name: 'subTenantName',\r\n    queryStringKey: 'SubTenantName',\r\n    mapping: ['subTenant', 'name'],\r\n  },\r\n  {\r\n    name: 'outerId',\r\n    queryStringKey: 'OuterId',\r\n    mapping: ['receiver', 'outerId'],\r\n  },\r\n  {\r\n    name: 'receiverName',\r\n    queryStringKey: 'Name',\r\n    mapping: ['receiver', 'name'],\r\n  },\r\n];","import { Editing } from 'devextreme/ui/data_grid';\r\n\r\nconst formItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'outerId',\r\n    editorType: 'dxSelectBox',\r\n    colSpan: 1,\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    editorType: 'dxTextBox',\r\n    colSpan: 1,\r\n  },\r\n  {\r\n    dataField: 'subTenantId',\r\n    editorType: 'dxSelectBox',\r\n    colSpan: 1,\r\n  },\r\n];\r\n/**\r\n * Properties for creating popup form.\r\n */\r\nexport const editingPropertiesForCreating: Editing = {\r\n  popup: {\r\n    title: '::',\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar',\r\n      },\r\n    ],\r\n  },\r\n  form: {\r\n    colCount: 2,\r\n    items: formItems,\r\n  },\r\n};\r\n\r\n/**\r\n * Properties for updating popup form.\r\n */\r\n\r\nexport const editingPropertiesForUpdating: Editing = {\r\n  popup: {\r\n    title: '::',\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar',\r\n      },\r\n    ],\r\n  },\r\n  form: {\r\n    colCount: 2,\r\n    items: formItems,\r\n  },\r\n};\r\n","<div class=\"custom-grid-container\">\r\n  <app-tenant-chooser></app-tenant-chooser>\r\n\r\n  <app-grid-tool-bar [grid]=\"grid\" [hideCreateBtn]=\"true\"></app-grid-tool-bar>\r\n\r\n  <dx-data-grid\r\n    #grid\r\n    appGridFeature\r\n    appGridFeatureNotification\r\n    [datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n    [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n    [editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n    [editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n    [columns]=\"columns\"\r\n    [dataSource]=\"gridDataSource\"\r\n    [gridProperties]=\"properties\"\r\n    (onRowPrepared)=\"onRowPrepared($event)\"\r\n  >\r\n    <!-- <dxo-toolbar>\r\n      <dxi-item location=\"after\">\r\n        <app-grid-after-tool-bar\r\n          *dxTemplate\r\n          [grid]=\"grid\"\r\n        >\r\n        </app-grid-after-tool-bar>\r\n      </dxi-item>\r\n      <dxi-item name=\"applyFilterButton\" cssClass=\"d-none\"></dxi-item>\r\n    </dxo-toolbar> -->\r\n    \r\n    <app-grid-popup-bottom-toolbar *dxTemplate=\"let data of 'bottom-toolbar'\" [grid]=\"grid\">\r\n    </app-grid-popup-bottom-toolbar>\r\n    <ng-container *ngFor=\"let template of templateStore.gridTemplates | keyvalue\">\r\n      <ng-container *dxTemplate=\"let cellInfo of template.key\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            templateStore.getGridTemplates(template.key);\r\n            context: { $implicit: cellInfo }\r\n          \"\r\n        >\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </dx-data-grid>\r\n\r\n  <app-notification-pager [grid]=\"grid\"></app-notification-pager>\r\n</div>","import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReceiversComponent } from './components/receivers.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReceiversComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ReceiversRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport type { Editing, Properties, RowPreparedEvent } from 'devextreme/ui/data_grid';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Column } from 'devextreme/ui/data_grid';\r\nimport { columns } from '../config/columns';\r\nimport { cRUDEndpoints } from '../config/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from '../config/datafield-lookup-source-mapping';\r\n// import { dataFieldTranslationKeysMapping } from '../config/datafield-translation-mapping';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from '../config/datafield-value-query-string-key-mapping';\r\nimport {\r\n  editingPropertiesForCreating,\r\n  editingPropertiesForUpdating,\r\n} from '../config/form-properties';\r\n\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping, RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\nimport { GridDataSourceService } from 'src/app/shared/service/grid-data-source.service/grid-data-source.service';\r\nimport { TemplateStoreService } from 'src/app/shared/service/template-store.service';\r\nimport { TenantChooserService } from 'src/app/shared/modules/tenant-chooser/tenant-chooser.service';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\n// import { formItemTranslationMapping } from '../config/form-item-tranlation-mapping';\r\n\r\n@Component({\r\n  selector: 'app-receivers',\r\n  templateUrl: 'receivers.component.html',\r\n  styleUrls: [],\r\n})\r\n/**\r\n *\r\n */\r\nexport class ReceiversComponent implements OnInit {\r\n  /**\r\n   * @property {Editing} editingPropertiesForCreating Setting for create.\r\n   * @property {Editing} editingPropertiesForUpdating Setting for upate.\r\n   * @property {Array} probationaryCalculations Probationary related calculations.\r\n   */\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent;\r\n  columns: Column[] = columns;\r\n  gridDataSource: DataSource;\r\n  cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n  // formItemTranslationMapping: any[] = formItemTranslationMapping;\r\n  // dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = dataFieldTranslationKeysMapping;\r\n  relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping =\r\n    relatedDataValueAndQueryStringKeyMapping;\r\n  editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n  editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n  properties: Properties = {\r\n    editing: {\r\n      allowUpdating: false,\r\n      allowDeleting: false\r\n    }\r\n  }\r\n  constructor(\r\n    private gridDataSourceService: GridDataSourceService,\r\n    protected templateStore: TemplateStoreService,\r\n    private tenantChooser: TenantChooserService,\r\n    private configStateService: ConfigStateService\r\n  ) {\r\n    this.configStateService.getOne$(\"currentUser\").subscribe(currentUser => {\r\n\r\n      if (currentUser.tenantId) {\r\n        this.columns[0].visible = false;\r\n      }\r\n    })\r\n\r\n    this.tenantChooser.tenantId$.subscribe(tenandId => {\r\n      this.grid?.instance?.refresh()\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n      cRUDEndpoints,\r\n      relatedDataValueAndQueryStringKeyMapping\r\n    );\r\n  }\r\n\r\n  onRowPrepared(e: RowPreparedEvent) {\r\n    e.rowElement.style.height = \"41.333px\";\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ReceiversComponent } from './components/receivers.component';\r\nimport { ReceiversRoutingModule } from './receivers-routing.module';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { NotificationPagerComponent } from '../shared/components/notification/notification-pager/notification-pager.component';\r\nimport { TenantChooserModule } from \"../shared/modules/tenant-chooser/tenant-chooser.module\";\r\n@NgModule({\r\n  declarations: [ReceiversComponent],\r\n  imports: [CommonModule, ReceiversRoutingModule, SharedModule, DXComponentsModule, NotificationPagerComponent, TenantChooserModule],\r\n})\r\nexport class ReceiversModule { }\r\n"],"x_google_ignoreList":[]}