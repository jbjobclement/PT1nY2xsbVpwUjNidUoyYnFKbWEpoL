{"version":3,"file":"76788.ad08089ed9054c57.js","mappings":"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","names":["columns","type","fixed","caption","buttons","name","template","dataField","validationRules","pattern","message","requiredValidationRule","filterOperations","filterOperationTypes","text","visible","dataType","alignment","allowFiltering","allowSorting","cRUDEndpoints","index","get","create","update","delete","dataFieldLookupSourceMapping","path","pathForSelectedDisplay","dataFieldTranslationKeysMapping","translateKeys","relatedDataValueAndQueryStringKeyMapping","queryStringKey","mapping","formItems","editorType","cssClass","editorOptions","disabled","editingPropertiesForCreating","popup","title","wrapperAttr","class","width","toolbarItems","toolbar","form","colCount","items","elementAttr","editingPropertiesForUpdating","i0","CronExpressionsComponent_ng_container_5_ng_container_1_ng_container_1_Template","ctx_r5","templateStore","getGridTemplates","template_r4","key","_c1","cellInfo_r6","CronExpressionsComponent_ng_container_5_ng_container_1_Template","_r0","cellInfo_r10","_r12","$implicit","ctx_r11","showJobList","data","id","description","_c2","routes","component","CronExpressionsComponent","constructor","gridDataSourceService","appRestService","tenantChooserService","router","this","gridProperties","jobListVisible","cronExpression","navigate","setCellValue","newData","value","currentRowData","test","lastValueFrom","request","method","url","then","res","gridDataSource","getDataSource","tenantId$","subscribe","tenantId","grid","instance","refresh","static","t","i1","i2","i3","i4","i5","core","Xpm","selectors","viewQuery","rf","ctx","CronExpressionsComponent_ng_container_5_Template","CronExpressionsComponent_app_bottom_toolbar_btns_7_Template","CronExpressionsComponent_dx_button_8_Template","gridTemplates","loadChildren","Promise","all","__webpack_require__","e","bind","m","CronExpressionsJobListModule","CronExpressionsRoutingModule","oAB","cJS","RouterModule","forChild","CronExpressionsModule","CommonModule","DXComponentsModule","SharedModule","TenantChooserModule","NotificationPagerComponent"],"sourceRoot":"webpack:///","sources":["./src/app/cron-expressions/config/columns.ts","./src/app/cron-expressions/config/crud-endpoints.ts","./src/app/cron-expressions/config/datafield-lookup-source-mapping.ts","./src/app/cron-expressions/config/datafield-translation-mapping.ts","./src/app/cron-expressions/config/datafield-value-query-string-key-mapping.ts","./src/app/cron-expressions/config/form-properties.ts","./src/app/cron-expressions/components/cron-expressions.component.html","./src/app/cron-expressions/cron-expressions-routing.module.ts","./src/app/cron-expressions/components/cron-expressions.component.ts","./src/app/cron-expressions/cron-expressions.module.ts"],"sourcesContent":["import type { Column } from 'devextreme/ui/data_grid';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\n// import { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\n\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    type: 'buttons',\r\n    fixed: true,\r\n    caption: '操作',\r\n    buttons: [\r\n      {\r\n        name: 'job-list',\r\n        template: 'job-list'\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    dataField: 'id',\r\n    caption: 'Cron表示式',\r\n    validationRules: [\r\n      {\r\n        type: 'pattern',\r\n        pattern: /^(\\*|([0-9]|1[0-9]|2[0-3]))(\\/\\d+)?(\\s+(\\*|([0-9]|[1-5][0-9]))(\\/\\d+)?){4}$/,\r\n        message: '格式不正確!'\r\n      },\r\n      requiredValidationRule\r\n    ],\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationSchedulePlanId',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: \"description\",\r\n    caption: 'Cron描述',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: \"notificationCount\",\r\n    caption: '通知數量',\r\n    dataType: 'number',\r\n    alignment: 'left',\r\n    allowFiltering: false,\r\n    allowSorting: false\r\n  },\r\n];","import { CRUDEndpoints } from \"src/app/shared/typing\";\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n  index: '/api/app/jbnotifier-admin/cron-expressions',\r\n  get: '/api/app/jbnotifier-admin/cron-expressions',\r\n  create: '/api/app/jbnotifier-admin/cron-expressions',\r\n  update: '/api/app/jbnotifier-admin/cron-expressions',\r\n  delete: '/api/app/jbnotifier-admin/cron-expressions',\r\n};","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n// /api/identity/customize-users/assignable-tenants\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n  {\r\n    dataField: 'tenantId',\r\n    path: '/api/identity/customize-users/assignable-tenants',\r\n    pathForSelectedDisplay: '/api/saas/customize-tenants',\r\n  },\r\n];\r\n\r\n\r\n// GET\r\n// /api/saas/customize-tenants","import { DataFieldTranslationKeysMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = [\r\n  \r\n  {\r\n    name: 'tenantName',\r\n    translateKeys: ['Saas::DisplayName:TenantName'],\r\n  },\r\n  {\r\n    dataField: 'startDate',\r\n    translateKeys: ['AbpAuditLogging::StartDate'],\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    translateKeys: ['AbpAuditLogging::EndDate'],\r\n  },\r\n  {\r\n    name: 'status',\r\n    translateKeys: ['AbpAccount::Status'],\r\n  },\r\n  // {\r\n  //   dataField: 'tenantId',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n];\r\n","import { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\n\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n  {\r\n    dataField: 'id',\r\n    queryStringKey: 'Id',\r\n    mapping: ['cronExpression', 'id'],\r\n  },\r\n  {\r\n    dataField: \"description\",\r\n    queryStringKey: \"Description\",\r\n    mapping: ['cronExpression', 'description']\r\n  },\r\n  {\r\n    dataField: \"notificationCount\",\r\n    queryStringKey: \"NotificationCount\",\r\n    mapping: ['notificationCount']\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    // queryStringKey: 'EndDate',\r\n    mapping: ['apiKey', 'concurrencyStamp'],\r\n  },\r\n];","import type { Editing } from 'devextreme/ui/data_grid';\r\n\r\nconst formItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'id',\r\n    editorType: 'dxTextBox'\r\n  },\r\n  {\r\n    dataField: 'description',\r\n    editorType: 'dxTextBox',\r\n    cssClass: 'cron-description',\r\n    editorOptions: {\r\n      disabled: true\r\n    }\r\n  }\r\n];\r\n\r\n/**\r\n * Properties for creating popup form.\r\n */\r\nexport const editingPropertiesForCreating: Editing = {\r\n  popup: {\r\n    title: 'JbNotifier::Permission:CronExpressions',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    width: 500,\r\n    toolbarItems: [{ toolbar: 'bottom', template: 'bottom-toolbar' }]\r\n  },\r\n  form: {\r\n    colCount: 1,\r\n    items: formItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  }\r\n};\r\n\r\n/**\r\n * Properties for updating popup form.\r\n */\r\n\r\nexport const editingPropertiesForUpdating: Editing = {\r\n  popup: {\r\n    title: 'JbNotifier::Permission:CronExpressions',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    width: 500,\r\n    toolbarItems: [{ toolbar: 'bottom', template: 'bottom-toolbar' }]\r\n  },\r\n  form: {\r\n    colCount: 1,\r\n    items: formItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  }\r\n};","<div class=\"custom-grid-container\">\r\n\t<app-tenant-chooser></app-tenant-chooser>\r\n\r\n\t<app-grid-tool-bar [grid]=\"grid\"></app-grid-tool-bar>\r\n\r\n\t<dx-data-grid\r\n\t\t#grid\r\n\t\tappGridFeature\r\n\t\tappGridFeatureNotification\r\n\t\t[dataFieldTranslationKeysMapping]=\"dataFieldTranslationKeysMapping\"\r\n\t\t[datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n\t\t[dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n\t\t[editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n\t\t[editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n\t\t[columns]=\"columns\"\r\n\t\t[dataSource]=\"gridDataSource\"\r\n\t\t[gridProperties]=\"gridProperties\"\r\n\t>\r\n\t\t<ng-container *ngFor=\"let template of templateStore.gridTemplates | keyvalue\">\r\n\t\t\t<ng-container *dxTemplate=\"let cellInfo of template.key\">\r\n\t\t\t\t<ng-container\r\n\t\t\t\t\t*ngTemplateOutlet=\"\r\n\t\t\t\t\ttemplateStore.getGridTemplates(template.key);\r\n\t\t\t\t\tcontext: { $implicit: cellInfo }\r\n\t\t\t\t\t\"\r\n\t\t\t\t>\r\n\t\t\t\t</ng-container>\r\n\t\t\t</ng-container>\r\n\t\t</ng-container>\r\n\t\t<app-bottom-toolbar-btns\r\n\t\t\t*dxTemplate=\"let data of 'bottom-toolbar'\"\r\n\t\t\t[grid]=\"grid\"\r\n\t\t>\r\n\t\t</app-bottom-toolbar-btns>\r\n\r\n\t\t<dx-button\r\n\t\t\t*dxTemplate=\"let cellInfo of 'job-list'\"\r\n\t\t\tappCustomButton\r\n\t\t\ttext=\"通知清單\"\r\n\t\t\t[elementAttr]=\"{class: 'custom-button custom-button--blue job-list'}\"\r\n\t\t\t(onClick)=\"showJobList(cellInfo.data.id, cellInfo.data.description)\"\r\n\t\t>\r\n\t\t</dx-button>\r\n\t</dx-data-grid>\r\n\r\n\t<app-notification-pager [grid]=\"grid\"></app-notification-pager>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CronExpressionsComponent } from './components/cron-expressions.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CronExpressionsComponent },\r\n  {\r\n    path: ':cronExpression',\r\n    loadChildren: () => import('../cron-expressions-job-list/cron-expressions-job-list.module').then(m => m.CronExpressionsJobListModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CronExpressionsRoutingModule { }\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport { Column, Editing, Properties } from 'devextreme/ui/data_grid';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping, DataFieldTranslationKeysMapping, RelatedDataValueAndQueryStringKeyMapping } from '../../shared/typing';\r\nimport { columns } from '../config/columns';\r\nimport { cRUDEndpoints } from '../config/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from '../config/datafield-lookup-source-mapping';\r\nimport { dataFieldTranslationKeysMapping } from '../config/datafield-translation-mapping';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from '../config/datafield-value-query-string-key-mapping';\r\nimport { editingPropertiesForCreating, editingPropertiesForUpdating } from '../config/form-properties';\r\nimport { GridDataSourceService } from '../../shared/service/grid-data-source.service/grid-data-source.service';\r\nimport { TemplateStoreService } from '../../shared/service/template-store.service';\r\nimport { AppRestService } from '../../shared/service/rest.service';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport { TenantChooserService } from '../../shared/modules/tenant-chooser/tenant-chooser.service';\r\nimport { Router } from '@angular/router';\r\n/**\r\n * Cron Expression 管理\r\n * 元件啟動時，設定id的setCellValue函式，id變更的時候，跟後端要求cron的說明，然後放在description欄位。\r\n */\r\n@Component({\r\n  selector: 'app-cron-expressions',\r\n  templateUrl: './cron-expressions.component.html',\r\n  styleUrls: ['./cron-expressions.component.scss']\r\n})\r\nexport class CronExpressionsComponent {\r\n  /**\r\n   * 取得datagrid元件，將之存於變數grid。\r\n   */\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent;\r\n\r\n  /**\r\n   * devextreme data grid columns\r\n   * \r\n   * 用來設定grid具有那些欄位。\r\n   * \r\n   * DevExtreme官方文件: [Column]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Columns/Overview/}\r\n   */\r\n  columns: Column[] = columns;\r\n\r\n  /**\r\n   * devextreme grid datasource\r\n   * \r\n   * grid dataSource, 用來連接grid與後端data的新增、讀取、修改、刪除。\r\n   * \r\n   * 透過[getDataSource]{@link GridDataSourceService#getDataSource}使用[cRUDEndpoints]{@link CronExpressionsComponent#cRUDEndpoints}與[relatedDataValueAndQueryStringKeyMapping]{@link CronExpressionsComponent#relatedDataValueAndQueryStringKeyMapping}產生。\r\n   * \r\n   * DevExtreme官方文件: [DataSource]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/Data_Layer/DataSource/}\r\n   */\r\n  gridDataSource: DataSource;\r\n\r\n  /**\r\n   * 設定增、刪、查、改的路徑\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link CronExpressionsComponent#gridDataSource}。\r\n   */\r\n  cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n\r\n  /**\r\n   * 選單與資料路徑對應設定檔案\r\n   * \r\n   * {@link GridFeatureDirective}接收後用來設定[DataGrid]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Getting_Started_with_DataGrid/}的新增、編輯表單裡的選單。\r\n   */\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n\r\n  /**\r\n   * 選單與翻譯鍵對應設定檔案\r\n   * \r\n   * {@link FormFeatureDirective}接收後用來設定欄位名稱的翻譯。\r\n   */\r\n  dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping =\r\n    dataFieldTranslationKeysMapping;\r\n\r\n  /**\r\n   * 欄位、值、與回應資料結構的對應設定檔案\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link CronExpressionsComponent#gridDataSource}。\r\n   */\r\n  relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping =\r\n    relatedDataValueAndQueryStringKeyMapping;\r\n\r\n  /**\r\n   * 新增的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n\r\n  /**\r\n   * 編輯的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n\r\n  /**\r\n   * grid 依頁面需求個別設定datagrid\r\n   */\r\n  gridProperties: Properties = {\r\n    // height: '70%'\r\n  }\r\n\r\n  /**\r\n   * Cron相關工作列表開啟與否\r\n   */\r\n  jobListVisible = false;\r\n\r\n  /**\r\n   * Cron 表示式\r\n   */\r\n  cronExpression: string;\r\n  /**\r\n   * Cron 說明\r\n   */\r\n  cronDescription: string;\r\n\r\n  /**\r\n   *  測試於constructor，設定grid datasource，因為與其他不同，所以備註此不同。\r\n   *  使用{@link GridDataSourceService#getDataSource}取得datagrid的datasource。\r\n   * */\r\n  constructor(\r\n    private gridDataSourceService: GridDataSourceService,\r\n    protected templateStore: TemplateStoreService,\r\n    private appRestService: AppRestService,\r\n    private tenantChooserService: TenantChooserService,\r\n    private router: Router\r\n  ) {\r\n    // https://supportcenter.devexpress.com/ticket/details/t1177234/grid-form-editor-popup-onchange-event\r\n    // https://supportcenter.devexpress.com/ticket/details/t1068356/why-does-setcellvalue-trigger-editorpreparing\r\n\r\n    this.columns[1].setCellValue = (newData, value, currentRowData) => {\r\n      if (/^(\\*|([0-9]|1[0-9]|2[0-3]))(\\/\\d+)?(\\s+(\\*|([0-9]|[1-5][0-9]))(\\/\\d+)?){4}$/.test(value)) {\r\n        return lastValueFrom(this.appRestService.request<void, void>({\r\n          method: 'GET',\r\n          url: `/api/app/jbnotifier-admin/cron-expressions/description/${value}`\r\n        })).then(res => {\r\n          newData.id = value;\r\n          newData.description = res['description'];\r\n        });\r\n      } else {\r\n        newData.id = value;\r\n      }\r\n    }\r\n    this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n      cRUDEndpoints,\r\n      relatedDataValueAndQueryStringKeyMapping\r\n    );\r\n\r\n    this.tenantChooserService.tenantId$.subscribe(tenantId => {\r\n      this.grid?.instance.refresh()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 將頁面導向該cron的通知清單，並將[cronExpression]{@link CronExpressionsComponent#cronExpression}做為param傳入\r\n   * \r\n   * @param cronExpression Cron 表示式\r\n   */\r\n  showJobList = (cronExpression: string) => {\r\n    this.jobListVisible = true;\r\n    this.cronExpression = cronExpression;\r\n    this.router.navigate(['./cron-expressions', cronExpression])\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronExpressionsRoutingModule } from './cron-expressions-routing.module';\r\nimport { CronExpressionsComponent } from './components/cron-expressions.component';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TenantChooserModule } from '../shared/modules/tenant-chooser/tenant-chooser.module';\r\nimport { NotificationPagerComponent } from \"../shared/components/notification/notification-pager/notification-pager.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CronExpressionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DXComponentsModule,\r\n    CronExpressionsRoutingModule,\r\n    SharedModule,\r\n    TenantChooserModule,\r\n    NotificationPagerComponent\r\n  ]\r\n})\r\nexport class CronExpressionsModule { }"],"x_google_ignoreList":[]}