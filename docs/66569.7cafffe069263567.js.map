{"version":3,"file":"66569.7cafffe069263567.js","mappings":"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","names":["columns","type","fixed","buttons","name","template","dataField","visible","caption","dataType","filterOperations","filterOperationTypes","text","validationRules","requiredValidationRule","cRUDEndpoints","index","get","create","update","delete","dataFieldLookupSourceMapping","path","pathForSelectedDisplay","relatedDataValueAndQueryStringKeyMapping","mapping","queryStringKey","editingPropertiesForCreating","popup","title","wrapperAttr","class","width","toolbarItems","toolbar","form","colCount","items","editorType","editorOptions","height","elementAttr","editingPropertiesForUpdating","disabled","i0","_r0","NotificationTemplatesComponent_ng_container_6_ng_container_1_ng_container_1_Template","ctx_r5","templateStore","getGridTemplates","template_r4","key","_c1","cellInfo_r6","NotificationTemplatesComponent_ng_container_6_ng_container_1_Template","routes","component","NotificationTemplatesComponent","constructor","gridDataSourceService","configStateService","tenantChooser","this","getOne$","subscribe","currentUser","tenantId","tenantId$","tenandId","grid","instance","refresh","ngOnInit","gridDataSource","getDataSource","static","t","i1","i2","i3","i4","core","Xpm","selectors","viewQuery","rf","ctx","NotificationTemplatesComponent_app_bottom_toolbar_btns_5_Template","NotificationTemplatesComponent_ng_container_6_Template","gridTemplates","canActivate","AuthGuard","PermissionGuard","NotificationTemplatesRoutingModule","oAB","cJS","RouterModule","forChild","NotificationTemplatesModule","CommonModule","DXComponentsModule","SharedModule","NotificationPagerComponent","TenantChooserModule"],"sourceRoot":"webpack:///","sources":["./src/app/notification-templates/config/columns.ts","./src/app/notification-templates/config/crud-endpoints.ts","./src/app/notification-templates/config/datafield-lookup-source-mapping.ts","./src/app/notification-templates/config/datafield-value-query-string-key-mapping.ts","./src/app/notification-templates/config/form-properties.ts","./src/app/notification-templates/components/notification-templates.component.html","./src/app/notification-templates/notification-templates-routing.module.ts","./src/app/notification-templates/components/notification-templates.component.ts","./src/app/notification-templates/notification-templates.module.ts"],"sourcesContent":["import { filterOperationTypes } from \"src/app/shared/grid/filterOperations\";\r\nimport { Column } from \"devextreme/ui/data_grid\";\r\nimport { requiredValidationRule } from \"src/app/shared/validationRules/required\";\r\n\r\nexport const columns: Column[] = [\r\n    {\r\n        type: 'buttons',\r\n        fixed: true,\r\n        buttons: [\r\n            {\r\n                name: 'edit',\r\n                template: 'grid-edit-button'\r\n            },\r\n            {\r\n                name: 'delete',\r\n                template: 'grid-delete-button'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        dataField: 'id',\r\n        visible: false\r\n    },\r\n    {\r\n        dataField: 'concurrencyStamp',\r\n        visible: false\r\n    },\r\n    {\r\n        name: 'tenantName',\r\n        caption: '租戶',\r\n        dataType: 'string',\r\n        filterOperations: filterOperationTypes.text,\r\n    },\r\n    {\r\n        dataField: 'tenantId',\r\n        dataType: 'string',\r\n        visible: false\r\n    },\r\n    {\r\n        dataField: 'idCode',\r\n        caption: 'idCode',\r\n        dataType: 'string',\r\n        filterOperations: filterOperationTypes.text,\r\n        validationRules: [requiredValidationRule]\r\n    },\r\n    {\r\n        dataField: 'name',\r\n        caption: '模板名稱',\r\n        dataType: 'string',\r\n        filterOperations: filterOperationTypes.text,\r\n        validationRules: [requiredValidationRule]\r\n    },\r\n    {\r\n        dataField: 'content',\r\n        caption: '模板內容',\r\n        dataType: 'string',\r\n        filterOperations: filterOperationTypes.text,\r\n        validationRules: [requiredValidationRule]\r\n    },\r\n    {\r\n        dataField: 'sortingNumber',\r\n        caption: '排序',\r\n        visible: false\r\n    },\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        caption: '指定租戶',\r\n        visible: false\r\n    }\r\n];","import { CRUDEndpoints } from \"src/app/shared/typing\";\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n    index: '/api/app/jbnotifier-admin/notification-templates',\r\n    get: '/api/app/jbnotifier-admin/notification-templates',\r\n    create: '/api/app/jbnotifier-admin/notification-templates',\r\n    update: '/api/app/jbnotifier-admin/notification-templates',\r\n    delete: '/api/app/jbnotifier-admin/notification-templates',\r\n}","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n    {\r\n        dataField: 'tenantId',\r\n        path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n    },\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n        pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants'\r\n    },\r\n]","import { RelatedDataValueAndQueryStringKeyMapping } from \"src/app/shared/typing\";\r\n\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n    {\r\n        dataField: \"id\",\r\n        mapping: [\"notificationTemplate\", \"id\"],\r\n    },\r\n    {\r\n        dataField: \"concurrencyStamp\",\r\n        mapping: [\"notificationTemplate\", \"concurrencyStamp\"],\r\n    },\r\n    {\r\n        dataField: \"idCode\",\r\n        mapping: [\"notificationTemplate\", \"idCode\"],\r\n    },\r\n    {\r\n        dataField: \"name\",\r\n        mapping: [\"notificationTemplate\", \"name\"],\r\n    },\r\n    {\r\n        dataField: \"content\",\r\n        mapping: [\"notificationTemplate\", \"content\"],\r\n    },\r\n    {\r\n        dataField: \"sortingNumber\",\r\n        mapping: [\"notificationTemplate\", \"sortingNumber\"],\r\n    },\r\n    {\r\n        name: 'tenantName',\r\n        mapping: [\"tenant\", \"name\"]\r\n    },\r\n    {\r\n        dataField: 'tenantId',\r\n        mapping: [\"tenant\", \"id\"]\r\n    },\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        queryStringKey: 'TenantId',\r\n        mapping: ['tenant', 'id'],\r\n    },\r\n];","import { Editing } from \"devextreme/ui/data_grid\";\r\n\r\nconst formItems: Editing['form']['items'] = [\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        editorType: 'dxSelectBox',\r\n    },\r\n    {\r\n        dataField: 'idCode',\r\n        editorType: 'dxTextBox'\r\n    },\r\n    {\r\n        dataField: 'name',\r\n        editorType: 'dxTextBox'\r\n    },\r\n    {\r\n        dataField: 'content',\r\n        editorType: 'dxTextArea',\r\n        editorOptions: {\r\n            height: 160\r\n        }\r\n    },\r\n    {\r\n        dataField: 'sortingNumber',\r\n        editorType: 'dxNumberBox'\r\n    },\r\n]\r\n\r\nconst editFormItems: Editing['form']['items'] = [\r\n    {\r\n        dataField: 'SpecifiedTenantId',\r\n        editorType: 'dxSelectBox',\r\n        editorOptions: {\r\n            disabled: true\r\n        }\r\n    },\r\n    {\r\n        dataField: 'idCode',\r\n        editorType: 'dxTextBox',\r\n        editorOptions: {\r\n            disabled: true\r\n        }\r\n    },\r\n    {\r\n        dataField: 'name',\r\n        editorType: 'dxTextBox'\r\n    },\r\n    {\r\n        dataField: 'content',\r\n        editorType: 'dxTextArea',\r\n        editorOptions: {\r\n            height: 160\r\n        }\r\n    },\r\n    {\r\n        dataField: 'sortingNumber',\r\n        editorType: 'dxNumberBox'\r\n    },\r\n]\r\n/**\r\n * Properties for creating popup form.\r\n */\r\nexport const editingPropertiesForCreating: Editing = {\r\n    popup: {\r\n        title: 'JbNotifier::Permission:NotificationTemplates',\r\n        wrapperAttr: { class: 'basic-popup' },\r\n        width: 500,\r\n        toolbarItems: [{ toolbar: 'bottom', template: 'bottom-toolbar' }]\r\n    },\r\n    form: {\r\n        colCount: 1,\r\n        items: formItems,\r\n        elementAttr: { class: 'custom-form custom-form--edit' }\r\n    }\r\n}\r\n\r\n/**\r\n * Properties for updating popup form.\r\n */\r\n\r\nexport const editingPropertiesForUpdating: Editing = {\r\n    popup: {\r\n        title: 'JbNotifier::Permission:NotificationTemplates',\r\n        wrapperAttr: { class: 'basic-popup' },\r\n        width: 500,\r\n        toolbarItems: [{ toolbar: 'bottom', template: 'bottom-toolbar' }]\r\n    },\r\n    form: {\r\n        colCount: 1,\r\n        items: editFormItems,\r\n        elementAttr: { class: 'custom-form custom-form--edit' }\r\n    }\r\n}","<div class=\"custom-grid-container\">\r\n  <app-tenant-chooser></app-tenant-chooser>\r\n\r\n  <app-grid-tool-bar [grid]=\"grid\"></app-grid-tool-bar>\r\n\r\n  <dx-data-grid\r\n    #grid\r\n    appGridFeature\r\n    appGridFeatureNotification\r\n    [datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n    [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n    [editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n    [editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n    [columns]=\"columns\"\r\n    [dataSource]=\"gridDataSource\"\r\n  >\r\n    <!-- <dxo-toolbar>\r\n      <dxi-item location=\"before\">\r\n        <dx-button\r\n          *dxTemplate\r\n          appGridAddButton\r\n          (onClick)=\"grid.instance.addRow()\"\r\n        >\r\n        </dx-button>\r\n      </dxi-item>\r\n      <dxi-item location=\"after\">\r\n        <app-grid-after-tool-bar\r\n          *dxTemplate\r\n          [grid]=\"grid\"\r\n        >\r\n        </app-grid-after-tool-bar>\r\n      </dxi-item>\r\n      <dxi-item name=\"applyFilterButton\" cssClass=\"d-none\"></dxi-item>\r\n    </dxo-toolbar> -->\r\n\r\n    <app-bottom-toolbar-btns\r\n      *dxTemplate=\"let data of 'bottom-toolbar'\"\r\n      [grid]=\"grid\"\r\n    >\r\n    </app-bottom-toolbar-btns>\r\n\r\n    <ng-container\r\n      *ngFor=\"let template of templateStore.gridTemplates | keyvalue\"\r\n    >\r\n      <ng-container\r\n        *dxTemplate=\"let cellInfo of template.key\"\r\n      >\r\n          <ng-container\r\n            *ngTemplateOutlet=\"templateStore.getGridTemplates(template.key); context: { $implicit: cellInfo }\"\r\n          >\r\n        </ng-container>  \r\n      </ng-container>\r\n    </ng-container>\r\n  </dx-data-grid>\r\n\r\n  <app-notification-pager [grid]=\"grid\"></app-notification-pager>\r\n</div>","import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotificationTemplatesComponent } from './components/notification-templates.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationTemplatesComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class NotificationTemplatesRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport type { Editing } from 'devextreme/ui/data_grid';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Column } from 'devextreme/ui/data_grid';\r\nimport { columns } from '../config/columns';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping } from 'src/app/shared/typing';\r\nimport { cRUDEndpoints } from '../config/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from '../config/datafield-lookup-source-mapping';\r\n// import { dataFieldTranslationKeysMapping } from '../config/datafield-translation-mapping';\r\nimport { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from '../config/datafield-value-query-string-key-mapping';\r\nimport { editingPropertiesForCreating, editingPropertiesForUpdating } from '../config/form-properties';\r\nimport { GridDataSourceService } from 'src/app/shared/service/grid-data-source.service/grid-data-source.service';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport { TemplateStoreService } from 'src/app/shared/service/template-store.service';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\nimport { TenantChooserService } from 'src/app/shared/modules/tenant-chooser/tenant-chooser.service';\r\n\r\n@Component({\r\n    selector: 'app-notification-templates',\r\n    templateUrl: 'notification-templates.component.html',\r\n    styleUrls: []\r\n})\r\n/**\r\n * \r\n */\r\nexport class NotificationTemplatesComponent implements OnInit {\r\n    /**\r\n     * @property {Editing} editingPropertiesForCreating Setting for create.\r\n     * @property {Editing} editingPropertiesForUpdating Setting for upate.\r\n     * @property {Array} probationaryCalculations Probationary related calculations.\r\n     */\r\n    @ViewChild('grid', { static: false }) grid: DxDataGridComponent;\r\n    // grid related properties\r\n    columns: Column[] = columns;\r\n    gridDataSource: DataSource;\r\n    cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n    dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n    // dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = dataFieldTranslationKeysMapping;\r\n    relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = relatedDataValueAndQueryStringKeyMapping;\r\n    editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n    editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n\r\n    constructor(\r\n        private gridDataSourceService: GridDataSourceService,\r\n        protected templateStore: TemplateStoreService,\r\n        private configStateService: ConfigStateService,\r\n        private tenantChooser: TenantChooserService\r\n    ) {\r\n        this.configStateService.getOne$(\"currentUser\").subscribe(currentUser => {\r\n            if (currentUser.tenantId) {\r\n                this.columns[3].visible = false;\r\n                this.editingPropertiesForCreating.form.items[0].visible = false\r\n                this.editingPropertiesForUpdating.form.items[0].visible = false\r\n            }\r\n        })\r\n\r\n        this.tenantChooser.tenantId$.subscribe(tenandId => {\r\n            this.grid?.instance?.refresh()\r\n        })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n            cRUDEndpoints,\r\n            relatedDataValueAndQueryStringKeyMapping,\r\n        );\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { NotificationTemplatesComponent } from './components/notification-templates.component';\r\nimport { NotificationTemplatesRoutingModule } from './notification-templates-routing.module';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { NotificationPagerComponent } from \"../shared/components/notification/notification-pager/notification-pager.component\";\r\nimport { TenantChooserModule } from \"../shared/modules/tenant-chooser/tenant-chooser.module\";\r\n\r\n@NgModule({\r\n    declarations: [NotificationTemplatesComponent],\r\n    imports: [\r\n        CommonModule,\r\n        DXComponentsModule,\r\n        CommonModule,\r\n        NotificationTemplatesRoutingModule,\r\n        SharedModule,\r\n        NotificationPagerComponent,\r\n        TenantChooserModule\r\n    ]\r\n})\r\nexport class NotificationTemplatesModule { }"],"x_google_ignoreList":[]}