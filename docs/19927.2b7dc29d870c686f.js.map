{"version":3,"file":"19927.2b7dc29d870c686f.js","mappings":"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","names":["formItems","dataField","template","label","visible","NumberBoxDirective","constructor","numberbox","this","elementAttr","class","hoverStateEnabled","focusStateEnabled","activeStateEnabled","static","t","i0","i1","core","lG2","selectors","standalone","$event","_r5","ctx_r4","saveAndDisplayTenantId","ctx_r6","onTenantChanged","ctx_r0","tenantsLookupDataSource","_r9","ctx_r8","item","value","ctx_r10","onSettingValueChanged","ctx_r11","defaultValue","ctx_r1","displayName","_r25","item_r14","$implicit","ctx_r26","_r30","ctx_r31","_r35","ctx_r36","_r40","ctx_r41","NotificationSettingsComponent_div_8_For_2_dx_text_box_4_Template","NotificationSettingsComponent_div_8_For_2_dx_date_box_5_Template","NotificationSettingsComponent_div_8_For_2_dx_number_box_6_Template","NotificationSettingsComponent_div_8_For_2_dx_check_box_7_Template","_r44","dataType","NotificationSettingsComponent_div_8_For_2_Template","_forTrack1","ctx_r2","formData","items","routes","path","component","NotificationSettingsComponent","appRestService","configStateService","toastService","tenantChooser","restService","isDirty","getSettings","request","method","url","pipe","map","notificationSetting","settings","nS","transformValue","parseInt","String","Date","Error","notificationSettingDefinition","notificationSettingDefinitionId","id","isInherited","originSettings","cloneDeep","tap","res","forEach","Number","isNaN","saveSettings","body","switchMap","subscribe","success","ngOnInit","currentTenantId","getOne","tenantId","getTenantLookup","ngAfterViewInit","selectbox","instance","getDataSource","load","getHostEnter","store","CustomStore","cacheRawData","key","loadOptions","lastValueFrom","params","Filter","searchValue","MaxResultCount","SkipCount","skip","apiName","apiDefaultName","then","byKey","of","tempSelectedItem","paginate","pageSize","e","undefined","originTenantChooserTenantId","getValue","next","isEqual","ngOnDestroy","i2","i3","i4","Xpm","viewQuery","rf","ctx","NotificationSettingsComponent_div_5_Template","NotificationSettingsComponent_div_7_Template","NotificationSettingsComponent_div_8_Template","_c2","canActivate","AuthGuard","PermissionGuard","NotificationSettingsRoutingModule","oAB","cJS","RouterModule","forChild","NotificationSettingsModule","CommonModule","SharedModule","DXComponentsModule"],"sourceRoot":"webpack:///","sources":["./src/app/notification-settings/config/form-properties.ts","./src/app/shared/directive/form-controls/number-box.directive.ts","./src/app/notification-settings/notification-settings.component.html","./src/app/notification-settings/notification-settings-routing.module.ts","./src/app/notification-settings/notification-settings.component.ts","./src/app/notification-settings/utils.ts","./src/app/notification-settings/notification-settings.module.ts"],"sourcesContent":["import type { Properties } from 'devextreme/ui/form';\r\n\r\n\r\nexport const formItems: Properties['items'] = [\r\n  // {\r\n  //   dataField: 'tenantId',\r\n  //   editorType: 'dxTextBox'\r\n  //   // caption: 'notificationSettingDefinitionId'\r\n  // },\r\n  {\r\n    dataField: 'items',\r\n    template: 'notification-setting-definition',\r\n    label: { visible: false }\r\n    // caption: 'notificationSettingDefinitionId'\r\n  },\r\n]\r\n// ]\r\n// const formItems: Editing['form']['items'] = [\r\n//   {\r\n//     dataField: 'creationTime',\r\n//     editorType: 'dxTextBox',\r\n//     colSpan: 1,\r\n//   },\r\n//   {\r\n//     dataField: 'creatorId',\r\n//     editorType: 'dxSelectBox',\r\n//     colSpan: 1,\r\n//   },\r\n//   {\r\n//     dataField: 'lastModificationTime',\r\n//     editorType: 'dxTextBox',\r\n//     colSpan: 1,\r\n//   },\r\n//   {\r\n//     dataField: 'lastModifierId',\r\n//     editorType: 'dxSelectBox',\r\n//     colSpan: 1,\r\n//   },\r\n//   {\r\n//     dataField: 'value',\r\n//     editorType: 'dxTextBox',\r\n//     colSpan: 1,\r\n//   },\r\n//   {\r\n//     dataField: 'isInherited',\r\n//     editorType: 'dxTextBox',\r\n//     colSpan: 1,\r\n//   },\r\n//   {\r\n//     dataField: 'notificationSettingDefinitionId',\r\n//     editorType: 'dxSelectBox',\r\n//     colSpan: 1,\r\n//   },\r\n// ];\r\n// /**\r\n//  * Properties for creating popup form.\r\n//  */\r\n// export const editingPropertiesForCreating: Editing = {\r\n//   popup: {\r\n//     title: '::',\r\n//     toolbarItems: [\r\n//       {\r\n//         toolbar: 'bottom',\r\n//         template: 'bottom-toolbar',\r\n//       },\r\n//     ],\r\n//   },\r\n//   form: {\r\n//     colCount: 2,\r\n//     items: formItems,\r\n//   },\r\n// };\r\n\r\n// /**\r\n//  * Properties for updating popup form.\r\n//  */\r\n\r\n// export const editingPropertiesForUpdating: Editing = {\r\n//   popup: {\r\n//     title: '::',\r\n//     toolbarItems: [\r\n//       {\r\n//         toolbar: 'bottom',\r\n//         template: 'bottom-toolbar',\r\n//       },\r\n//     ],\r\n//   },\r\n//   form: {\r\n//     colCount: 2,\r\n//     items: formItems,\r\n//   },\r\n// };\r\n","import { Directive } from '@angular/core';\r\nimport { DxNumberBoxComponent } from 'devextreme-angular/ui/number-box';\r\n\r\n@Directive({\r\n    selector: '[appNumberBox]',\r\n    standalone: true\r\n})\r\n/**\r\n * A directive that sets up the common config for dx-number-box.\r\n */\r\nexport class NumberBoxDirective {\r\n    constructor(private numberbox: DxNumberBoxComponent) {\r\n        this.numberbox.elementAttr = { class: 'custom-number-box' }\r\n        this.numberbox.hoverStateEnabled = false\r\n        this.numberbox.focusStateEnabled = false\r\n        this.numberbox.activeStateEnabled = false\r\n    }\r\n}","<div class=\"notification-settings paper-1 d-flex flex-column align-items-center h-100\">\r\n  <div class=\"flex-grow-1 d-flex flex-column justify-content-center\">\r\n    <div class=\"mb-3\">\r\n      <div class=\"dx-form-group-caption text-center mb-2\">\r\n        <!-- {{\"JbNotifier::Permission:NotificationSettings\" | abpLocalization}} -->\r\n        通知設定\r\n      </div>\r\n      <div *ngIf=\"!currentTenantId\">\r\n        <dx-select-box\r\n          #selectbox\r\n          appSelectBox\r\n          [dataSource]=\"tenantsLookupDataSource\"\r\n          displayExpr=\"displayName\"\r\n          valueExpr=\"id\"\r\n          [(value)]=\"saveAndDisplayTenantId\"\r\n          (onValueChanged)=\"onTenantChanged($event)\"\r\n        >\r\n        </dx-select-box>\r\n      </div>\r\n    </div>\r\n    <dx-form\r\n      appFormFeature\r\n      [items]=\"formItems\"\r\n      [formData]=\"formData\"\r\n    >\r\n      <div *dxTemplate=\"let cellInfo of 'string'\">\r\n        <div class=\"d-flex align-items-center mb-3\">\r\n          <div class=\"dx-field-item-label-text\">\r\n            {{ item.displayName }}\r\n          </div>\r\n          <div class=\"ps-3 pe-3\">\r\n            <dx-text-box\r\n              [(value)]=\"item.value\"\r\n              (onValueChanged)=\"onSettingValueChanged($event)\"\r\n              valueChangeEvent=\"keyup\"\r\n            >\r\n            </dx-text-box>\r\n          </div>\r\n          <div>\r\n            <dx-button\r\n              icon=\"refresh\"\r\n              [text]=\"'::還原預設值' | abpLocalization\"\r\n              (onClick)=\"item.value = item.defaultValue\"\r\n            >\r\n            </dx-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        *dxTemplate=\"let cellInfo of 'notification-setting-definition'\"\r\n      >\r\n        @for (item of formData.items; track item.id; let i = $index;) {\r\n          <div class=\"notification-setting\">\r\n            <div class=\"dx-field-item-label-text\">\r\n              {{ item.displayName }}\r\n            </div>\r\n            \r\n            <!-- bool: 呈現 是或否 的 radio，資料回傳給後端時傳 true / false (字串)\r\n            int: 呈現數字輸入框\r\n            string: 呈現文字輸入框\r\n            datetime: 呈現日期時間選擇器 -->\r\n            <div>\r\n              <dx-text-box\r\n                *ngIf=\"item.dataType === 'string'\"\r\n                appTextBox\r\n                [(value)]=\"item.value\"\r\n                (onValueChanged)=\"onSettingValueChanged($event)\"\r\n                valueChangeEvent=\"keyup\"\r\n              >\r\n              </dx-text-box>\r\n              <dx-date-box\r\n                *ngIf=\"item.dataType === 'datetime'\"\r\n                [(value)]=\"item.value\"\r\n                (onValueChanged)=\"onSettingValueChanged($event)\"\r\n                valueChangeEvent=\"keyup\"\r\n                dateSerializationFormat=\"yyyy-MM-ddTHH:mm:ss.SSS+08:00\"\r\n              >\r\n              </dx-date-box>\r\n              <dx-number-box\r\n                *ngIf=\"item.dataType === 'int'\"\r\n                appNumberBox\r\n                [(value)]=\"item.value\"\r\n                (onValueChanged)=\"onSettingValueChanged($event)\"\r\n                valueChangeEvent=\"keyup\"\r\n              >\r\n              </dx-number-box>\r\n              <dx-check-box\r\n                *ngIf=\"item.dataType === 'bool'\"\r\n                appCheckBox\r\n                [(value)]=\"item.value\"\r\n                (onValueChanged)=\"onSettingValueChanged($event)\"\r\n                valueChangeEvent=\"keyup\"\r\n              >\r\n              </dx-check-box>\r\n            </div>\r\n\r\n            <div>\r\n              <dx-button\r\n                icon=\"refresh\"\r\n                [text]=\"'::還原預設值' | abpLocalization\"\r\n                (onClick)=\"item.value = item.defaultValue\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </dx-form>\r\n  </div>\r\n  \r\n  <div class=\"d-flex justify-content-center\">\r\n    <dx-button\r\n      appCustomButton\r\n      [elementAttr]=\"{class: 'custom-button custom-button--blue'}\"\r\n      [text]=\"'AbpUi::Save' | abpLocalization\"\r\n      (onClick)=\"saveSettings()\"\r\n      [disabled]=\"!isDirty\"\r\n    >\r\n    </dx-button>\r\n  </div>\r\n</div>","import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotificationSettingsComponent } from './notification-settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationSettingsComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationSettingsRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { formItems } from './config/form-properties';\r\nimport { AppRestService } from '../shared/service/rest.service';\r\nimport { NotificationSettingDTO, NotificationSettingUpdateDTO, NotificationsSettingFormData } from './config/typing';\r\nimport { lastValueFrom, map, of, switchMap, tap } from 'rxjs';\r\nimport { ConfigStateService, RestService } from '@abp/ng.core';\r\nimport type { ValueChangedEvent } from 'devextreme/ui/select_box';\r\nimport { isEqual, cloneDeep } from \"lodash\";\r\nimport { DxToastService } from '../shared/service/toast.service';\r\nimport { transformValue } from './utils';\r\nimport { LookupDTO } from '../shared/typing';\r\nimport { TenantChooserService } from '../shared/modules/tenant-chooser/tenant-chooser.service';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { apiDefaultName } from '../shared/const';\r\nimport { DxSelectBoxComponent } from 'devextreme-angular';\r\n@Component({\r\n  selector: 'app-notification-settings',\r\n  templateUrl: 'notification-settings.component.html',\r\n  styleUrls: ['./notification-settings.component.scss'],\r\n})\r\nexport class NotificationSettingsComponent implements OnInit {\r\n  /**\r\n   * devextreme，[SelectBox]{@link https://js.devexpress.com/Angular/Documentation/20_1/Guide/UI_Components/SelectBox/Data_Binding/Access_the_DataSource/}元件\r\n   */\r\n  @ViewChild('selectbox') selectbox: DxSelectBoxComponent\r\n\r\n  /**\r\n   * 表單項目設定，參考[items]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxForm/Configuration/#items}\r\n   */\r\n  formItems = formItems\r\n\r\n  /**\r\n   * 表單項目資料，參考[formData]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxForm/Configuration/#formData}\r\n   */\r\n  formData: NotificationsSettingFormData = {\r\n    items: []\r\n  }\r\n\r\n  /**\r\n   * [selectbox]{@link NotificationSettingsComponent#selectbox}的\r\n   * [dataSource]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxSelectBox/Configuration/#dataSource}\r\n   */\r\n  tenantsLookupDataSource\r\n\r\n  /**\r\n   * [selectbox]{@link NotificationSettingsComponent#selectbox}的\r\n   * [dataSource]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxSelectBox/Configuration/#dataSource}\r\n   */\r\n  isDirty: boolean = false;\r\n\r\n  /**\r\n   * 租戶的原始通知設定\r\n   */\r\n  originSettings;\r\n\r\n  /**\r\n   * 存取上一個頁面進入時的指定租戶ID\r\n   */\r\n  originTenantChooserTenantId: string\r\n\r\n  /**\r\n   * 現在使用者的租戶\r\n   */\r\n  currentTenantId: string;\r\n\r\n  /**\r\n   * 顯示與儲存用的租戶\r\n   */\r\n  saveAndDisplayTenantId: string;\r\n\r\n  constructor(\r\n    private appRestService: AppRestService,\r\n    private configStateService: ConfigStateService,\r\n    private toastService: DxToastService,\r\n    private tenantChooser: TenantChooserService,\r\n    private restService: RestService\r\n  ) { }\r\n\r\n  /**\r\n   * 元件初始化後，取得租戶ID，如果沒有租戶ID則代表是HOST進入\r\n   * \r\n   * HOST進入時，呼叫[getTenantLookup]{@link NotificationSettingsComponent#getTenantLookup}\r\n   * 取得[selectbox]{@link NotificationSettingsComponent#selectbox}的資料設定\r\n   */\r\n  ngOnInit(): void {\r\n    this.currentTenantId = this.configStateService.getOne(\"currentUser\").tenantId\r\n\r\n    if (this.currentTenantId) {\r\n      this.saveAndDisplayTenantId = this.currentTenantId\r\n    }\r\n\r\n    if (this.currentTenantId) {\r\n      // 租戶登入用\r\n      this.getSettings().subscribe()\r\n    } else {\r\n      // host登入用\r\n      this.getTenantLookup()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 畫面渲染後，讓[selectbox]{@link NotificationSettingsComponent#selectbox}根據[tenantsLookupDataSource]{@link NotificationSettingsComponent#tenantsLookupDataSource}\r\n   * 取得資料，並觸發[getHostEnter]{@link NotificationSettingsComponent#getHostEnter}\r\n   */\r\n  ngAfterViewInit() {\r\n    this.selectbox?.instance.getDataSource().load()\r\n    this.getHostEnter()\r\n  }\r\n\r\n  /**\r\n   * 取得指定租戶的通知設定資料\r\n   */\r\n  getSettings = () => {\r\n    return this.appRestService.request<void, NotificationSettingDTO[]>({\r\n      method: 'GET',\r\n      url: \"/api/app/jbnotifier-admin/notification-settings\"\r\n    })\r\n      .pipe(map(notificationSetting => {\r\n        const settings: NotificationsSettingFormData['items'] = notificationSetting.map(nS => {\r\n          const value = transformValue(nS.notificationSetting.value, nS.notificationSettingDefinition.dataType)\r\n          return {\r\n            notificationSettingDefinitionId: nS.notificationSettingDefinition.id,\r\n            value: value,\r\n            isInherited: nS.notificationSetting.isInherited,\r\n            defaultValue: nS.notificationSettingDefinition.defaultValue,\r\n            displayName: nS.notificationSettingDefinition.displayName,\r\n            dataType: nS.notificationSettingDefinition.dataType\r\n          }\r\n        })\r\n        this.originSettings = cloneDeep(settings)\r\n        return {\r\n          items: settings\r\n        }\r\n      }))\r\n      .pipe(tap(res => {\r\n        this.formData = res;\r\n        this.formData.items.forEach(item => {\r\n          if (item.dataType === 'int' && Number.isNaN(item.value)) {\r\n            item.value = null\r\n          }\r\n        })\r\n      }))\r\n  }\r\n\r\n  /**\r\n   * 取得[selectbox]{@link NotificationSettingsComponent#selectbox}的資料設定\r\n   */\r\n  getTenantLookup() {\r\n    this.tenantsLookupDataSource = {\r\n      store: new CustomStore<any, any>({\r\n        cacheRawData: true,\r\n        key: 'id',\r\n        load: (loadOptions) => {\r\n          return lastValueFrom(this.restService.request<any, any>({\r\n            method: 'GET',\r\n            url: '/api/app/jbnotifier-admin/notification-settings/tenant-lookup',\r\n            params: {\r\n              Filter: loadOptions.searchValue,\r\n              MaxResultCount: 10,\r\n              SkipCount: loadOptions.skip\r\n            }\r\n          }, { apiName: apiDefaultName })).then(res => {\r\n            return [\r\n              ...res.items,\r\n            ]\r\n          })\r\n        },\r\n        byKey: () => {\r\n          return lastValueFrom(of(this.tenantChooser.tempSelectedItem))\r\n        }\r\n      }),\r\n      paginate: true,\r\n      pageSize: 10\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 當HOST進入時，將[selectbox]{@link NotificationSettingsComponent#selectbox}的資料設為第一筆\r\n   */\r\n  getHostEnter() {\r\n    this.appRestService.request<void, LookupDTO>({\r\n      method: 'GET',\r\n      url: `/api/app/jbnotifier-admin/notification-settings/tenant-lookup?MaxResultCount=1`\r\n    }).pipe(\r\n      tap(res => {\r\n        this.saveAndDisplayTenantId = res.items[0]?.id;\r\n      })\r\n    ).subscribe()\r\n  }\r\n\r\n  /**\r\n   * 當進入前有指定租戶ID的話，必需先存起來，以在離開此頁面時，是先前選取指定租戶的狀態\r\n   * \r\n   * 當選取租戶發生變化時，必需更改目前指定租戶ID，已取得該租戶的通知設定\r\n   */\r\n  onTenantChanged(e: ValueChangedEvent) {\r\n    const value = e.value\r\n\r\n    if (this.originTenantChooserTenantId === undefined) {\r\n      this.originTenantChooserTenantId = this.tenantChooser.tenantId.getValue()\r\n    }\r\n\r\n    this.tenantChooser.tenantId.next(value);\r\n    this.saveAndDisplayTenantId = e.value;\r\n    this.getSettings().subscribe()\r\n  }\r\n\r\n  /**\r\n   * 當通知設定的資料改變時，檢查改變的資料是否與原始資料一樣，決定[isDirty]{@link NotificationSettingsComponent#isDirty}\r\n   */\r\n  onSettingValueChanged() {\r\n    const isDirty = !isEqual(\r\n      this.originSettings,\r\n      this.formData.items\r\n    );\r\n    this.isDirty = isDirty;\r\n  }\r\n\r\n  /**\r\n   * 儲存通知設定\r\n   */\r\n  saveSettings = () => {\r\n    const items = this.formData.items.map(item => {\r\n      return {\r\n        notificationSettingDefinitionId: item.notificationSettingDefinitionId,\r\n        value: String(item.value),\r\n        isInherited: item.isInherited,\r\n      }\r\n    })\r\n    this.appRestService.request<NotificationSettingUpdateDTO, void>({\r\n      method: 'PUT',\r\n      url: `/api/app/jbnotifier-admin/notification-settings`,\r\n      body: items\r\n    })\r\n      .pipe(switchMap(() => {\r\n        return this.getSettings()\r\n      }))\r\n      .subscribe(() => {\r\n        this.toastService.success('儲存成功!')\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 離開頁面時，必需使用先前存取的[originTenantChooserTenantId]{@link NotificationSettingsComponent#originTenantChooserTenantId}，\r\n   * 以回到進入此頁面前的租戶選取狀態\r\n   */\r\n  ngOnDestroy() {\r\n    this.tenantChooser.tenantId.next(this.originTenantChooserTenantId)\r\n  }\r\n};","export const transformValue = (value, dataType) => {\r\n    switch (dataType) {\r\n      case 'int':\r\n        return parseInt(value, 10);\r\n      case 'string':\r\n        return String(value);\r\n      case 'datetime':\r\n        return new Date(value);\r\n      case 'bool':\r\n        return value === 'true';\r\n      default:\r\n        throw new Error(`Unsupported data type: ${dataType}`);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { NotificationSettingsComponent } from './notification-settings.component';\r\nimport { NotificationSettingsRoutingModule } from './notification-settings-routing.module';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { NumberBoxDirective } from '../shared/directive/form-controls/number-box.directive';\r\nimport { TextBoxDirective } from '../shared/directive/form-controls/text-box.directive';\r\nimport { CheckBoxDirective } from '../shared/directive/form-controls/check-box.directive';\r\nimport { CustomButtonDirective } from '../shared/directive/form-controls/custom-button.directive';\r\n@NgModule({\r\n  declarations: [NotificationSettingsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NotificationSettingsRoutingModule,\r\n    SharedModule,\r\n    DXComponentsModule,\r\n    NumberBoxDirective,\r\n    TextBoxDirective,\r\n    CheckBoxDirective,\r\n    CustomButtonDirective\r\n  ],\r\n})\r\nexport class NotificationSettingsModule { }\r\n"],"x_google_ignoreList":[]}