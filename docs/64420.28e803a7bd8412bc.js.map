{"version":3,"file":"64420.28e803a7bd8412bc.js","mappings":"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","names":["columns","type","fixed","caption","buttons","name","template","dataField","visible","dataType","filterOperations","filterOperationTypes","text","allowFiltering","width","date","minWidth","allowSorting","cRUDEndpoints","index","get","create","update","delete","dataFieldLookupSourceMapping","path","pathForSelectedDisplay","dataFieldTranslationKeysMapping","translateKeys","relatedDataValueAndQueryStringKeyMapping","mapping","queryStringKey","editingPropertiesForCreating","popup","title","wrapperAttr","class","showCloseButton","toolbarItems","toolbar","height","form","colCount","items","editorType","colSpan","elementAttr","editingPropertiesForUpdating","editorOptions","disabled","CopyToClipboardComponent","constructor","toastService","this","copyToClipboard","navigator","clipboard","writeText","value","then","info","console","log","catch","err","error","static","t","i0","i1","core","Xpm","selectors","inputs","cellInfo","decls","vars","consts","rf","ctx","RegnerateTokenButtonComponent","restService","regenerateApiKey","request","url","method","subscribe","grid","instance","refresh","i2","cellInfo_r5","row","data","cellInfo_r6","id","_r0","ApiKeysComponent_ng_container_7_ng_container_1_ng_container_1_Template","ctx_r8","templateStore","getGridTemplates","template_r7","key","_c1","cellInfo_r9","ApiKeysComponent_ng_container_7_ng_container_1_Template","routes","component","ApiKeysComponent","gridDataSourceService","configStateService","tenantChooser","getOne$","currentUser","tenantId","tenantId$","tenandId","ngOnInit","gridDataSource","getDataSource","i3","i4","viewQuery","ApiKeysComponent_app_copy_to_clipboard_5_Template","ApiKeysComponent_app_regnerate_token_button_6_Template","ApiKeysComponent_ng_container_7_Template","ApiKeysComponent_div_9_Template","gridTemplates","canActivate","AuthGuard","PermissionGuard","ApiKeysRoutingModule","oAB","cJS","RouterModule","forChild","ApiKeysModule","CommonModule","SharedModule","DXComponentsModule","TenantChooserModule","GridGeneralFilterComponent","NotificationPagerComponent"],"sourceRoot":"webpack:///","sources":["./src/app/api-keys/config/columns.ts","./src/app/api-keys/config/crud-endpoints.ts","./src/app/api-keys/config/datafield-lookup-source-mapping.ts","./src/app/api-keys/config/datafield-translation-mapping.ts","./src/app/api-keys/config/datafield-value-query-string-key-mapping.ts","./src/app/api-keys/config/form-properties.ts","./src/app/api-keys/components/copy-to-clipboard/copy-to-clipboard.component.ts","./src/app/api-keys/components/copy-to-clipboard/copy-to-clipboard.component.html","./src/app/api-keys/components/regnerate-token-button/regnerate-token-button.component.ts","./src/app/api-keys/components/regnerate-token-button/regnerate-token-button.component.html","./src/app/api-keys/api-keys.component.html","./src/app/api-keys/api-keys-routing.module.ts","./src/app/api-keys/api-keys.component.ts","./src/app/api-keys/api-keys.module.ts"],"sourcesContent":["import type { Column } from 'devextreme/ui/data_grid';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\nconst activationStates = [\r\n  { id: 0, name: '失效' },\r\n  { id: 1, name: '有效' },\r\n  { id: 2, name: '未生效' }\r\n]\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    type: 'buttons',\r\n    fixed: true,\r\n    caption: '操作',\r\n    buttons: [\r\n      {\r\n        name: 'edit',\r\n        template: 'grid-edit-button'\r\n      },\r\n      {\r\n        name: 'delete',\r\n        template: 'grid-delete-button',\r\n      },\r\n      {\r\n        name: 'copy-token-value',\r\n        template: 'copy-token-value',\r\n      },\r\n      {\r\n        name: 'regenerate-token-button',\r\n        template: 'regenerate-token-button',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    dataField: 'id',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    dataType: 'string',\r\n    caption: 'API金鑰名稱',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    caption: '租戶',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    name: 'value',\r\n    // caption: \"Value\",\r\n    caption: 'Token 值',\r\n    allowFiltering: false,\r\n    width: 200\r\n  },\r\n  {\r\n    dataField: 'startTime',\r\n    caption: '起時',\r\n    dataType: 'datetime',\r\n    filterOperations: filterOperationTypes.date\r\n  },\r\n  {\r\n    dataField: 'endTime',\r\n    caption: '迄時',\r\n    dataType: 'datetime',\r\n    filterOperations: filterOperationTypes.date\r\n  },\r\n  {\r\n    name: 'status',\r\n    caption: '狀態',\r\n    dataType: 'string',\r\n    minWidth: 120,\r\n    allowFiltering: false,\r\n    allowSorting: false\r\n    // lookup: {\r\n    //   valueExpr: 'id',\r\n    //   displayExpr: 'name',\r\n    //   allowClearing: true,\r\n    //   dataSource: activationStates\r\n    // dataSource: {\r\n    //   store: new CustomStore({\r\n    //     key: 'id',\r\n    //     load: (loadOptions) => {\r\n    //       if (loadOptions.searchValue) {\r\n    //         const data = activationStates.filter(s => s.name.includes(loadOptions.searchValue))\r\n    //         return data;\r\n    //       }\r\n    //       return activationStates;\r\n    //     },\r\n    //     byKey(key, extraOptions) {\r\n    //       const data = activationStates.find(s => s.id === key)\r\n    //       return new Promise(res => {res(data)})\r\n    //     },\r\n    //   })\r\n    // }\r\n    // }\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    name: 'SpecifiedTenantName',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    caption: '指定租戶',\r\n    dataType: 'string',\r\n    // visible: false\r\n    //filterOperations:\r\n  },\r\n];","import { CRUDEndpoints } from \"src/app/shared/typing\";\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n  index: '/api/app/jbnotifier-admin/api-keys',\r\n  get: '/api/app/jbnotifier-admin/api-keys',\r\n  create: '/api/app/jbnotifier-admin/api-keys',\r\n  update: '/api/app/jbnotifier-admin/api-keys',\r\n  delete: '/api/app/jbnotifier-admin/api-keys',\r\n}","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n    pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants',\r\n  },\r\n];","import { DataFieldTranslationKeysMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = [\r\n  {\r\n    dataField: 'name',\r\n    translateKeys: ['AbpIdentity::Name'],\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    translateKeys: ['Saas::DisplayName:TenantName'],\r\n  },\r\n  {\r\n    dataField: 'startDate',\r\n    translateKeys: ['AbpAuditLogging::StartDate'],\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    translateKeys: ['AbpAuditLogging::EndDate'],\r\n  },\r\n  {\r\n    name: 'status',\r\n    translateKeys: ['AbpAccount::Status'],\r\n  },\r\n  // {\r\n  //   dataField: 'tenantId',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n];\r\n","import { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\n\r\n\r\n\r\n\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n  {\r\n    dataField: 'id',\r\n    mapping: ['apiKey', 'id'],\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    mapping: ['apiKey', 'name']\r\n  },\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    queryStringKey: 'TenantId',\r\n    mapping: ['tenant', 'id'],\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    queryStringKey: 'TenantName',\r\n    mapping: ['tenant', 'name'],\r\n  },\r\n  {\r\n    name: 'value', \r\n    queryStringKey: 'Value',\r\n    mapping: ['apiKey', 'value']\r\n  },\r\n  {\r\n    dataField: 'startTime',\r\n    queryStringKey: 'StartTime',\r\n    mapping: ['apiKey', 'startTime'],\r\n  },\r\n  {\r\n    dataField: 'endTime',\r\n    queryStringKey: 'EndTime',\r\n    mapping: ['apiKey', 'endTime'],\r\n  },\r\n  {\r\n    name: 'status',\r\n    queryStringKey: 'Status',\r\n    mapping: ['apiKey', 'status'],\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    mapping: ['apiKey', 'concurrencyStamp'],\r\n  },\r\n  {\r\n    name: \"SpecifiedTenantName\",\r\n    mapping: ['tenant', 'name']\r\n  }\r\n];","import type { Editing } from 'devextreme/ui/data_grid';\r\nconst formItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    editorType: 'dxSelectBox',\r\n    colSpan: 1,\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    editorType: 'dxTextBox',\r\n    colSpan: 1\r\n  },\r\n  {\r\n    dataField: 'startTime',\r\n    editorType: 'dxDateBox',\r\n    colSpan: 1\r\n  },\r\n  {\r\n    dataField: 'endTime',\r\n    editorType: 'dxDateBox',\r\n    colSpan: 1,\r\n  },\r\n];\r\n\r\nconst editFormItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    editorType: 'dxSelectBox',\r\n    editorOptions: { disabled: true },\r\n    colSpan: 1\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    editorType: 'dxTextBox',\r\n    colSpan: 1\r\n  },\r\n  {\r\n    dataField: 'startTime',\r\n    editorType: 'dxDateBox',\r\n    colSpan: 1,\r\n  },\r\n  {\r\n    dataField: 'endTime',\r\n    editorType: 'dxDateBox',\r\n    colSpan: 1,\r\n  },\r\n];\r\n/**\r\n * Properties for creating popup form.\r\n */\r\nexport const editingPropertiesForCreating: Editing = {\r\n  popup: {\r\n    title: '新增API金鑰',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    showCloseButton: true,\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar'\r\n      }\r\n    ],\r\n    width: '85vw',\r\n    height: '90vh'\r\n  },\r\n  form: {\r\n    colCount: 2,\r\n    items: formItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  },\r\n};\r\n\r\n/**\r\n * Properties for updating popup form.\r\n */\r\n\r\nexport const editingPropertiesForUpdating: Editing = {\r\n  popup: {\r\n    title: '編輯API金鑰',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    showCloseButton: true,\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar'\r\n      }\r\n    ],\r\n    width: '85vw',\r\n    height: '90vh'\r\n  },\r\n  form: {\r\n    colCount: 2,\r\n    items: editFormItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  },\r\n};","import { Component, Input } from \"@angular/core\";\r\nimport { DxToastService } from \"src/app/shared/service/toast.service\";\r\n\r\n@Component({\r\n    selector: 'app-copy-to-clipboard',\r\n    templateUrl: 'copy-to-clipboard.component.html',\r\n})\r\nexport class CopyToClipboardComponent {\r\n    @Input() value: string;\r\n    @Input() cellInfo: string;\r\n    \r\n    constructor(\r\n      private toastService: DxToastService\r\n    ) {\r\n    }\r\n    copyToClipboard = () => {\r\n      // e.preventDefault();\r\n      navigator.clipboard.writeText(this.value)\r\n      .then(() => {\r\n        this.toastService.info(`已複製Token: ${this.value}`)\r\n        console.log('Text copied to clipboard');\r\n      })\r\n      .catch(err => {\r\n        console.error('Error copying text: ', err);\r\n      });\r\n    }\r\n}","<dx-button\r\n    stylingMode=\"contained\"\r\n    icon=\"copy\"\r\n    type=\"normal\"\r\n    (onClick)=\"copyToClipboard()\"\r\n>\r\n</dx-button>","import { Component, Input } from \"@angular/core\";\r\nimport type { DxDataGridComponent } from \"devextreme-angular/ui/data-grid\";\r\nimport { AppRestService } from \"src/app/shared/service/rest.service\";\r\nimport { DxToastService } from \"src/app/shared/service/toast.service\";\r\n\r\n@Component({\r\n    selector: 'app-regnerate-token-button',\r\n    templateUrl: 'regnerate-token-button.component.html',\r\n})\r\nexport class RegnerateTokenButtonComponent {\r\n    @Input() value: string;\r\n    @Input() grid: DxDataGridComponent\r\n    constructor(\r\n      private restService: AppRestService,\r\n      private toastService: DxToastService\r\n    ) {}\r\n\r\n    regenerateApiKey = () => {\r\n      // e.preventDefault();\r\n      this.restService.request({\r\n        url: `/api/app/jbnotifier-admin/api-keys/values/${this.value}`,\r\n        method: 'PUT',\r\n      }).subscribe(() => {\r\n        this.grid.instance.refresh();\r\n        this.toastService.info('已重新產生Token!');\r\n      })\r\n    }\r\n}","<dx-button\r\n    stylingMode=\"contained\"\r\n    icon=\"refresh\"\r\n    type=\"success\"\r\n    (onClick)=\"regenerateApiKey()\"\r\n>\r\n</dx-button>","<div class=\"custom-grid-container\">\r\n  <app-tenant-chooser></app-tenant-chooser>\r\n\r\n  <app-grid-tool-bar [grid]=\"grid\"></app-grid-tool-bar>\r\n\r\n  <dx-data-grid\r\n    #grid\r\n    appGridFeature\r\n    appGridFeatureNotification\r\n    [dataFieldTranslationKeysMapping]=\"dataFieldTranslationKeysMapping\"\r\n    [datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n    [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n    [editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n    [editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n    [columns]=\"columns\"\r\n    [dataSource]=\"gridDataSource\"\r\n    [syncLookupFilterValues]=\"false\"\r\n  >\r\n    <app-copy-to-clipboard\r\n      *dxTemplate=\"let cellInfo of 'copy-token-value'\"\r\n      [cellInfo]=\"cellInfo\"\r\n      [value]=\"cellInfo.row?.data?.value\"\r\n    >\r\n    </app-copy-to-clipboard>\r\n    <app-regnerate-token-button\r\n      *dxTemplate=\"let cellInfo of 'regenerate-token-button'\"\r\n      [value]=\"cellInfo.row?.data?.id\"\r\n      [grid]=\"grid\"\r\n    >\r\n    </app-regnerate-token-button>\r\n\r\n    <!-- <dxo-toolbar [visible]=\"false\">\r\n      <dxi-item location=\"before\">\r\n        <dx-button\r\n          *dxTemplate\r\n          appGridAddButton\r\n          (onClick)=\"grid.instance.addRow()\"\r\n        >\r\n        </dx-button>\r\n      </dxi-item>\r\n      <dxi-item location=\"after\">\r\n        <app-grid-after-tool-bar\r\n          *dxTemplate\r\n          [grid]=\"grid\"\r\n        >\r\n        </app-grid-after-tool-bar>\r\n      </dxi-item>\r\n      <dxi-item name=\"applyFilterButton\" cssClass=\"d-none\"></dxi-item>\r\n    </dxo-toolbar> -->\r\n\r\n    <ng-container *ngFor=\"let template of templateStore.gridTemplates | keyvalue\">\r\n      <ng-container *dxTemplate=\"let cellInfo of template.key\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            templateStore.getGridTemplates(template.key);\r\n            context: { $implicit: cellInfo }\r\n          \"\r\n        >\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <div *dxTemplate=\"let cellInfo of 'bottom-toolbar'\">\r\n      <app-bottom-toolbar-btns [grid]=\"grid\"></app-bottom-toolbar-btns>\r\n    </div>\r\n  </dx-data-grid>\r\n\r\n  <app-notification-pager [grid]=\"grid\"></app-notification-pager>\r\n</div>","import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ApiKeysComponent } from './api-keys.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ApiKeysComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ApiKeysRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport type { Editing, InitNewRowEvent } from 'devextreme/ui/data_grid';\r\nimport type { DxDataGridComponent } from 'devextreme-angular/ui/data-grid';\r\nimport type { Column } from 'devextreme/ui/data_grid';\r\nimport { columns } from './config/columns';\r\nimport { cRUDEndpoints } from './config/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from './config/datafield-lookup-source-mapping';\r\nimport { dataFieldTranslationKeysMapping } from './config/datafield-translation-mapping';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from './config/datafield-value-query-string-key-mapping';\r\nimport {\r\n  editingPropertiesForCreating,\r\n  editingPropertiesForUpdating,\r\n} from './config/form-properties';\r\n\r\nimport type DataSource from 'devextreme/data/data_source';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping, DataFieldTranslationKeysMapping, RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\nimport { GridDataSourceService } from 'src/app/shared/service/grid-data-source.service/grid-data-source.service';\r\nimport { TemplateStoreService } from 'src/app/shared/service/template-store.service';\r\nimport { TenantChooserService } from '../shared/modules/tenant-chooser/tenant-chooser.service';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\n/**\r\n * API KEY 控制頁面 - API KEY 控制頁面\r\n * API KEY - 外部系統認證權限使用的KEY\r\n */\r\n@Component({\r\n  selector: 'app-api-keys',\r\n  templateUrl: 'api-keys.component.html',\r\n  styleUrls: [],\r\n})\r\n/**\r\n *\r\n */\r\nexport class ApiKeysComponent implements OnInit {\r\n  /**\r\n   * @property {Editing} editingPropertiesForCreating Setting for create.\r\n   * @property {Editing} editingPropertiesForUpdating Setting for upate.\r\n   * @property {Array} probationaryCalculations Probationary related calculations.\r\n   */\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent;\r\n  // grid related properties\r\n  columns: Column[] = columns;\r\n  gridDataSource: DataSource;\r\n  cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n  // formItemTranslationMapping: any[] = formItemTranslationMapping;\r\n  dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping =\r\n    dataFieldTranslationKeysMapping;\r\n  relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping =\r\n    relatedDataValueAndQueryStringKeyMapping;\r\n  editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n  editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n\r\n  /**\r\n   * 當tenantId改變時，重新載入grid資料。\r\n   * \r\n   * 使用[ConfigStateService]{@link https://abp.io/docs/8.0/UI/Angular/Config-State-Service}\r\n   * 取得tenantId決定不要顯示租戶，租戶登入時，不顯示該欄位。\r\n   * \r\n   * host登入時，可以看到租戶選單，監控[tenantId]{@link TenantChooserService#tenantId$}變化，連動資料變化。\r\n   * \r\n   * @param {GridDataSourceService} gridDataSourceService\r\n   * @param templateStore \r\n   * @param configStateService \r\n   * @param tenantChooser \r\n   */\r\n  constructor(\r\n    private gridDataSourceService: GridDataSourceService,\r\n    protected templateStore: TemplateStoreService,\r\n    private configStateService: ConfigStateService,\r\n    private tenantChooser: TenantChooserService\r\n  ) {\r\n    this.configStateService.getOne$(\"currentUser\").subscribe(currentUser => {\r\n      if (currentUser.tenantId) {\r\n        this.columns[3].visible = false;\r\n        this.editingPropertiesForCreating.form.items[0].visible = false\r\n        this.editingPropertiesForUpdating.form.items[0].visible = false\r\n      }\r\n    })\r\n\r\n    this.tenantChooser.tenantId$.subscribe(tenandId => {\r\n      \r\n      this.grid?.instance?.refresh()\r\n    })\r\n  }\r\n  /**\r\n   * 使用{@link GridDataSourceService#getDataSource}取得grid datasource，設定給[DataGrid]{@link DataGrid https://js.devexpress.com/Angular/Documentation/Guide/UI_Components/DataGrid/Overview/}使用\r\n   */\r\n  ngOnInit(): void {\r\n    this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n      cRUDEndpoints,\r\n      relatedDataValueAndQueryStringKeyMapping\r\n    );\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiKeysComponent } from './api-keys.component';\r\nimport { ApiKeysRoutingModule } from './api-keys-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CopyToClipboardComponent } from './components/copy-to-clipboard/copy-to-clipboard.component';\r\nimport { RegnerateTokenButtonComponent } from './components/regnerate-token-button/regnerate-token-button.component';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { TenantChooserModule } from '../shared/modules/tenant-chooser/tenant-chooser.module';\r\nimport { GridGeneralFilterComponent } from '../shared/components/grid/grid-general-filter/grid-general-filter.component';\r\nimport { NotificationPagerComponent } from \"../shared/components/notification/notification-pager/notification-pager.component\";\r\n@NgModule({\r\n  declarations: [\r\n    ApiKeysComponent,\r\n    CopyToClipboardComponent,\r\n    RegnerateTokenButtonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ApiKeysRoutingModule,\r\n    SharedModule,\r\n    DXComponentsModule,\r\n    TenantChooserModule,\r\n    GridGeneralFilterComponent,\r\n    NotificationPagerComponent\r\n  ],\r\n})\r\n\r\nexport class ApiKeysModule { }"],"x_google_ignoreList":[]}