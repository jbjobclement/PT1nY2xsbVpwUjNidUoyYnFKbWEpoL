{"version":3,"file":"87845.c201e872871bfc2d.js","mappings":"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","names":["columns","type","fixed","buttons","name","template","visible","options","row","data","isDeletable","width","caption","dataType","filterOperations","filterOperationTypes","text","headerCellTemplate","minWidth","dataField","validationRules","requiredValidationRule","calculateDisplayValue","rowData","notificationProviders","map","provider","displayName","join","allowSorting","allowFiltering","datetime","notificationSchedulePlan","expectedEndTime","formatTime","number","alignment","calculateCellValue","isCompletelySuccessful","editCellTemplate","cRUDEndpoints","index","get","create","update","delete","dataFieldLookupSourceMapping","path","pathForSelectedDisplay","relatedDataValueAndQueryStringKeyMapping","mapping","queryStringKey","formItems","itemType","cssClass","colCount","items","editorType","editorOptions","min","dateSerializationFormat","colSpan","label","height","htmlProperties","editingPropertiesForCreating","popup","title","wrapperAttr","class","showCloseButton","toolbarItems","toolbar","form","elementAttr","editingPropertiesForUpdating","i0","CronExpressionsJobListComponent_ng_container_15_ng_container_1_ng_container_1_Template","ctx_r4","templateStore","getGridTemplates","template_r3","key","_c1","cellInfo_r5","CronExpressionsJobListComponent_ng_container_15_ng_container_1_Template","routes","component","CronExpressionsJobListComponent","constructor","route","router","gridDataSourceService","notificationTemplateStore","tenantChooser","appRestService","this","tenantId$","subscribe","tenandId","grid","instance","refresh","ngOnInit","paramMap","params","console","log","cronExpression","encodeURIComponent","decodedCronExpression","decodeURIComponent","request","method","url","res","titleCronExpression","description","gridDataSource","getDataSource","static","t","i1","i2","i3","i4","i5","i6","core","Xpm","selectors","viewQuery","rf","ctx","navigate","CronExpressionsJobListComponent_ng_container_15_Template","CronExpressionsJobListComponent_ng_container_17_Template","_r0","gridTemplates","getTemplates","loadChildren","Promise","all","__webpack_require__","e","then","bind","m","CreateNotificationInfoModule","CronExpressionsJobListRoutingModule","oAB","cJS","RouterModule","forChild","CronExpressionsJobListModule","CommonModule","DXComponentsModule","SharedModule","TenantChooserModule","JBHeaderFilterComponent","GridFilterItemsComponent"],"sourceRoot":"webpack:///","sources":["./src/app/cron-expressions-job-list/config/columns.ts","./src/app/cron-expressions-job-list/config/crud-endpoints.ts","./src/app/cron-expressions-job-list/config/datafield-lookup-source-mapping.ts","./src/app/cron-expressions-job-list/config/datafield-value-query-string-key-mapping.ts","./src/app/cron-expressions-job-list/config/form-properties.ts","./src/app/cron-expressions-job-list/components/cron-expressions-job-list.component.html","./src/app/cron-expressions-job-list/cron-expressions-job-list-routing.module.ts","./src/app/cron-expressions-job-list/components/cron-expressions-job-list.component.ts","./src/app/cron-expressions-job-list/cron-expressions-job-list.module.ts"],"sourcesContent":["import CustomStore from 'devextreme/data/custom_store';\r\nimport { Column } from 'devextreme/ui/data_grid';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\nimport { formatTime } from 'src/app/shared/utils/time-format/utils';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    type: 'buttons',\r\n    fixed: true,\r\n    buttons: [\r\n      {\r\n        name: 'delete',\r\n        template: 'grid-delete-button',\r\n        visible(options) {\r\n          const isDeletable = options.row.data.isDeletable\r\n          return isDeletable;\r\n        },\r\n      },\r\n    ],\r\n    width: 36\r\n  },\r\n  // grid item\r\n  {\r\n    name: 'tenantName',\r\n    caption: '租戶名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    headerCellTemplate: 'tenantName',\r\n    minWidth: 120\r\n  },\r\n  {\r\n    name: 'notificationCategoryName',\r\n    caption: '分類名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    headerCellTemplate: 'notificationCategoryName',\r\n    minWidth: 120\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    caption: '通知名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    validationRules: [requiredValidationRule],\r\n    headerCellTemplate: 'notificationName',\r\n    minWidth: 120\r\n  },\r\n  {\r\n    dataField: 'title',\r\n    caption: '標題',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    validationRules: [requiredValidationRule],\r\n    headerCellTemplate: 'notificationTitle',\r\n    minWidth: 120\r\n  },\r\n  {\r\n    name: 'notificationProviders',\r\n    caption: '通知提供者',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    calculateDisplayValue(rowData) {\r\n      return rowData.notificationProviders?.map(provider => provider.displayName).join('、')\r\n    },\r\n    headerCellTemplate: 'notificationProviders',\r\n    minWidth: 120,\r\n    allowSorting: false,\r\n    allowFiltering: false\r\n  },\r\n  {\r\n    name: 'receiverDescription',\r\n    caption: '接收者描述',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    headerCellTemplate: 'receiverDescription',\r\n    minWidth: 120,\r\n    allowSorting: false,\r\n    allowFiltering: false\r\n  },\r\n  {\r\n    dataField: 'notificationDataFetchEndpoint',\r\n    caption: '取得通知資料 Endpoint',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    headerCellTemplate: 'notificationDataFetchEndpoint',\r\n    minWidth: 120,\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'hookEndpoint',\r\n    caption: 'Hook',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    headerCellTemplate: 'hookEndpoint',\r\n    minWidth: 120,\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'expectedEndTime',\r\n    caption: '預計結束時間',\r\n    dataType: 'datetime',\r\n    filterOperations: filterOperationTypes.datetime,\r\n    headerCellTemplate: 'expectedEndTime',\r\n    minWidth: 120,\r\n    calculateDisplayValue(rowData) {\r\n      return rowData.notificationSchedulePlan?.expectedEndTime ? formatTime(rowData.notificationSchedulePlan?.expectedEndTime) : ''\r\n    },\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'expectedPushCount',\r\n    caption: '預計推送次數',\r\n    dataType: 'number',\r\n    filterOperations: filterOperationTypes.number,\r\n    alignment: 'left',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'isFullyFinished',\r\n    caption: '全部結束',\r\n    dataType: 'boolean',\r\n  },\r\n  {\r\n    dataField: 'isCompletelySuccessful',\r\n    caption: '全部完成',\r\n    dataType: 'boolean',\r\n    calculateCellValue(rowData) {\r\n      return rowData.isCompletelySuccessful ? true : false\r\n    },\r\n  },\r\n\r\n  // edit form\r\n  {\r\n    dataField: 'notificationProviderIds',\r\n    caption: '通知提供者id (可複選)',\r\n    dataType: 'object',\r\n    visible: false,\r\n    editCellTemplate: 'notificationProviderIds',\r\n    validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'isSendToAllReceivers',\r\n    caption: '接收者',\r\n    dataType: 'boolean',\r\n    visible: false,\r\n    editCellTemplate: 'isSendToAllReceivers'\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    caption: '接收者 (可複選)',\r\n    dataType: 'object',\r\n    visible: false,\r\n    editCellTemplate: 'receiverIds'\r\n  },\r\n  {\r\n    dataField: 'receiverGroupIds',\r\n    caption: '接收群組 (可複選)',\r\n    dataType: 'object',\r\n    visible: false,\r\n    editCellTemplate: 'receiverGroupIds'\r\n  },\r\n  {\r\n    dataField: 'topicIds',\r\n    caption: '主題 (可複選)',\r\n    dataType: 'object',\r\n    visible: false,\r\n    editCellTemplate: 'topicIds'\r\n  },\r\n  {\r\n    dataField: 'isIndependentNotificationSettingUsing',\r\n    caption: '通知設定',\r\n    dataType: 'boolean',\r\n    visible: false,\r\n    editCellTemplate: 'isIndependentNotificationSettingUsing'\r\n  },\r\n  {\r\n    dataField: 'notificationSettings',\r\n    caption: '通知設定項目',\r\n    dataType: 'object',\r\n    visible: false,\r\n    editCellTemplate: 'notificationSettings'\r\n  },\r\n  {\r\n    dataField: 'notificationCategoryId',\r\n    caption: '通知分類 Id',\r\n    dataType: 'string',\r\n    visible: false,\r\n    validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'subtitle',\r\n    caption: '子標題',\r\n    dataType: 'string',\r\n    visible: false,\r\n    validationRules: [requiredValidationRule]\r\n  },\r\n\r\n  // notification content\r\n  {\r\n    dataField: 'textContent',\r\n    caption: '文字內容',\r\n    dataType: 'string',\r\n    visible: false,\r\n    // validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'htmlContent',\r\n    caption: 'Html 內容',\r\n    dataType: 'string',\r\n    visible: false,\r\n    // validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'isFetchNotificationDataByEachReceiver',\r\n    caption: '是否依各通知接收者取得資料',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'filePaths',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'hyperlink',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n\r\n  // notification template\r\n  {\r\n    dataField: 'isUsingTemplate',\r\n    caption: '模板',\r\n    dataType: 'boolean',\r\n    visible: false,\r\n    editCellTemplate: 'isUsingTemplate'\r\n  },\r\n  {\r\n    dataField: 'textContentNotificationTemplateId',\r\n    caption: '通知模板 Id',\r\n    dataType: 'string',\r\n    visible: false,\r\n    // validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'textContentNotificationTemplateArgs',\r\n    caption: '通知模板參數',\r\n    dataType: 'string',\r\n    visible: false,\r\n    // validationRules: [requiredValidationRule],\r\n    editCellTemplate: 'textContentNotificationTemplateArgs'\r\n  }\r\n];","import { CRUDEndpoints } from \"src/app/shared/typing\";\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n  index: '/api/app/jbnotifier-admin/cron-expressions/notifications',\r\n  get: '/api/app/jbnotifier-admin/cron-expressions/notifications',\r\n  create: '/api/app/jbnotifier-admin/cron-expressions/notifications',\r\n  update: '/api/app/jbnotifier-admin/cron-expressions/notifications',\r\n  delete: '/api/app/jbnotifier-admin/cron-expressions/notifications',\r\n};","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n  {\r\n    dataField: 'notificationProviderIds',\r\n    path: '/api/app/recurring-notifications/notification-provider-lookup',\r\n    // pathForSelectedDisplay: '/api/app/notification-providers'\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    path: '/api/app/recurring-notifications/receiver-lookup',\r\n    pathForSelectedDisplay: '/api/app/jbnotifier-admin/receivers'\r\n  },\r\n  {\r\n    dataField: 'receiverGroupIds',\r\n    path: '/api/app/recurring-notifications/receiver-group-lookup',\r\n    pathForSelectedDisplay: '/api/app/jbnotifier-admin/receiver-groups'\r\n  },\r\n  {\r\n    dataField: 'topicIds',\r\n    path: '/api/app/recurring-notifications/topic-lookup',\r\n    pathForSelectedDisplay: '/api/app/jbnotifier-admin/topics'\r\n  },\r\n  {\r\n    dataField: 'textContentNotificationTemplateId',\r\n    path: '/api/app/recurring-notifications/notification-template-lookup',\r\n    pathForSelectedDisplay: '/api/app/jbnotifier-admin/notification-templates'\r\n  },\r\n  {\r\n    dataField: 'receiverGroupIds',\r\n    path: '/api/app/recurring-notifications/receiver-group-lookup',\r\n    pathForSelectedDisplay: '/api/app//receiver-groups'\r\n  },\r\n  {\r\n    dataField: 'notificationCategoryId',\r\n    path: '/api/app/recurring-notifications/notification-category-lookup',\r\n    pathForSelectedDisplay: '/api/app/notification-categories'\r\n  }\r\n];","import { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\n\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n  {\r\n    dataField: 'id',\r\n    mapping: ['notificationSchedulePlan', 'id'],\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    mapping: ['notificationInfo', 'concurrencyStamp'],\r\n  },\r\n  {\r\n    dataField: 'type',\r\n    mapping: ['notificationInfo', 'type'],\r\n  },\r\n  // \r\n  {\r\n    dataField: 'title',\r\n    queryStringKey: 'Title',\r\n    mapping: ['notificationInfo', 'title'],\r\n  },\r\n  {\r\n    name: 'name',\r\n    queryStringKey: 'Name',\r\n    mapping: ['notificationInfo', 'name'],\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    queryStringKey: 'TenantName',\r\n    mapping: ['tenant', 'name'],\r\n  },\r\n  {\r\n    name: 'notificationCategoryName',\r\n    queryStringKey: 'NotificationCategoryName',\r\n    mapping: ['notificationCategory', 'name'],\r\n  },\r\n  {\r\n    name: 'notificationProviders',\r\n    queryStringKey: 'NotificationProviderNames',\r\n    mapping: ['notificationProviders'],\r\n  },\r\n  {\r\n    name: 'receiverDescription',\r\n    queryStringKey: 'ReceiverDescription',\r\n    mapping: ['receiverDescription'],\r\n  },\r\n\r\n  // \r\n  {\r\n    dataField: 'notificationDataFetchEndpoint',\r\n    queryStringKey: 'NotificationDataFetchEndpoint',\r\n    mapping: ['notificationInfo', 'notificationDataFetchEndpoint']\r\n  },\r\n  {\r\n    dataField: 'hookEndpoint',\r\n    queryStringKey: 'HookEndpoint',\r\n    mapping: ['notificationInfo', 'hookEndpoint'],\r\n  },\r\n  {\r\n    dataField: 'isFullyFinished',\r\n    queryStringKey: 'IsFullyFinished',\r\n    mapping: ['notificationInfo', 'isFullyFinished'],\r\n  },\r\n  {\r\n    dataField: 'isCompletelySuccessful',\r\n    queryStringKey: 'IsCompletelySuccessful',\r\n    mapping: ['notificationInfo', 'isCompletelySuccessful'],\r\n  },\r\n  {\r\n    name: 'isDeletable',\r\n    queryStringKey: 'IsDeletable',\r\n    mapping: ['isDeletable'],\r\n  },\r\n  {\r\n    name: 'isEditable',\r\n    queryStringKey: 'IsEditable',\r\n    mapping: ['isEditable'],\r\n  },\r\n\r\n  // \r\n  {\r\n    dataField: 'notificationProviderIds',\r\n    mapping: ['notificationProviderIds']\r\n  },\r\n  {\r\n    dataField: 'isSendToAllReceivers',\r\n    mapping: ['notificationInfo', 'isSendToAllReceivers']\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    mapping: ['receiverIds']\r\n  },\r\n  {\r\n    dataField: 'receiverGroupIds',\r\n    mapping: ['receiverGroupIds']\r\n  },\r\n  {\r\n    dataField: 'topicIds',\r\n    mapping: ['topicIds']\r\n  },\r\n  {\r\n    dataField: 'isIndependentNotificationSettingUsing',\r\n    mapping: ['notificationInfo', 'isIndependentNotificationSettingUsing']\r\n  },\r\n  {\r\n    dataField: 'notificationSettings',\r\n    mapping: ['notificationSettings']\r\n  },\r\n  {\r\n    dataField: 'notificationCategoryId',\r\n    mapping: ['notificationCategory', 'id']\r\n  },\r\n  {\r\n    dataField: 'subtitle',\r\n    mapping: ['notificationInfo', 'subtitle']\r\n  },\r\n  {\r\n    dataField: 'textContent',\r\n    mapping: ['notificationInfo', 'textContent']\r\n  },\r\n  {\r\n    dataField: 'htmlContent',\r\n    mapping: ['notificationInfo', 'htmlContent']\r\n  },\r\n  {\r\n    dataField: 'isFetchNotificationDataByEachReceiver',\r\n    mapping: ['notificationInfo', 'isFetchNotificationDataByEachReceiver']\r\n  },\r\n  {\r\n    dataField: 'filePaths',\r\n    mapping: ['notificationInfo', 'filePaths']\r\n  },\r\n  {\r\n    dataField: 'hyperlink',\r\n    mapping: ['notificationInfo', 'hyperlink']\r\n  },\r\n\r\n  // \r\n  {\r\n    dataField: 'textContentNotificationTemplateId',\r\n    mapping: ['textContentNotificationTemplate', 'id']\r\n  },\r\n  {\r\n    dataField: 'htmlContentNotificationTemplateId',\r\n    mapping: ['htmlContentNotificationTemplate', 'id']\r\n  },\r\n  {\r\n    dataField: 'textContentNotificationTemplateArgs',\r\n    mapping: ['notificationInfo', 'textContentNotificationTemplateArgs']\r\n  },\r\n  {\r\n    dataField: 'htmlContentNotificationTemplateArgs',\r\n    mapping: ['notificationInfo', 'htmlContentNotificationTemplateArgs']\r\n  },\r\n  // \r\n  {\r\n    name: 'notificationSchedulePlan',\r\n    mapping: ['notificationSchedulePlan'],\r\n  },\r\n  {\r\n    dataField: 'expectedPushCount',\r\n    mapping: ['notificationSchedulePlan', 'expectedPushCount']\r\n  },\r\n  {\r\n    dataField: 'expectedEndTime',\r\n    mapping: ['notificationSchedulePlan', 'expectedEndTime']\r\n  },\r\n];\r\n","import { Editing } from 'devextreme/ui/data_grid';\r\nimport type { Properties } from 'devextreme/ui/form';\r\nimport { htmlProperties } from 'src/app/shared/htmlProperties';\r\n\r\nconst formItems: Properties['items'] = [\r\n    {\r\n        itemType: 'group',\r\n        name: 'CronExpressionGroup',\r\n        cssClass: 'CronExpressionGroup',\r\n        colCount: 2,\r\n        caption: '每分鐘 | ******',\r\n        items: [\r\n            {\r\n                dataField: 'expectedPushCount',\r\n                editorType: 'dxNumberBox',\r\n                editorOptions: {\r\n                    min: 0\r\n                }\r\n            },\r\n            {\r\n                dataField: 'expectedEndTime',\r\n                editorType: 'dxDateBox',\r\n                editorOptions: {\r\n                    dateSerializationFormat: \"yyyy-MM-ddTHH:mm:ss.SSS+08:00\"\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'TopGroup',\r\n        cssClass: 'TopGroup',\r\n        colCount: 8,\r\n        items: [\r\n            {\r\n                itemType: 'group',\r\n                name: 'BasicGroup',\r\n                cssClass: 'BasicGroup',\r\n                caption: '基本',\r\n                colSpan: 5,\r\n                items: [\r\n                    {\r\n                        dataField: 'notificationProviderIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'isSendToAllReceivers',\r\n                        cssClass: 'isSendToAllReceivers'\r\n                    },\r\n                    {\r\n                        dataField: 'receiverIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'receiverGroupIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'topicIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'SettingGroup',\r\n                cssClass: 'SettingGroup',\r\n                caption: '設定',\r\n                colSpan: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'isIndependentNotificationSettingUsing'\r\n                    },\r\n                    {\r\n                        dataField: 'notificationSettings',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'NotificationContentGroup',\r\n        cssClass: 'NotificationContentGroup',\r\n        caption: '通知內容',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'isUsingTemplate',\r\n                cssClass: 'isUsingTemplate',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'notificationCategoryId',\r\n                editorType: 'dxSelectBox'\r\n            },\r\n            {\r\n                itemType: 'empty'\r\n            },\r\n            {\r\n                dataField: 'title',\r\n                editorType: 'dxTextBox'\r\n            },\r\n            {\r\n                dataField: 'subtitle',\r\n                editorType: 'dxTextBox'\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'CustomContentGroup',\r\n                cssClass: 'CustomContentGroup',\r\n                colSpan: 2,\r\n                colCount: 8,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContent',\r\n                        editorType: 'dxTextArea',\r\n                        editorOptions: {\r\n                            height: '240px'\r\n                        },\r\n                        colSpan: 3\r\n                    },\r\n                    {\r\n                        dataField: 'htmlContent',\r\n                        editorType: 'dxHtmlEditor',\r\n                        editorOptions: {\r\n                            ...htmlProperties,\r\n                            height: '240px'\r\n                        },\r\n                        colSpan: 5\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'NotificationTemplateGroup',\r\n                cssClass: 'NotificationTemplateGroup NotificationTemplateGroup--inactive',\r\n                colSpan: 2,\r\n                colCount: 2,\r\n                items: [\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateId',\r\n                        editorType: 'dxSelectBox'\r\n                    },\r\n                    {\r\n                        itemType: 'empty'\r\n                    },\r\n                    {\r\n                        dataField: 'textContentNotificationTemplateArgs',\r\n                        label: {\r\n                            visible: false\r\n                        },\r\n                        colSpan: 2,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'EndpointGroup',\r\n                cssClass: 'EndpointGroup',\r\n                colSpan: 2,\r\n                colCount: 3,\r\n                items: [\r\n                    {\r\n                        dataField: 'notificationDataFetchEndpoint',\r\n                        editorType: 'dxTextBox'\r\n                    },\r\n                    {\r\n                        dataField: 'hookEndpoint',\r\n                        editorType: 'dxTextBox'\r\n                    },\r\n                    {\r\n                        dataField: 'isFetchNotificationDataByEachReceiver',\r\n                        editorType: 'dxCheckBox',\r\n                        cssClass: 'basic-form-checkbox'\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    }\r\n]\r\n\r\nexport const editingPropertiesForCreating: Editing = {\r\n    popup: {\r\n        title: '::編輯',\r\n        wrapperAttr: { class: 'basic-popup' },\r\n        showCloseButton: true,\r\n        toolbarItems: [\r\n            {\r\n                toolbar: 'bottom',\r\n                template: 'bottom-toolbar'\r\n            }\r\n        ]\r\n    },\r\n    form: {\r\n        colCount: 1,\r\n        items: formItems,\r\n        elementAttr: { class: 'custom-form custom-form--edit custom-form--edit-notification' }\r\n    }\r\n}\r\n\r\nexport const editingPropertiesForUpdating: Editing = {\r\n    popup: {\r\n        title: '::編輯',\r\n        wrapperAttr: { class: 'basic-popup' },\r\n        showCloseButton: true,\r\n        toolbarItems: [\r\n            {\r\n                toolbar: 'bottom',\r\n                template: 'bottom-toolbar'\r\n            }\r\n        ]\r\n    },\r\n    form: {\r\n        colCount: 1,\r\n        items: formItems,\r\n        elementAttr: { class: 'custom-form custom-form--edit custom-form--edit-notification' }\r\n    }\r\n}","\r\n<div class=\"custom-grid-container\">\r\n  <app-tenant-chooser></app-tenant-chooser>\r\n\r\n  <div class=\"cron-expressions-title\"><span>通知清單</span> {{titleCronExpression}}</div>\r\n\r\n  <div class=\"grid-tool-bar\">\r\n      <div>\r\n        <app-grid-filter-items\r\n          [grid]=\"grid\"\r\n        ></app-grid-filter-items>\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <dx-button\r\n            appGridAddButton\r\n            (onClick)=\"router.navigate(['./cron-expressions/'+ cronExpression + '/create-notification-info'])\"\r\n          >\r\n          </dx-button>\r\n        </div>\r\n        <app-grid-after-tool-bar\r\n          [grid]=\"grid\"\r\n        >\r\n        </app-grid-after-tool-bar>\r\n      </div>\r\n  </div>\r\n\r\n  <dx-data-grid\r\n    #grid\r\n    appGridFeature\r\n    appGridFeatureNotification\r\n    [datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n    [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n    [editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n    [editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n    [columns]=\"columns\"\r\n    [dataSource]=\"gridDataSource\"\r\n    [isEditingDataAsync]=\"true\"\r\n  >\r\n\r\n    <ng-container *ngFor=\"let template of templateStore.gridTemplates | keyvalue\">\r\n      <ng-container *dxTemplate=\"let cellInfo of template.key\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            templateStore.getGridTemplates(template.key);\r\n            context: { $implicit: cellInfo }\r\n          \"\r\n        >\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </dx-data-grid>\r\n\r\n  <ng-container\r\n    *ngTemplateOutlet=\"\r\n      notificationTemplateStore.getTemplates('notificationPager');\r\n      context: { $implicit: grid }\r\n    \"\r\n  >\r\n  </ng-container>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CronExpressionsJobListComponent } from './components/cron-expressions-job-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CronExpressionsJobListComponent },\r\n  {\r\n    path: 'create-notification-info',\r\n    loadChildren: () => import('../create-notification-info/create-notification-info.module').then(m => m.CreateNotificationInfoModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CronExpressionsJobListRoutingModule { }\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport { Column, Editing } from 'devextreme/ui/data_grid';\r\nimport { columns } from '../config/columns';\r\nimport { cRUDEndpoints } from '../config/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from '../config/datafield-lookup-source-mapping';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from '../config/datafield-value-query-string-key-mapping';\r\nimport { GridDataSourceService } from 'src/app/shared/service/grid-data-source.service/grid-data-source.service';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping, RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\nimport { editingPropertiesForCreating } from '../config/form-properties';\r\nimport { editingPropertiesForUpdating } from '../config/form-properties';\r\nimport { TemplateStoreService } from 'src/app/shared/service/template-store.service';\r\nimport { NotificationTemplateStoreService } from 'src/app/shared/service/notification-template-store/notification-template-store.service';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TenantChooserService } from 'src/app/shared/modules/tenant-chooser/tenant-chooser.service';\r\nimport { AppRestService } from 'src/app/shared/service/rest.service';\r\n\r\n@Component({\r\n  selector: 'app-cron-expressions-job-list',\r\n  templateUrl: './cron-expressions-job-list.component.html',\r\n  styleUrls: ['./cron-expressions-job-list.component.scss']\r\n})\r\nexport class CronExpressionsJobListComponent {\r\n  /**\r\n   * 取得datagrid元件，將之存於變數grid。\r\n   */\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent;\r\n\r\n  /**\r\n   * devextreme data grid columns\r\n   * \r\n   * 用來設定grid具有那些欄位。\r\n   * \r\n   * DevExtreme官方文件: [Column]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Columns/Overview/}\r\n   */\r\n  columns: Column[] = columns;\r\n\r\n  /**\r\n   * devextreme grid datasource\r\n   * \r\n   * grid dataSource, 用來連接grid與後端data的新增、讀取、修改、刪除。\r\n   * \r\n   * 透過[getDataSource]{@link GridDataSourceService#getDataSource}使用[cRUDEndpoints]{@link CronExpressionsJobListComponent#cRUDEndpoints}與[relatedDataValueAndQueryStringKeyMapping]{@link CronExpressionsJobListComponent#relatedDataValueAndQueryStringKeyMapping}產生。\r\n   * \r\n   * DevExtreme官方文件: [DataSource]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/Data_Layer/DataSource/}\r\n   */\r\n  gridDataSource: DataSource;\r\n\r\n  /**\r\n   * 設定增、刪、查、改的路徑\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link CronExpressionsJobListComponent#gridDataSource}。\r\n   */\r\n  cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n\r\n  /**\r\n   * 選單與資料路徑對應設定檔案\r\n   * \r\n   * {@link GridFeatureDirective}接收後用來設定[DataGrid]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Getting_Started_with_DataGrid/}的新增、編輯表單裡的選單。\r\n   */\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n\r\n  /**\r\n   * 欄位、值、與回應資料結構的對應設定檔案\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link CronExpressionsJobListComponent#gridDataSource}。\r\n   */\r\n  relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping =\r\n    relatedDataValueAndQueryStringKeyMapping;\r\n\r\n  /**\r\n   * 新增的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n\r\n  /**\r\n   * 編輯的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n\r\n  /**\r\n   * cron 表示式\r\n   * \r\n   * 從URL中取得\r\n   */\r\n  cronExpression: string\r\n\r\n  /**\r\n   * Cron表達式，顯示在頁面中\r\n   */\r\n  titleCronExpression: string\r\n\r\n  /**\r\n   * 參考{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing|Editing}, [editCellTemplate]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxDataGrid/Configuration/columns/\\#editCellTemplate/}, [template]{@link js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxForm/Item_Types/SimpleItem/#template/}, [cronExpression]{@link CronExpressionsJobListComponent#cronExpression}, [route]{@link https://angular.dev/guide/routing/common-router-tasks}\r\n   * \r\n   * @param gridDataSourceService dxdatagrid所使用的產生datasource相關功能\r\n   * @param templateStore 共用的dx template儲存service，用於dx-data-grid、dx-form的custom template, 參考editCellTemplate, template\r\n   * @param notificationTemplateStore 共用的dx template儲存service，用於dx-data-grid、dx-form的custom template, 參考editCellTemplate, template,但只用於新增通知項目時使用\r\n   * @param route 取得該頁面的URL，用於取得參數\"cronExpression\"\r\n   * @param router 用於新增時，將頁面導向共用的新增頁面\r\n   */\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    protected router: Router,\r\n    private gridDataSourceService: GridDataSourceService,\r\n    protected templateStore: TemplateStoreService,\r\n    protected notificationTemplateStore: NotificationTemplateStoreService,\r\n    private tenantChooser: TenantChooserService,\r\n    private appRestService: AppRestService\r\n  ) {\r\n    this.tenantChooser.tenantId$.subscribe(tenandId => {\r\n      this.grid?.instance?.refresh()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 畫面啟動時，取得位於URL中的參數[cronExpression]{@link CronExpressionsJobListComponent#cronExpression}\r\n   * \r\n   * 透過[getDataSource]{@link GridDataSourceService#getDataSource}使用設定檔設定grid的dataSource - [gridDataSource]{@link CronExpressionsJobListComponent#gridDataSource}。\r\n   * \r\n   * 使用GET時，需帶入參數[cronExpression]{@link CronExpressionsJobListComponent#cronExpression}，\r\n   * 需使用[encodeURIComponent]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent}做轉換\r\n   */\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      console.log(params)\r\n\r\n      this.cronExpression = encodeURIComponent(params.get('cronExpression'))\r\n      const decodedCronExpression = decodeURIComponent(this.cronExpression)\r\n      console.log(this.cronExpression)\r\n      console.log(decodeURIComponent(this.cronExpression))\r\n\r\n      this.appRestService.request<void, { description: string }>({\r\n        method: 'GET',\r\n        url: `/api/app/jbnotifier-admin/cron-expressions/description/${this.cronExpression}`\r\n      }).subscribe((res) => {\r\n        this.titleCronExpression = `${res.description} | ${decodedCronExpression}`\r\n      })\r\n    });\r\n\r\n    this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n      {\r\n        index: `/api/app/jbnotifier-admin/cron-expressions/${this.cronExpression}/notifications`,\r\n        create: `/api/app/jbnotifier-admin/cron-expressions/notifications`,\r\n        delete: \"/api/app/jbnotifier-admin/cron-expressions/notifications\"\r\n      },\r\n      relatedDataValueAndQueryStringKeyMapping\r\n    );\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CronExpressionsJobListRoutingModule } from './cron-expressions-job-list-routing.module';\r\nimport { CronExpressionsJobListComponent } from './components/cron-expressions-job-list.component';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TenantChooserModule } from '../shared/modules/tenant-chooser/tenant-chooser.module';\r\nimport { JBHeaderFilterComponent } from \"../shared/components/jb-header-filter/jb-header-filter.component\";\r\nimport { GridFilterItemsComponent } from \"../shared/components/grid/grid-filter-items/grid-filter-items.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CronExpressionsJobListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DXComponentsModule,\r\n    CronExpressionsJobListRoutingModule,\r\n    SharedModule,\r\n    TenantChooserModule,\r\n    JBHeaderFilterComponent,\r\n    GridFilterItemsComponent\r\n  ]\r\n})\r\nexport class CronExpressionsJobListModule { }"],"x_google_ignoreList":[]}