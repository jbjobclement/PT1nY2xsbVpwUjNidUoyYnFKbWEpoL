{"version":3,"file":"20654.6bd128866019a042.js","mappings":"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","names":["cRUDEndpoints","index","dataFieldLookupSourceMapping","dataField","path","pathForSelectedDisplay","dataFieldTranslationKeysMapping","relatedDataValueAndQueryStringKeyMapping","name","mapping","queryStringKey","htmlProperties","imageUpload","fileUploadMode","tabs","toolbar","items","acceptedValues","formItems","itemType","caption","colCount","editorType","label","visible","editorOptions","height","colSpan","viewFormItems","disabled","editingPropertiesForCreating","form","editingPropertiesForUpdating","popup","wrapperAttr","class","toolbarItems","type","id","columns","fixed","buttons","template","options","row","data","isRepushable","dataType","filterOperations","filterOperationTypes","text","lookup","valueExpr","displayExpr","allowClearing","dataSource","store","CustomStore","key","load","loadOptions","searchValue","filter","s","includes","byKey","extraOptions","find","Promise","res","calculateDisplayValue","rowData","notificationInfoTypeShow","notificationProviders","map","provider","displayName","join","allowFiltering","allowSorting","notificationInfoType","notificationSchedulePlan","formatTime","pushTime","cronDescription","format","datetime","cellTemplate","calculateCellValue","notificationIsRead","fixedPosition","i0","cellInfo_r3","_r5","$implicit","ctx_r4","showLogContent","value","_r10","cellInfo_r6","ctx_r8","singleRepush","notificationRecordDetail","NotificationsRecordsMasterDetailComponent_ng_container_8_app_repush_button_1_Template","NotificationsRecordsMasterDetailComponent","constructor","appRestService","configStateService","toastService","this","isTextContentVisible","textContent","repush","notificationRecordsIds","getOne$","pipe","switchMap","request","method","url","body","SpecifiedTenantId","subscribe","success","ngOnChanges","getData","trackBy","notificationRecordId","gridDataSource","pushable","notificationRecordsId","static","t","i1","i2","i3","core","Xpm","selectors","viewQuery","rf","ctx","NotificationsRecordsMasterDetailComponent_a_7_Template","NotificationsRecordsMasterDetailComponent_ng_container_8_Template","$event","_c1","NotificationRecordsComponent_ng_container_11_ng_container_1_ng_container_1_Template","ctx_r7","templateStore","getGridTemplates","template_r6","cellInfo_r8","NotificationRecordsComponent_ng_container_11_ng_container_1_Template","ctx_r2","masterDetailRowCollapseKey","cellInfo_r12","_r14","ctx_r13","showTextContent","cellInfo_r15","_r17","ctx_r16","showHtmlContent","_r22","cellInfo_r18","ctx_r20","NotificationRecordsComponent_ng_container_16_app_repush_button_1_Template","routes","component","NotificationRecordsComponent","gridDataSourceService","tenantChooser","selectedNotificationRecords","selectedIdsNoIsrepushableFalse","isHTMLContentVisible","htmlContent","checkBoxUpdating","gridProperties","editing","allowAdding","selection","mode","allowSelectAll","selectAllMode","masterDetail","enabled","repushButtonProperties","stylingMode","onClick","rowExpanded","e","applyyNotificationMasterDetailRowCollapse","notificationRecordIds","column","shortResultMessages","tenantId$","tenandId","grid","instance","refresh","ngOnInit","getDataSource","ngAfterViewInit","on","setTimeout","trElementRowIndex","element","querySelector","parentElement","ariaRowIndex","classList","add","collapseRow","item","onCellPrepared","rowType","columnIndex","cellElement","style","visibility","onSelectionChanged","selectedRowsData","forEach","push","i4","i5","i6","NotificationRecordsComponent_ng_container_11_Template","NotificationRecordsComponent_app_notifications_records_master_detail_13_Template","NotificationRecordsComponent_a_14_Template","NotificationRecordsComponent_a_15_Template","NotificationRecordsComponent_ng_container_16_Template","_r0","gridTemplates","NotificationRecordsRoutingModule","oAB","cJS","RouterModule","forChild","NotificationRecordsModule","CommonModule","SharedModule","DXComponentsModule","TextContentViewerComponent","HtmlContentViewerComponent","NotificationPagerComponent","RepushButtonComponent","GridFilterItemsComponent","TenantChooserModule"],"sourceRoot":"webpack:///","sources":["./src/app/notification-records/config/notification-records/crud-endpoints.ts","./src/app/notification-records/config/notification-records/datafield-lookup-source-mapping.ts","./src/app/notification-records/config/notification-records/datafield-translation-mapping.ts","./src/app/notification-records/config/notification-records/datafield-value-query-string-key-mapping.ts","./src/app/notification-records/config/notification-records/form-properties.ts","./src/app/notification-records/config/notification-records/columns.ts","./src/app/notification-records/config/notification-records-details/columns.ts","./src/app/notification-records/components/notifications-records-master-detail/notifications-records-master-detail.component.html","./src/app/notification-records/components/notifications-records-master-detail/notifications-records-master-detail.component.ts","./src/app/notification-records/components/notification-records.component.html","./src/app/notification-records/notification-records-routing.module.ts","./src/app/notification-records/components/notification-records.component.ts","./src/app/notification-records/notification-records.module.ts"],"sourcesContent":["import { CRUDEndpoints } from \"src/app/shared/typing\";\r\n\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n  index: '/api/app/jbnotifier-admin/notification-records',\r\n  // get: '/api/app/grouping-notification-push-logs',\r\n  // create: '/api/app/grouping-notification-push-logs',\r\n  // update: '/api/app/grouping-notification-push-logs',\r\n  // delete: '/api/app/grouping-notification-push-logs',\r\n};\r\n","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n  {\r\n    dataField: 'notificationCategoryId',\r\n    path: '/api/app/notification-infos/assignable-notification-categories',\r\n    pathForSelectedDisplay: '/api/app/notification-categories'\r\n  }\r\n];\r\n","import { DataFieldTranslationKeysMapping } from \"src/app/shared/typing\";\r\n\r\n\r\nexport const dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = [\r\n  // {\r\n  //     dataField: \"tenantId\",\r\n  //     translateAliasKeys: [\"TenantId\"],\r\n  // },\r\n  // {\r\n  //     name: \"tenantCode\",\r\n  //     translateAliasKeys: [\"TenantId\"],\r\n  // },\r\n  // {\r\n  //     name: \"tenantName\",\r\n  //     translateAliasKeys: [\"TenantId\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"notificationDataFetchEndpoint\",\r\n  //     translateAliasKeys: [\"NotificationDataFetchEndpoint\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"isFetchNotificationDataByEachReceiver\",\r\n  //     translateAliasKeys: [\"IsFetchNotificationDataByEachReceiver\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"title\",\r\n  //     translateAliasKeys: [\"Title\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"subtitle\",\r\n  //     translateAliasKeys: [\"Subtitle\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"textContent\",\r\n  //     translateAliasKeys: [\"TextContent\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"htmlContent\",\r\n  //     translateAliasKeys: [\"HtmlContent\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"hookEndpoint\",\r\n  //     translateAliasKeys: [\"HookEndpoint\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"notificationCategoryId\",\r\n  //     translateAliasKeys: [\"NotificationCategoryId\"],\r\n  // },\r\n  // {\r\n  //     name: \"notificationCategoryCode\",\r\n  //     translateAliasKeys: [\"NotificationCategoryId\"],\r\n  // },\r\n  // {\r\n  //     name: \"notificationCategoryName\",\r\n  //     translateAliasKeys: [\"NotificationCategoryId\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"notificationProviderDefinitionIds\",\r\n  //     translateAliasKeys: [\"NotificationProviderDefinitionIds\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"notificationSettingItems\",\r\n  //     translateAliasKeys: [\"NotificationSettingItems\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"notificationSettingDefinitionId\",\r\n  //     translateAliasKeys: [\"NotificationSettingDefinitionId\"],\r\n  // },\r\n  // {\r\n  //     name: \"notificationSettingDefinitionCode\",\r\n  //     translateAliasKeys: [\"NotificationSettingDefinitionId\"],\r\n  // },\r\n  // {\r\n  //     name: \"notificationSettingDefinitionName\",\r\n  //     translateAliasKeys: [\"NotificationSettingDefinitionId\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"value\",\r\n  //     translateAliasKeys: [\"Value\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"isInherited\",\r\n  //     translateAliasKeys: [\"IsInherited\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"isForAllReceivers\",\r\n  //     translateAliasKeys: [\"IsForAllReceivers\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"receiverIds\",\r\n  //     translateAliasKeys: [\"ReceiverIds\"],\r\n  // },\r\n  // {\r\n  //     dataField: \"receiverGroupIds\",\r\n  //     translateAliasKeys: [\"ReceiverGroupIds\"],\r\n  // },\r\n];\r\n","import { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\n\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n  {\r\n    name: 'id',\r\n    mapping: ['notification', 'id'],\r\n  },\r\n  {\r\n    name: 'isRepushable',\r\n    mapping: ['isRepushable']\r\n  },\r\n  {\r\n    name: 'concurrencyStamp',\r\n    mapping: ['notificationInfo', 'concurrencyStamp'],\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    queryStringKey: 'TenantName',\r\n    mapping: ['tenant', 'name'],\r\n  },\r\n  {\r\n    name: 'notificationInfoTypeShow',\r\n    mapping: ['notificationInfo', 'typeShow'],\r\n  },\r\n  {\r\n    name: 'notificationInfoType',\r\n    queryStringKey: 'Type',\r\n    mapping: ['notificationInfo', 'type'],\r\n  },\r\n  {\r\n    dataField: 'notificationInfoName',\r\n    mapping: ['notificationInfo', 'name'],\r\n  },\r\n  {\r\n    name: 'notificationProvidersDisplayName',\r\n    mapping: ['notificationProviders', 'displayName'],\r\n  },\r\n  {\r\n    dataField: 'notificationProviders',\r\n    mapping: ['notificationProviders'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordId',\r\n    mapping: ['notificationRecord', 'id']\r\n  },\r\n  {\r\n    name: 'notificationSchedulePlan',\r\n    mapping: ['notificationSchedulePlan'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordPushTime',\r\n    queryStringKey: 'PushTime',\r\n    mapping: ['notificationRecord', 'pushTime'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsManual',\r\n    queryStringKey: 'IsManual',\r\n    mapping: ['notificationRecord', 'isManual'],\r\n  },\r\n  {\r\n    dataField: 'receiverName',\r\n    queryStringKey: 'ReceiverName',\r\n    mapping: ['receiver', 'name'],\r\n  },\r\n  {\r\n    dataField: 'notificationCategoryName',\r\n    queryStringKey: 'NotificationCategoryName',\r\n    mapping: ['notificationCategory', 'name'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordTitle',\r\n    queryStringKey: 'Title',\r\n    mapping: ['notificationRecord', 'title'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordSubtitle',\r\n    queryStringKey: 'SubTitle',\r\n    mapping: ['notificationRecord', 'subtitle'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordTextContent',\r\n    queryStringKey: 'TextContent',\r\n    mapping: ['notificationRecord', 'textContent'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordHtmlContent',\r\n    queryStringKey: 'HtmlContent',\r\n    mapping: ['notificationRecord', 'htmlContent'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsModifiedWhenPending',\r\n    queryStringKey: 'IsModifiedWhenPending',\r\n    mapping: ['notificationRecord', 'isModifiedWhenPending'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsFullyFinished',\r\n    queryStringKey: 'IsFullyFinished',\r\n    mapping: ['notificationRecord', 'isFullyFinished'],\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsCompeletySuccessful',\r\n    queryStringKey: 'IsCompletelySuccessful',\r\n    mapping: ['notificationRecord', 'isCompletelySuccessful'],\r\n  },\r\n  {\r\n    dataField: 'notificationIsRead',\r\n    queryStringKey: 'NotificationIsRead',\r\n    mapping: ['notification', 'isRead'],\r\n  }\r\n];","import { Editing } from 'devextreme/ui/data_grid';\r\nimport type { Properties } from 'devextreme/ui/form';\r\nimport type { Properties as HtmlEditorProperties } from 'devextreme/ui/html_editor';\r\n\r\nconst htmlProperties: HtmlEditorProperties = {\r\n    imageUpload: {\r\n        fileUploadMode: 'both',\r\n        tabs: ['url', 'file']\r\n    },\r\n    toolbar: {\r\n        'items': [\r\n            {\r\n                name: 'undo'\r\n            },\r\n            {\r\n                name: 'redo'\r\n            },\r\n            {\r\n                name: 'separator'\r\n            },\r\n            {\r\n                name: 'size',\r\n                acceptedValues: ['8pt', '10pt', '12pt', '14pt', '18pt', '24pt', '36pt']\r\n            },\r\n            {\r\n                name: 'font',\r\n                acceptedValues: ['Arial', 'Georgia', 'Tahoma', 'Times New Roman', 'Verdana']\r\n            },\r\n            { name: \"separator\" },\r\n            { name: \"bold\" },\r\n            { name: \"italic\" },\r\n            { name: \"strike\" },\r\n            { name: \"underline\" },\r\n            { name: \"separator\" },\r\n            { name: \"alignLeft\" },\r\n            { name: \"alignCenter\" },\r\n            { name: \"alignRight\" },\r\n            { name: \"alignJustify\" },\r\n            { name: \"separator\" },\r\n            { name: \"orderedList\" },\r\n            { name: \"bulletList\" },\r\n            { name: \"separator\" },\r\n            { name: \"header\", acceptedValues: [false, 1, 2, 3, 4, 5] },\r\n            { name: \"separator\" },\r\n            { name: \"color\" },\r\n            { name: \"background\" },\r\n            { name: \"separator\" },\r\n            { name: \"link\" },\r\n            { name: \"image\" },\r\n            { name: \"separator\" },\r\n            { name: \"clear\" },\r\n            { name: \"codeBlock\" },\r\n            { name: \"blockquote\" },\r\n            { name: \"separator\" },\r\n            { name: \"insertTable\" },\r\n            { name: \"deleteTable\" },\r\n            { name: \"insertRowAbove\" },\r\n            { name: \"insertRowBelow\" },\r\n            { name: \"deleteRow\" },\r\n            { name: \"insertColumnLeft\" },\r\n            { name: \"insertColumnRight\" },\r\n            { name: \"deleteColumn\" },\r\n            { name: \"cellProperties\" },\r\n            { name: \"tableProperties\" },\r\n        ]\r\n    }\r\n}\r\n\r\nconst formItems: Properties['items'] = [\r\n    {\r\n        itemType: 'group',\r\n        name: 'basicGroup',\r\n        caption: '基本',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'notificationProviderDefinitionIds',\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'receiverGroup',\r\n                colCount: 2,\r\n                items: [\r\n                    {\r\n                        dataField: 'isForAllReceivers',\r\n                        editorType: 'dxCheckBox',\r\n                    },\r\n                    {\r\n                        itemType: \"empty\"\r\n                    },\r\n                    {\r\n                        dataField: 'receiverIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'receiverGroupIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'notificationSettingGroup',\r\n        caption: '設定',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'notificationSettingRadioGroup',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            },\r\n            {\r\n                dataField: 'notificationSettingItems',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'notificationContentGroup',\r\n        caption: '通知內容',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'notificationCategoryId',\r\n                editorType: 'dxSelectBox'\r\n            },\r\n            {\r\n                dataField: 'title',\r\n                editorType: 'dxTextBox'\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'textboxGroup',\r\n                items: [\r\n                    {\r\n                        dataField: 'subtitle',\r\n                        editorType: 'dxTextBox'\r\n                    },\r\n                    {\r\n                        dataField: 'notificationDataFetchEndpoint',\r\n                        editorType: 'dxTextBox'\r\n                    },\r\n                    {\r\n                        dataField: 'hookEndpoint',\r\n                        editorType: 'dxTextBox'\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'textareaGroup',\r\n                items: [\r\n                    {\r\n                        dataField: 'textContent',\r\n                        editorType: 'dxTextArea',\r\n                        editorOptions: {\r\n                            height: '100px'\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'isFetchNotificationDataByEachReceiver',\r\n                        editorType: 'dxCheckBox',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                dataField: 'htmlContent',\r\n                colSpan: 2,\r\n                editorType: 'dxHtmlEditor',\r\n                editorOptions: {\r\n                    ...htmlProperties,\r\n                    height: '250px'\r\n                },\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nconst viewFormItems: Properties['items'] = [\r\n    {\r\n        itemType: 'group',\r\n        name: 'basicGroup',\r\n        caption: '基本',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'notificationProviderDefinitionIds',\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'receiverGroup',\r\n                colCount: 2,\r\n                items: [\r\n                    {\r\n                        dataField: 'isForAllReceivers',\r\n                        editorType: 'dxCheckBox',\r\n                        editorOptions: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    {\r\n                        itemType: \"empty\"\r\n                    },\r\n                    {\r\n                        dataField: 'receiverIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'receiverGroupIds',\r\n                        label: {\r\n                            visible: false\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'notificationSettingGroup',\r\n        caption: '設定',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'notificationSettingRadioGroup',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            },\r\n            {\r\n                dataField: 'notificationSettingItems',\r\n                label: {\r\n                    visible: false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        itemType: 'group',\r\n        name: 'notificationContentGroup',\r\n        caption: '通知內容',\r\n        colCount: 2,\r\n        items: [\r\n            {\r\n                dataField: 'notificationCategoryId',\r\n                editorType: 'dxSelectBox',\r\n                editorOptions: {\r\n                    disabled: true\r\n                }\r\n            },\r\n            {\r\n                dataField: 'title',\r\n                editorType: 'dxTextBox',\r\n                editorOptions: {\r\n                    disabled: true\r\n                }\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'textboxGroup',\r\n                items: [\r\n                    {\r\n                        dataField: 'subtitle',\r\n                        editorType: 'dxTextBox',\r\n                        editorOptions: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'notificationDataFetchEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        editorOptions: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    {\r\n                        dataField: 'hookEndpoint',\r\n                        editorType: 'dxTextBox',\r\n                        editorOptions: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                itemType: 'group',\r\n                name: 'textareaGroup',\r\n                items: [\r\n                    {\r\n                        dataField: 'textContent',\r\n                        editorType: 'dxTextArea',\r\n                        editorOptions: {\r\n                            height: '100px',\r\n                            disabled: true\r\n                        },\r\n                    },\r\n                    {\r\n                        dataField: 'isFetchNotificationDataByEachReceiver',\r\n                        editorType: 'dxCheckBox',\r\n                        editorOptions: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                dataField: 'htmlContent',\r\n                colSpan: 2,\r\n                editorType: 'dxHtmlEditor',\r\n                editorOptions: {\r\n                    ...htmlProperties,\r\n                    height: '250px',\r\n                    disabled: true\r\n                },\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const formProperties: Properties = {\r\n    colCount: 1,\r\n    items: formItems,\r\n};\r\n\r\n\r\nexport const editingPropertiesForCreating: Editing = {\r\n    form: {\r\n        colCount: 1,\r\n        items: formItems\r\n    }\r\n}\r\n\r\nexport const editingPropertiesForUpdating: Editing = {\r\n    form: {\r\n        colCount: 1,\r\n        items: viewFormItems\r\n    },\r\n    popup: {\r\n        wrapperAttr: { class: 'instant-notification-infos-view' },\r\n        toolbarItems: []\r\n    }\r\n}","import CustomStore from 'devextreme/data/custom_store';\r\nimport { Column } from 'devextreme/ui/data_grid';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\nimport { formatTime } from 'src/app/shared/utils/time-format/utils';\r\nconst type = [\r\n  { id: 0, name: '即時' },\r\n  { id: 1, name: '預約' },\r\n  { id: 2, name: '重複' }\r\n]\r\n\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    type: 'buttons',\r\n    fixed: true,\r\n    buttons: [\r\n      {\r\n        name: 'repush',\r\n        template: 'repush',\r\n        visible(options) {\r\n          const isRepushable = options.row.data.isRepushable\r\n          return isRepushable;\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    dataField: 'id',\r\n    visible: false,\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    visible: false,\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    caption: '租戶名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    name: 'notificationInfoTypeShow',\r\n    caption: '型態',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    visible: false\r\n  },\r\n  {\r\n    name: 'notificationInfoType',\r\n    caption: '型態',\r\n    dataType: 'string',\r\n    lookup: {\r\n      valueExpr: 'id',\r\n      displayExpr: 'name',\r\n      allowClearing: true,\r\n      dataSource: {\r\n        store: new CustomStore({\r\n          key: 'id',\r\n          load: (loadOptions) => {\r\n            if (loadOptions.searchValue) {\r\n              const data = type.filter(s => s.name.includes(loadOptions.searchValue))\r\n              return data;\r\n            }\r\n            return type;\r\n          },\r\n          byKey(key, extraOptions) {\r\n            const data = type.find(s => s.id === key)\r\n            return new Promise(res => { res(data) })\r\n          },\r\n        })\r\n      }\r\n    },\r\n    calculateDisplayValue(rowData) {\r\n      return rowData.notificationInfoTypeShow\r\n    },\r\n  },\r\n  {\r\n    dataField: 'notificationInfoName',\r\n    caption: '名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    name: 'notificationProvidersDisplayName',\r\n    caption: '提供者',\r\n    dataType: 'object',\r\n    calculateDisplayValue(rowData) {\r\n      return rowData.notificationProviders.map(provider => provider.displayName).join('、')\r\n    },\r\n    allowFiltering: false,\r\n    allowSorting: false\r\n  },\r\n  {\r\n    name: 'notificationSchedulePlan',\r\n    caption: '時間計畫',\r\n    dataType: 'object',\r\n    // 可能notificationSchedulePlan為null\r\n    calculateDisplayValue(rowData) {\r\n      if (rowData.notificationInfoType === 0 && rowData.notificationSchedulePlan) {\r\n        return formatTime(rowData.notificationSchedulePlan.pushTime)\r\n      }\r\n\r\n      if (rowData.notificationInfoType === 1 && rowData.notificationSchedulePlan) {\r\n        return formatTime(rowData.notificationSchedulePlan.pushTime) + `(${rowData.notificationSchedulePlan.name})`\r\n      }\r\n\r\n      if (rowData.notificationInfoType === 2 && rowData.notificationSchedulePlan) {\r\n        return rowData.notificationSchedulePlan.cronDescription + `(${rowData.notificationSchedulePlan.name})`\r\n      }\r\n    },\r\n    allowFiltering: false,\r\n    allowSorting: false\r\n  },\r\n  {\r\n    dataField: 'notificationRecordPushTime',\r\n    caption: '推送時間',\r\n    dataType: 'datetime',\r\n    // dataType: 'date',\r\n    // filterOperations: filterOperationTypes.date,\r\n    format: 'yyyy/MM/dd HH:mm:ss',\r\n    filterOperations: filterOperationTypes.datetime\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsManual',\r\n    caption: '手動',\r\n    dataType: 'boolean',\r\n    // calculateDisplayValue(rowData) {\r\n    //   return rowData.notificationRecordIsManual ? '是' : '否'\r\n    // }\r\n  },\r\n  {\r\n    dataField: 'receiverName',\r\n    caption: '接收者',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationCategoryName',\r\n    caption: '分類',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationRecordTitle',\r\n    caption: '標題',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationRecordSubtitle',\r\n    caption: '副標題',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationRecordId',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'notificationRecordTextContent',\r\n    caption: '文字內容',\r\n    cellTemplate: 'shortTextContent',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationRecordHtmlContent',\r\n    caption: 'HTML內容',\r\n    cellTemplate: 'shortHtmlContent',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsModifiedWhenPending',\r\n    caption: '等候區異動',\r\n    dataType: 'boolean',\r\n    // calculateDisplayValue(rowData) {\r\n    //   return rowData.notificationRecordIsModifiedWhenPending ? '是' : '否'\r\n    // }\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsFullyFinished',\r\n    caption: '全部結束',\r\n    dataType: 'boolean',\r\n    // calculateDisplayValue(rowData) {\r\n    //   return rowData.notificationRecordIsFullyFinished ? '是' : '否'\r\n    // }\r\n  },\r\n  {\r\n    dataField: 'notificationRecordIsCompeletySuccessful',\r\n    caption: '完全成功',\r\n    dataType: 'boolean',\r\n    // calculateDisplayValue(rowData) {\r\n    //   if (rowData.notificationRecordIsCompeletySuccessful == null) {\r\n    //     return ''\r\n    //   } else {\r\n    //     if (rowData.notificationRecordIsCompeletySuccessful) {\r\n    //       return '是'\r\n    //     } else {\r\n    //       return '否'\r\n    //     }\r\n    //   }\r\n    // }\r\n  },\r\n  {\r\n    dataField: 'notificationIsRead',\r\n    caption: '接收者已讀',\r\n    dataType: 'boolean',\r\n    calculateCellValue(rowData) {\r\n      return rowData.notificationIsRead ? true : false\r\n    },\r\n    // calculateDisplayValue(rowData) {\r\n    //   return rowData.notificationIsRead ? '是' : '否'\r\n    // }\r\n  },\r\n  {\r\n    dataField: 'shortResultMessages', //?\r\n    caption: '詳細訊息',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'isRepushable',\r\n    dataType: 'boolean',\r\n    visible: false\r\n  },\r\n  // master detail\r\n  {\r\n    type: 'detailExpand',\r\n    fixed: true,\r\n    fixedPosition: 'right'\r\n  }\r\n\r\n];","import { Column } from 'devextreme/ui/data_grid';\r\nimport { dataFieldColumnWidth } from 'src/app/shared/directive/grid-feature/const';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\nimport { formatTime } from 'src/app/shared/utils/time-format/utils';\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    dataField: 'notificationProvider.concurrencyStamp',\r\n    visible: false,\r\n  },\r\n  {\r\n    dataField: 'notificationProvider.displayName',\r\n    caption: '提供者',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'notificationRecordDetail.pushTime',\r\n    caption: '推送時間',\r\n    dataType: 'datetime',\r\n    format: 'yyyy/MM/dd HH:mm:ss',\r\n    filterOperations: filterOperationTypes.datetime\r\n  },\r\n  {\r\n    dataField: 'notificationRecordDetail.isSuccessful',\r\n    caption: '成功',\r\n    dataType: 'boolean',\r\n  },\r\n  {\r\n    dataField: 'notificationRecordDetail.logMessages',\r\n    caption: 'Log 訊息',\r\n    cellTemplate: 'logContent'\r\n  },\r\n  {\r\n    type: 'buttons',\r\n    caption: '重新推送',\r\n    fixed: true,\r\n    buttons: [\r\n      {\r\n        name: 'repush',\r\n        template: 'repush',\r\n        visible(options) {\r\n            const isRepushable = options.row.data.isRepushable\r\n            return isRepushable;\r\n        },\r\n      },\r\n    ],\r\n  },\r\n\r\n];","<div class=\"master-detail\">\r\n    <div class=\"master-detail-container\">\r\n        <div class=\"master-detail-title\">\r\n            <h3>推送記錄</h3>\r\n        </div>\r\n        <dx-data-grid\r\n            #grid\r\n            [dataSource]=\"gridDataSource\"\r\n            [columns]=\"columns\"\r\n            [elementAttr]=\"{class: 'notification-records-master-detail-data-grid'}\"\r\n            >\r\n            <a *dxTemplate=\"let cellInfo of 'logContent'\" (click)=\"showLogContent(cellInfo.value)\">點擊查看</a>\r\n            <ng-container *dxTemplate=\"let cellInfo of 'repush'\">\r\n                <app-repush-button\r\n                  *ngIf=\"cellInfo.data.isRepushable\"\r\n                  (buttonClick)=\"singleRepush(cellInfo.data.isRepushable,cellInfo.data.notificationRecordDetail.id)\"  \r\n                >\r\n                </app-repush-button>\r\n            </ng-container>\r\n        </dx-data-grid>\r\n        <app-text-content-viewer\r\n            [(isTextContentVisible)]=\"isTextContentVisible\"\r\n            [textContent]=\"textContent\"\r\n            textTitle=\"Log 訊息\"\r\n        ></app-text-content-viewer>\r\n    </div>\r\n</div>\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport { Column } from 'devextreme/ui/data_grid';\r\nimport { AppRestService } from 'src/app/shared/service/rest.service';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { columns } from '../../config/notification-records-details/columns';\r\nimport { DxToastService } from '../../../shared/service/toast.service';\r\nimport { switchMap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-notifications-records-master-detail',\r\n  templateUrl: './notifications-records-master-detail.component.html',\r\n  styleUrls: ['./notifications-records-master-detail.component.scss']\r\n})\r\n\r\nexport class NotificationsRecordsMasterDetailComponent {\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent\r\n  @Input() notificationRecordId: string\r\n\r\n  columns: Column[] = columns;\r\n  gridDataSource: DataSource;\r\n  isTextContentVisible: boolean = false\r\n  textContent: string = ''\r\n  \r\n  constructor(private appRestService: AppRestService,\r\n    private configStateService: ConfigStateService,\r\n    private toastService: DxToastService\r\n  ) { }\r\n\r\n  ngOnChanges() {\r\n    this.getData()\r\n  }\r\n\r\n  trackBy(index) { return index; }\r\n\r\n  getData() {\r\n    if (!this.notificationRecordId) {\r\n      return\r\n    }\r\n\r\n    this.appRestService.request<void, any>({\r\n      method: 'GET',\r\n      url: `/api/app/jbnotifier-admin/notification-records/details?NotificationRecordId=${this.notificationRecordId}`\r\n    }).subscribe(res => {\r\n        this.gridDataSource = res.items\r\n    })\r\n  }\r\n\r\n  singleRepush(pushable: boolean = false,notificationRecordsId: string) {\r\n    if(pushable){\r\n      this.repush([notificationRecordsId]);\r\n    }\r\n  }\r\n\r\n  repush = (notificationRecordsIds: string[]) => {\r\n    this.configStateService.getOne$('currentTenant')\r\n    .pipe(switchMap(res=>{\r\n      return this.appRestService.request({\r\n        method: 'POST',\r\n        url: `/api/app/jbnotifier-admin/notification-records/details/${notificationRecordsIds}/repush`,\r\n        body: {\r\n          \"SpecifiedTenantId\": res.id,\r\n        }\r\n      })\r\n    })).subscribe(() => {\r\n      this.toastService.success('操作成功!，因發送需要時間，成功次數不會馬上發生變化。');\r\n    })\r\n  }\r\n\r\n  showLogContent(textContent: string) {\r\n    this.isTextContentVisible = true\r\n    this.textContent = textContent\r\n  }\r\n}\r\n","<div class=\"custom-grid-container\">\r\n  <app-tenant-chooser></app-tenant-chooser>\r\n\r\n  <div>\r\n      <div>\r\n        <app-grid-filter-items\r\n          [grid]=\"grid\"\r\n        ></app-grid-filter-items>\r\n      </div>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div>\r\n          <dx-button\r\n            type=\"default\"\r\n            stylingMode=\"contained\"\r\n            text=\"再次發送(多筆)\"\r\n            (onClick)=\"repush(selectedIdsNoIsrepushableFalse)\"\r\n          >\r\n          </dx-button>\r\n        </div>\r\n        <app-grid-after-tool-bar\r\n          [grid]=\"grid\"\r\n        >\r\n        </app-grid-after-tool-bar>\r\n      </div>\r\n  </div>\r\n\r\n  <dx-data-grid\r\n    #grid\r\n    appGridFeature\r\n    appGridFeatureNotification\r\n    [dataFieldTranslationKeysMapping]=\"dataFieldTranslationKeysMapping\"\r\n    [datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n    [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n    [editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n    [editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n    [columns]=\"columns\"\r\n    [dataSource]=\"gridDataSource\"\r\n    [gridProperties]=\"gridProperties\"\r\n    [(selectedRowKeys)]=\"selectedNotificationRecords\"\r\n    (onCellPrepared)=\"onCellPrepared($event)\"\r\n    (onSelectionChanged)=\"onSelectionChanged($event)\"\r\n  >\r\n    <!-- <dxo-toolbar>\r\n      <dxi-item\r\n        location=\"before\"\r\n        widget=\"dxButton\"\r\n        [options]=\"repushButtonProperties\"\r\n        cssClass=\"mb-1\"\r\n      >\r\n      </dxi-item>\r\n      <dxi-item location=\"after\">\r\n        <app-grid-after-tool-bar\r\n          *dxTemplate\r\n          [grid]=\"grid\"\r\n        >\r\n        </app-grid-after-tool-bar>\r\n      </dxi-item>\r\n      <dxi-item name=\"applyFilterButton\" cssClass=\"d-none\"></dxi-item>\r\n    </dxo-toolbar> -->\r\n\r\n    <ng-container *ngFor=\"let template of templateStore.gridTemplates | keyvalue\">\r\n      <ng-container *dxTemplate=\"let cellInfo of template.key\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            templateStore.getGridTemplates(template.key);\r\n            context: { $implicit: cellInfo }\r\n          \"\r\n        >\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <app-notifications-records-master-detail\r\n      *dxTemplate=\"let cellInfo of 'notifications-records-master-detail'\"\r\n      [notificationRecordId]=\"masterDetailRowCollapseKey?.notificationRecordId\"\r\n    >\r\n    </app-notifications-records-master-detail>\r\n\r\n    <a *dxTemplate=\"let cellInfo of 'shortTextContent'\" (click)=\"showTextContent(cellInfo.value)\">點擊查看</a>\r\n    <a *dxTemplate=\"let cellInfo of 'shortHtmlContent'\" (click)=\"showHtmlContent(cellInfo.value)\">點擊查看</a>\r\n\r\n    <ng-container *dxTemplate=\"let cellInfo of 'repush'\">\r\n      <app-repush-button\r\n        *ngIf=\"cellInfo.data.isRepushable\"\r\n        (buttonClick)=\"repush([cellInfo.data.notificationRecordId])\"\r\n      >\r\n      </app-repush-button>\r\n    </ng-container>\r\n  </dx-data-grid>\r\n  \r\n  <app-notification-pager [grid]=\"grid\"></app-notification-pager>\r\n</div>\r\n\r\n<app-text-content-viewer\r\n    [(isTextContentVisible)]=\"isTextContentVisible\"\r\n    [textContent]=\"textContent\"\r\n></app-text-content-viewer>\r\n\r\n<app-html-content-viewer\r\n    [(isHTMLContentVisible)]=\"isHTMLContentVisible\"\r\n    [htmlContent]=\"htmlContent\"\r\n></app-html-content-viewer>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotificationRecordsComponent } from './components/notification-records.component';\r\n\r\nconst routes: Routes = [{ path: '', component: NotificationRecordsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NotificationRecordsRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport dxDataGrid, { Column, ColumnCellTemplateData, Editing, Properties, RowPreparedEvent } from 'devextreme/ui/data_grid';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping, DataFieldTranslationKeysMapping, RelatedDataValueAndQueryStringKeyMapping } from '../../shared/typing';\r\nimport { cRUDEndpoints } from '../config/notification-records/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from '../config/notification-records/datafield-lookup-source-mapping';\r\nimport { dataFieldTranslationKeysMapping } from '../config/notification-records/datafield-translation-mapping';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from '../config/notification-records/datafield-value-query-string-key-mapping';\r\nimport { editingPropertiesForCreating, editingPropertiesForUpdating } from '../config/notification-records/form-properties';\r\nimport { columns } from '../config/notification-records/columns';\r\nimport { GridDataSourceService } from '../../shared/service/grid-data-source.service/grid-data-source.service';\r\nimport { TemplateStoreService } from '../../shared/service/template-store.service';\r\nimport { AppRestService } from '../../shared/service/rest.service';\r\nimport { ConfigStateService } from '@abp/ng.core';\r\nimport { DxToastService } from '../../shared/service/toast.service';\r\nimport dxCheckBox, {\r\n  InitializedEvent,\r\n  ValueChangedEvent,\r\n} from 'devextreme/ui/check_box';\r\nimport { switchMap } from 'rxjs';\r\nimport { TenantChooserService } from 'src/app/shared/modules/tenant-chooser/tenant-chooser.service';\r\n@Component({\r\n  selector: 'app-notification-records',\r\n  templateUrl: './notification-records.component.html',\r\n  styleUrls: ['./notification-records.component.scss']\r\n})\r\n\r\nexport class NotificationRecordsComponent implements OnInit {\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent\r\n\r\n  columns: Column[] = columns;\r\n  gridDataSource: DataSource;\r\n  cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n  // formItemTranslationMapping: any[] = formItemTranslationMapping;\r\n  dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = dataFieldTranslationKeysMapping;\r\n  relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = relatedDataValueAndQueryStringKeyMapping;\r\n  editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n  editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n\r\n\r\n  selectedNotificationRecords = []\r\n  selectedIdsNoIsrepushableFalse = []\r\n  isTextContentVisible: boolean = false\r\n  isHTMLContentVisible: boolean = false\r\n  textContent: string = ''\r\n  htmlContent: string = ''\r\n  selectAllCheckBox!: dxCheckBox;\r\n  checkBoxUpdating = false;\r\n\r\n  gridProperties: Properties = {\r\n    editing: { allowAdding: false },\r\n    selection: {\r\n      mode: 'multiple',\r\n      allowSelectAll: true,\r\n      selectAllMode: 'page'\r\n    },\r\n    masterDetail: {\r\n      enabled: true,\r\n      template: 'notifications-records-master-detail'\r\n    }\r\n  }\r\n\r\n  masterDetailRowCollapseKey: string\r\n\r\n  repushButtonProperties = {\r\n    type: 'default',\r\n    stylingMode: 'contained',\r\n    text: '再次發送(多筆)',\r\n    onClick: () => {\r\n      this.repush(this.selectedIdsNoIsrepushableFalse)\r\n    }\r\n  }\r\n\r\n\r\n  constructor(\r\n    private appRestService: AppRestService,\r\n    private gridDataSourceService: GridDataSourceService,\r\n    protected templateStore: TemplateStoreService,\r\n    private configStateService: ConfigStateService,\r\n    private toastService: DxToastService,\r\n    private tenantChooser: TenantChooserService\r\n  ) {\r\n    const shortResultMessages = this.columns.find(column => column.dataField === 'shortResultMessages')\r\n    shortResultMessages.calculateDisplayValue = (rowData) => {\r\n      return rowData.shortResultMessages || '無錯誤訊息'\r\n    }\r\n\r\n    this.tenantChooser.tenantId$.subscribe(tenandId => {\r\n      this.grid?.instance?.refresh()\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n      cRUDEndpoints,\r\n      relatedDataValueAndQueryStringKeyMapping,\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.grid.instance.on('rowExpanded', this.rowExpanded)\r\n  }\r\n\r\n  rowExpanded = (e) => {\r\n    this.applyyNotificationMasterDetailRowCollapse(e)\r\n  }\r\n\r\n  applyyNotificationMasterDetailRowCollapse(e) {\r\n    // use setTimeout to wait HTML DOM change before get element\r\n    setTimeout(() => {\r\n      const tdElementCollapse = e.element.querySelector('[aria-label=\"Collapse\"]')\r\n      const trElementRowIndex = tdElementCollapse.parentElement.ariaRowIndex\r\n      const trElementRow = e.element.querySelector(`tr.dx-row.dx-data-row.dx-row-lines[aria-rowindex=\"${trElementRowIndex}\"]`)\r\n      trElementRow.classList.add('master-detail-row-collapse')\r\n    })\r\n\r\n    if (e.key === this.masterDetailRowCollapseKey) {\r\n      return\r\n    }\r\n\r\n    e.component.collapseRow(this.masterDetailRowCollapseKey);\r\n    this.masterDetailRowCollapseKey = e.key\r\n  }\r\n\r\n  repush = (notificationRecordsIds: string[]) => {\r\n    this.configStateService.getOne$('currentTenant')\r\n      .pipe(switchMap(res => {\r\n        return this.appRestService.request({\r\n          method: 'POST',\r\n          url: '/api/app/jbnotifier-admin/notification-records/repush',\r\n          body: {\r\n            \"notificationRecordIds\": notificationRecordsIds,\r\n            \"SpecifiedTenantId\": res.id,\r\n          }\r\n        })\r\n      })).subscribe(() => {\r\n        this.toastService.success('操作成功!，因發送需要時間，成功次數不會馬上發生變化。');\r\n      })\r\n  }\r\n\r\n  showTextContent(textContent: string) {\r\n    this.isTextContentVisible = true\r\n    this.textContent = textContent\r\n  }\r\n\r\n  showHtmlContent(htmlContent: string) {\r\n    this.isHTMLContentVisible = true\r\n    this.htmlContent = htmlContent\r\n  }\r\n\r\n  isRepushable(item: any) {\r\n    return item.isRepushable;\r\n  }\r\n\r\n  // when isRepushable is false then set checkbox visibilety to hidden\r\n  // 但其實仍會被選擇到，故onSeclectionChanged時，需將被選取的選項但isRepushable= false拿掉\r\n  onCellPrepared(e: any) {\r\n    if (e.rowType === 'data' && e.columnIndex === 0 && !e.data.isRepushable) {\r\n      e.cellElement.style.visibility = \"hidden\"\r\n    }\r\n  }\r\n\r\n  onSelectionChanged(e: any) {\r\n    this.selectedIdsNoIsrepushableFalse = []\r\n    // 只將isrepushable = true的加入\r\n    e.selectedRowsData.forEach((item) => {\r\n      if (item.isRepushable) {\r\n        this.selectedIdsNoIsrepushableFalse.push(item.notificationRecordId)\r\n      }\r\n    });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NotificationRecordsRoutingModule } from './notification-records-routing.module';\r\nimport { NotificationRecordsComponent } from './components/notification-records.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { TextContentViewerComponent } from \"../shared/components/text-content-viewer/text-content-viewer.component\";\r\nimport { HtmlContentViewerComponent } from \"../shared/components/html-content-viewer/html-content-viewer.component\";\r\nimport { NotificationsRecordsMasterDetailComponent } from './components/notifications-records-master-detail/notifications-records-master-detail.component';\r\nimport { NotificationPagerComponent } from \"../shared/components/notification/notification-pager/notification-pager.component\";\r\nimport { RepushButtonComponent } from 'src/app/shared/components/grid/repush-button/repush-button.component'\r\nimport { GridFilterItemsComponent } from \"../shared/components/grid/grid-filter-items/grid-filter-items.component\";\r\nimport { TenantChooserModule } from \"../shared/modules/tenant-chooser/tenant-chooser.module\";\r\n@NgModule({\r\n  declarations: [\r\n    NotificationRecordsComponent,\r\n    NotificationsRecordsMasterDetailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    DXComponentsModule,\r\n    NotificationRecordsRoutingModule,\r\n    TextContentViewerComponent,\r\n    HtmlContentViewerComponent,\r\n    NotificationPagerComponent,\r\n    RepushButtonComponent,\r\n    GridFilterItemsComponent,\r\n    TenantChooserModule\r\n  ]\r\n})\r\nexport class NotificationRecordsModule { }\r\n"],"x_google_ignoreList":[]}