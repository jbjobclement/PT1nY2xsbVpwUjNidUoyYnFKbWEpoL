{"version":3,"file":"94375.1de6319c3f1a9ab5.js","mappings":"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","names":["routes","path","component","CustomizeTenantsComponent","constructor","this","cronExpression","expressionInfos","name","cronExpressionId","expectedEndTime","expectedPushCount","cronDescription","selected","dataSource","id","parentId","onExpressionsChange","expressions","console","log","selectedChange","static","t","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","i0","$event","canActivate","AuthGuard","PermissionGuard","CustomizeTenantsRoutingModule","oAB","cJS","RouterModule","forChild","getDescendantIds","data","undefined","descendants","findDescendants","currentId","filter","item","forEach","child","push","_r6","ctx_r5","onItemSelectionChanged","ctx_r3","_dataSource","_r8","ctx_r7","restore","ctx_r9","onCustomSelectNodesRecursiveChanged","JbTreeViewComponent_dx_scroll_view_2_dx_tree_view_7_Template","ctx_r0","customSelectNodesRecursive","popupVisible","_r12","ctx_r11","onConfirm","JbTreeViewComponent","tagBoxSelected","treeViewselected","_originSelected","isViewMode","EventEmitter","popupButtonToolBars","toolbar","location","e","value","previousCustomSelectNodesRecursive","tree","instance","unselectAll","selectItem","onTagBoxFocusIn","parentIdContainingSelected","findSelectedParentIds","selectedParentIds","Set","traverse","add","find","node","Array","from","setDataSourceExpandedProperties","d","isExpanded","s","expanded","ngOnChanges","changes","map","getSelectedSetDataSource","isSelected","itemData","unselectItem","emit","onTagBoxSelectionChanged","removedItems","length","removedIds","sId","removedId","setTimeout","viewQuery","JbTreeViewComponent_dx_scroll_view_2_Template","JbTreeViewComponent_div_3_Template","DXComponentsModule","i1","i2","i3","i4","i5","CommonModule","i6","CronTestingModule","SharedModule","JBCronModule"],"sourceRoot":"webpack:///","sources":["./src/app/cron-testing/customize-tenants-routing.module.ts","./src/app/cron-testing/customize-tenants.component.ts","./src/app/cron-testing/customize-tenants.component.html","./src/app/shared/components/jb-tree-view/utils.ts","./src/app/shared/components/jb-tree-view/jb-tree-view.component.html","./src/app/shared/components/jb-tree-view/jb-tree-view.component.ts","./src/app/cron-testing/customize-tenants.module.ts"],"sourcesContent":["import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomizeTenantsComponent } from './customize-tenants.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomizeTenantsComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CustomizeTenantsRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { CronExpressionInfo } from '../shared/modules/cron-expression-generator/typing';\r\nimport { TreeViewDataSource } from '../shared/components/jb-tree-view/typing';\r\n@Component({\r\n    selector: 'app-customize-tenants',\r\n    templateUrl: './customize-tenants.component.html',\r\n    styleUrls: []\r\n})\r\n/**\r\n * \r\n */\r\nexport class CustomizeTenantsComponent {\r\n    constructor() { }\r\n    onExpressionsChange(expressions) {\r\n        console.log('expressions')\r\n        console.log(expressions)\r\n    }\r\n    cronExpression = '*/15 * * * 1-5'\r\n    expressionInfos: CronExpressionInfo[] = [\r\n        {\r\n            name: \"測試自訂每月\",\r\n            cronExpressionId: '* * * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂複數月\",\r\n            cronExpressionId: '* * * 1,2,3 *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂單選月\",\r\n            cronExpressionId: '* * * 3 *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂單月頻率\",\r\n            cronExpressionId: '* * * */3 *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂每小時\",\r\n            cronExpressionId: '* * * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂複數小時\",\r\n            cronExpressionId: '* 0,1,2 * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂單選小時\",\r\n            cronExpressionId: '* 12 * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂單小時頻率\",\r\n            cronExpressionId: '* */3 * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂每分鐘\",\r\n            cronExpressionId: '* * * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂複數分鐘\",\r\n            cronExpressionId: '0,1,2 * * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂單選分鐘\",\r\n            cronExpressionId: '12 * * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"測試自訂分鐘頻率\",\r\n            cronExpressionId: '*/3 * * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"每天\",\r\n            cronExpressionId: '* * * * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"月每隔幾天\",\r\n            cronExpressionId: '* * */10 * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"星期每隔幾天\",\r\n            cronExpressionId: '* * * * */3',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"指定月日單選\",\r\n            cronExpressionId: '* * 11 * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"指定月日複選\",\r\n            cronExpressionId: '* * 11,20,23 * *',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"指定週日複選\",\r\n            cronExpressionId: '* * * * 0,2,3,5',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            name: \"指定週日單選\",\r\n            cronExpressionId: '* * * * 0',\r\n            expectedEndTime: null,\r\n            expectedPushCount: 0,\r\n            cronDescription: '描述 1'\r\n        },\r\n        {\r\n            cronExpressionId: '1 1 1,2,3 * *',\r\n            expectedEndTime: '2024-06-01T14:30:00',\r\n            // expectedPushCount: null,\r\n            cronDescription: '描述 1 - 1'\r\n        },\r\n        // {\r\n        //     cron: '0 0 * * *',\r\n        //     expectedEndTime: '2024-06-01T14:30:00',\r\n        //     expectedPushCount: 0,\r\n        //     description: '描述 2'\r\n        // },\r\n        // {\r\n        //     cron: '0 0 * * 2',\r\n        //     expectedEndTime: '2024-06-01T14:30:00',\r\n        //     expectedPushCount: 0,\r\n        //     description: '描述 3'\r\n        // },\r\n        // {\r\n        //     cron: '0,1 0,1 * * *',\r\n        //     expectedEndTime: '2024-06-01T14:30:00',\r\n        //     expectedPushCount: 0,\r\n        //     description: '描述 4'\r\n        // },\r\n        // {\r\n        //     cron: '0 0 1,11,21 * *',\r\n        //     expectedEndTime: '2024-06-01T14:30:00',\r\n        //     expectedPushCount: 0,\r\n        //     description: '描述 5'\r\n        // },\r\n        // {\r\n        //     cron: '0 0 1,11,21 * *',\r\n        //     expectedEndTime: '2024-06-01T14:30:00',\r\n        //     expectedPushCount: 0,\r\n        //     description: '描述 6'\r\n        // },\r\n    ]\r\n    selected: string[] = ['1', '1-1-1', '2-1'];\r\n\r\n    dataSource: TreeViewDataSource = [\r\n        {\r\n            id: '1',\r\n            name: \"1\"\r\n        },\r\n        {\r\n            id: '1-1',\r\n            name: \"1-1\",\r\n            parentId: \"1\"\r\n        },\r\n        {\r\n            id: '1-1-1',\r\n            name: \"1-1-1\",\r\n            parentId: \"1-1\",\r\n        },\r\n        {\r\n            id: '1-1-2',\r\n            name: \"1-1-2\",\r\n            parentId: \"1-1\"\r\n        },\r\n        {\r\n            id: '2',\r\n            name: \"2\",\r\n        },\r\n        {\r\n            id: '2-1',\r\n            name: \"2-1\",\r\n            parentId: \"2\"\r\n        },\r\n        {\r\n            id: '2-1-1',\r\n            name: \"2-1-1\",\r\n            parentId: \"2-1\",\r\n        },\r\n        {\r\n            id: '2-1-2',\r\n            name: \"2-1-2\",\r\n            parentId: \"2-1\"\r\n        },\r\n        {\r\n            id: '2-1-3',\r\n            name: \"2-1-3\",\r\n            parentId: \"2-1\"\r\n        },\r\n    ]\r\n\r\n    selectedChange(selected) {\r\n        this.selected = selected\r\n    }\r\n}","<!-- {{cronExpression}} -->\r\n<!-- [value]=\"cronExpression\" -->\r\n<!-- <app-jb-tree-view\r\n    [selected]=\"selected\"\r\n    [dataSource]=\"dataSource\"\r\n    (selectedChange)=\"selectedChange($event)\"\r\n>\r\n</app-jb-tree-view> -->\r\n\r\n\r\n<app-cron-expression-generator\r\n    [expressionInfos]=\"expressionInfos\"\r\n    (expressionsChange)=\"onExpressionsChange($event)\"\r\n>\r\n\r\n\r\n</app-cron-expression-generator>","import type { TreeViewDataSource } from \"./typing\";\r\n\r\nexport function findSelectedParentIds(data: TreeViewDataSource) {\r\n    const selectedParentIds = new Set<string>();\r\n\r\n    function traverse(item) {\r\n        if (item.selected) {\r\n            let currentId = item.parentId;\r\n            while (currentId) {\r\n                selectedParentIds.add(currentId);\r\n                currentId = data.find(node => node.id === currentId)?.parentId;\r\n            }\r\n        }\r\n\r\n        const children = data.filter(node => node.parentId === item.id);\r\n        children.forEach(traverse);\r\n    }\r\n\r\n    data.filter(item => !item.parentId).forEach(traverse);\r\n\r\n    return Array.from(selectedParentIds);\r\n}\r\n\r\nexport const getDescendantIds = (data, id?: string) => {\r\n    if (id === undefined) {\r\n        return [];\r\n    }\r\n    const descendants: string[] = [];\r\n    function findDescendants(currentId: string) {\r\n        const children = data.filter(item => item.parentId === currentId);\r\n        children.forEach(child => {\r\n            descendants.push(child.id);\r\n            findDescendants(child.id);\r\n        });\r\n    }\r\n    findDescendants(id);\r\n    return descendants;\r\n}\r\n\r\nexport const getSelectedSetDataSource = (dataSource: TreeViewDataSource, selected: string[]) => {\r\n    const result = dataSource.map(d => {\r\n        const isSelected = selected?.find(s => s === d.id) !== undefined;\r\n        if (selected?.find(s => s === d.id)) {\r\n            return {\r\n                ...d,\r\n                selected: isSelected\r\n            }\r\n        }\r\n        return d;\r\n    })\r\n    return result;\r\n}\r\n\r\nexport const setDataSourceExpandedProperties = (dataSource: TreeViewDataSource, parentIdContainingSelected: string[]) => {\r\n    dataSource.forEach(d => {\r\n        const isExpanded = parentIdContainingSelected.find(s => s === d.id) !== undefined;\r\n        d.expanded = isExpanded\r\n    })\r\n}","<dx-tag-box\r\n\t[(value)]=\"tagBoxSelected\"\r\n\t(onSelectionChanged)=\"onTagBoxSelectionChanged($event)\"\r\n\t[dataSource]=\"_dataSource\"\r\n\t[openOnFieldClick]=\"false\"\r\n    (onFocusIn)=\"onTagBoxFocusIn()\"\r\n\tvalueExpr=\"id\"\r\n\tdisplayExpr=\"name\"\r\n    [multiline]=\"true\"\r\n\t[disabled]=\"isViewMode\"\r\n\t[showDropDownButton]=\"true\"\r\n\tplaceholder=\"選擇...\"\r\n>\r\n</dx-tag-box>\r\n\r\n\r\n<dx-popup\r\n\tcontentTemplate=\"contentTemplate\"\r\n\t[toolbarItems]=\"popupButtonToolBars\"\r\n\t[visible]=\"popupVisible\"\r\n\t[showTitle]=\"false\"\r\n\twidth=\"35%\"\r\n\tminWidth=\"300px\"\r\n>\r\n\t<dx-scroll-view *dxTemplate=\"let content of 'contentTemplate'\">\r\n\t\t<div class=\"d-flex align-items-center mb-1\">\r\n\t\t\t<div class=\"me-1\">\r\n\t\t\t\t<dx-button type=\"default\" text=\"復原\" (onClick)=\"restore()\">\r\n\t\t\t\t</dx-button>\r\n\t\t\t</div>\r\n\t\t\t<dx-check-box\r\n\t\t\t\t(onValueChanged)=\"onCustomSelectNodesRecursiveChanged($event)\"\r\n\t\t\t\t[value]=\"customSelectNodesRecursive\"\r\n\t\t\t>\r\n\t\t\t</dx-check-box>\r\n\t\t\t<span>子項目連動</span>\r\n\t\t</div>\r\n\t\t<dx-tree-view\r\n\t\t\t*ngIf=\"popupVisible\"\r\n\t\t\t#tree\r\n\t\t\t[dataSource]=\"_dataSource\"\r\n\t\t\tdataStructure=\"plain\"\r\n\t\t\tkeyExpr=\"id\"\r\n\t\t\tdisplayExpr=\"name\"\r\n\t\t\tparentIdExpr=\"parentId\"\r\n\t\t\tselectionMode=\"multiple\"\r\n\t\t\t[selectNodesRecursive]=\"false\"\r\n\t\t\tshowCheckBoxesMode=\"normal\"\r\n\t\t\t(onItemSelectionChanged)=\"onItemSelectionChanged($event)\"\r\n\t\t>\r\n\t\t</dx-tree-view>\r\n\t</dx-scroll-view>\r\n\t<div \r\n\t\t*dxTemplate=\"let bottom of 'bottom-toolbar'\"\r\n\t>\r\n\t\t<dx-button\r\n\t\t\ttext=\"確定\"\r\n\t\t\t(onClick)=\"onConfirm()\"\r\n\t\t>\r\n\t\t</dx-button>\r\n\t</div>\r\n</dx-popup>","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport type { DxTreeViewComponent } from \"devextreme-angular\";\r\nimport { ItemSelectionChangedEvent } from 'devextreme/ui/tree_view';\r\nimport { ValueChangedEvent } from 'devextreme/ui/check_box';\r\nimport { DXComponentsModule } from '../../dx-components.module';\r\nimport { SelectionChangedEvent } from 'devextreme/ui/tag_box';\r\nimport { CommonModule } from '@angular/common';\r\nimport { findSelectedParentIds, getDescendantIds, getSelectedSetDataSource, setDataSourceExpandedProperties } from './utils';\r\n\r\n@Component({\r\n  selector: 'app-jb-tree-view',\r\n  standalone: true,\r\n  imports: [DXComponentsModule, CommonModule],\r\n  templateUrl: './jb-tree-view.component.html',\r\n  styleUrl: './jb-tree-view.component.scss'\r\n})\r\nexport class JbTreeViewComponent implements OnChanges {\r\n  customSelectNodesRecursive = true;\r\n  tagBoxSelected = []\r\n  treeViewselected = []\r\n  _originSelected = []\r\n  _dataSource = []\r\n\r\n  @ViewChild('tree') tree!: DxTreeViewComponent;\r\n  @Input() selected = []\r\n  @Input() dataSource = []\r\n  @Input() isViewMode: boolean = false\r\n  @Output() selectedChange = new EventEmitter()\r\n  popupVisible = false;\r\n  popupButtonToolBars = [\r\n    {\r\n      toolbar: 'bottom',\r\n      template: 'bottom-toolbar',\r\n      location: 'after'\r\n    }\r\n  ]\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['selected']) {\r\n      this.treeViewselected = this.selected?.map(s => s);\r\n      this.tagBoxSelected = this.selected?.map(s => s);\r\n      this._originSelected = this.selected ? [...this.selected] : [];\r\n    }\r\n\r\n    if (changes['dataSource']) {\r\n      this._dataSource = getSelectedSetDataSource(this.dataSource, this.selected);\r\n      this._originSelected = this.selected ? [...this.selected] : [];\r\n    }\r\n\r\n    // if (changes['selected'] && changes['dataSource']) {\r\n    //   this._dataSource = getSelectedSetDataSource(this.dataSource, this.selected);\r\n    //   this._originSelected = [...this.selected];\r\n    // }\r\n  }\r\n\r\n  onItemSelectionChanged(e: ItemSelectionChangedEvent) {\r\n    if (\r\n      this.customSelectNodesRecursive &&\r\n      e.itemData?.['selected'] === true\r\n    ) {\r\n      const id = e.itemData?.id as string;\r\n      const descendantIds = getDescendantIds(this.dataSource, id)\r\n      descendantIds.forEach(id => {\r\n        this.tree.instance.selectItem(id);\r\n      })\r\n    }\r\n    if (\r\n      this.customSelectNodesRecursive &&\r\n      e.itemData?.['selected'] === false\r\n    ) {\r\n      const id = e.itemData?.id as string;\r\n      const descendantIds = getDescendantIds(this.dataSource, id)\r\n      descendantIds.forEach(id => {\r\n        this.tree.instance.unselectItem(id);\r\n      })\r\n    }\r\n\r\n    this.treeViewselected = this._dataSource.filter(item => item.selected).map(d => d.id);\r\n  }\r\n\r\n  onCustomSelectNodesRecursiveChanged = (e: ValueChangedEvent) => { this.customSelectNodesRecursive = e.value; }\r\n\r\n  restore = () => {\r\n    const previousCustomSelectNodesRecursive = this.customSelectNodesRecursive;\r\n    this.customSelectNodesRecursive = false;\r\n    this.tree.instance.unselectAll();\r\n    this._originSelected.forEach(id => {\r\n      this.tree.instance.selectItem(id)\r\n    })\r\n    this.customSelectNodesRecursive = previousCustomSelectNodesRecursive;\r\n  }\r\n\r\n  onConfirm() {\r\n    this.tagBoxSelected = this.treeViewselected.map(s => s);\r\n    this.popupVisible = false;\r\n    this.selectedChange.emit(this.treeViewselected)\r\n  }\r\n\r\n  onTagBoxSelectionChanged(e: SelectionChangedEvent) {\r\n    if (e.removedItems.length) {\r\n      const removedIds = e.removedItems.map(item => item.id);\r\n      this.treeViewselected = this.treeViewselected.filter(sId => {\r\n        return removedIds.find(removedId => sId === removedId) === undefined;\r\n      })\r\n      this._dataSource.forEach(item => {\r\n        const isItemRemoved = removedIds.find(removedId => item.id === removedId)\r\n        if (isItemRemoved) {\r\n          item.selected = false;\r\n        }\r\n      })\r\n      setTimeout(() => this.selectedChange.emit(this.treeViewselected))\r\n    }\r\n\r\n    if (!e.removedItems?.length && this.treeViewselected?.length) {\r\n      setTimeout(() => this.selectedChange.emit(this.treeViewselected))\r\n    }\r\n  }\r\n\r\n  onTagBoxFocusIn = () => {\r\n    const parentIdContainingSelected = findSelectedParentIds(this._dataSource);\r\n    setDataSourceExpandedProperties(this._dataSource, parentIdContainingSelected);\r\n    this.popupVisible = true;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { CustomizeTenantsRoutingModule } from './customize-tenants-routing.module';\r\nimport { CustomizeTenantsComponent } from './customize-tenants.component';\r\nimport { JBCronModule } from '../shared/modules/cron-expression-generator/cron-expression-generator.module';\r\nimport { JbTreeViewComponent } from '../shared/components/jb-tree-view/jb-tree-view.component';\r\n@NgModule({\r\n  declarations: [CustomizeTenantsComponent],\r\n  imports: [\r\n    CommonModule, \r\n    CustomizeTenantsRoutingModule, \r\n    SharedModule,\r\n    JBCronModule,\r\n    JbTreeViewComponent,\r\n  ],\r\n})\r\nexport class CronTestingModule {}\r\n"],"x_google_ignoreList":[]}