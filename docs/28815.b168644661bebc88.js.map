{"version":3,"file":"28815.b168644661bebc88.js","mappings":"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","names":["columns","type","fixed","buttons","name","template","caption","dataType","dataField","visible","validationRules","requiredValidationRule","filterOperations","filterOperationTypes","text","editCellTemplate","calculateCellValue","rowData","receiverIds","map","r","id","cRUDEndpoints","index","get","create","update","delete","dataFieldLookupSourceMapping","path","pathForSelectedDisplay","dataFieldTranslationKeysMapping","relatedDataValueAndQueryStringKeyMapping","mapping","queryStringKey","editingPropertiesForCreating","popup","title","wrapperAttr","class","showCloseButton","toolbarItems","toolbar","width","form","colCount","items","editorType","editorOptions","displayExpr","label","elementAttr","editingPropertiesForUpdating","disabled","i0","ReceiverGroupsComponent_ng_container_17_ng_container_1_ng_container_1_Template","ctx_r7","templateStore","getGridTemplates","template_r6","key","_c2","cellInfo_r8","ReceiverGroupsComponent_ng_container_17_ng_container_1_Template","_r2","$event","cellInfo_r12","_r14","$implicit","setValue","column","dataSource","data","receivers","routes","component","ReceiverGroupsComponent","constructor","gridDataSourceService","restService","tenantChooser","configStateService","this","treeViewLoading","gridProperties","hoverStateEnabled","height","treeViewDataSource","isNeedToScrollToItem","setGridDataSource","parentReceiverGroupId","gridDataSource","getDataSource","filter","getOne$","subscribe","currentUser","tenantId","ngOnInit","tenantId$","res","SpecifiedTenantId","setTreeViewDataSource","SpecifiedTenantIdWhenEditingForCreate","onInitNewRow","e","onEditorPreparing","parentType","value","onContentReady","treeview","instance","scrollToItem","onRowClick","event","target","classList","contains","itemData","find","item","expandItem","selectItem","onRowInserted","onRowRemoved","request","method","url","params","receiverGroups","receiverGroup","parentId","selected","expanded","unshift","onTreeViewItemClick","node","reloadTreeView","static","t","i1","i2","i3","i4","core","Xpm","selectors","viewQuery","rf","ctx","_r15","addRow","ReceiverGroupsComponent_ng_container_17_Template","ReceiverGroupsComponent_div_19_Template","ReceiverGroupsComponent_app_notification_tag_box_20_Template","_r0","_c3","_c4","gridTemplates","canActivate","AuthGuard","PermissionGuard","ReceiverGroupsRoutingModule","oAB","cJS","RouterModule","forChild","ReceiverGroupsModule","TenantChooserModule","CommonModule","SharedModule","DXComponentsModule","DxTreeViewModule","NotificationPagerComponent","NotificationTagBoxComponent"],"sourceRoot":"webpack:///","sources":["./src/app/receiver-groups/config/columns.ts","./src/app/receiver-groups/config/crud-endpoints.ts","./src/app/receiver-groups/config/datafield-lookup-source-mapping.ts","./src/app/receiver-groups/config/datafield-translation-mapping.ts","./src/app/receiver-groups/config/datafield-value-query-string-key-mapping.ts","./src/app/receiver-groups/config/form-properties.ts","./src/app/receiver-groups/components/receiver-groups.component.html","./src/app/receiver-groups/receiver-groups-routing.module.ts","./src/app/receiver-groups/components/receiver-groups.component.ts","./src/app/receiver-groups/receiver-groups.module.ts"],"sourcesContent":["// import { filterOperationTypes } from 'src/app/shared/const/filterOperations';\r\nimport type { Column } from 'devextreme/ui/data_grid';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    type: 'buttons',\r\n    fixed: true,\r\n    buttons: [\r\n      {\r\n        name: 'save',\r\n        template: 'grid-save-button'\r\n      },\r\n      // {\r\n      //   name: 'detail',\r\n      //   template: 'detail-button',\r\n      // },\r\n      {\r\n        name: 'edit',\r\n        template: 'grid-edit-button',\r\n      },\r\n      {\r\n        name: 'delete',\r\n        template: 'grid-delete-button',\r\n      },\r\n      {\r\n        name: 'cancel',\r\n        template: 'grid-cancel-button',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    caption: '租戶名稱',\r\n    dataType: 'string'\r\n  },\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    caption: '指定租戶',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'id',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: \"idCode\",\r\n    caption: 'idCode',\r\n    dataType: 'string',\r\n    validationRules: [requiredValidationRule],\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    caption: '接收者群組名稱',\r\n    dataType: 'string',\r\n    validationRules: [requiredValidationRule],\r\n    filterOperations: filterOperationTypes.text\r\n  },\r\n  {\r\n    dataField: \"sortingNumber\",\r\n    caption: '順序',\r\n    dataType: 'number',\r\n    visible: false\r\n  },\r\n  // {\r\n  //   dataField: 'id',\r\n  //   visible: false,\r\n  // },\r\n  {\r\n    dataField: 'tenantId',\r\n    caption: '',\r\n    dataType: 'string',\r\n    visible: false,\r\n    //filterOperations: filterOperations.text\r\n  },\r\n  {\r\n    dataField: 'subTenantId',\r\n    caption: '子租戶',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    name: 'subTenantName',\r\n    caption: '',\r\n    dataType: 'string',\r\n    visible: false,\r\n    //filterOperations: filterOperations.text\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    dataType: 'object',\r\n    caption: '接收者',\r\n    visible: false,\r\n    editCellTemplate: 'receiverIds',\r\n    calculateCellValue(rowData) {\r\n      const value = rowData['receiverIds'].map(r => {\r\n        return r.id;\r\n      })\r\n      return value;\r\n    },\r\n  },\r\n  {\r\n    dataField: 'parentReceiverGroupId',\r\n    caption: '',\r\n    dataType: 'string',\r\n    visible: false,\r\n    //filterOperations: filterOperations.text\r\n  },\r\n  {\r\n    name: 'receivers',\r\n    dataType: 'object',\r\n    visible: false,\r\n    //filterOperations: filterOperations.text\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    visible: false\r\n  },\r\n];","import { CRUDEndpoints } from \"src/app/shared/typing\";\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n  index: '/api/app/receiver-groups',\r\n  get: '/api/app/receiver-groups',\r\n  create: '/api/app/receiver-groups',\r\n  update: '/api/app/receiver-groups',\r\n  delete: '/api/app/receiver-groups',\r\n};","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n  {\r\n    dataField: 'subTenantId',\r\n    path: '/api/app/receiver-groups/sub-tenant-lookup',\r\n    // pathForSelectedDisplay: '/api/saas/customize-tenants',\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    path: '/api/app/receiver-groups/receiver-lookup',\r\n    // pathForSelectedDisplay: '/api/saas/customize-tenants',\r\n  },\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n    pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants',\r\n  },\r\n  // {\r\n  //   dataField: 'parentReceiverGroupId',\r\n  //   path: '/api/app/receiver-groups',\r\n  //   pathForSelectedDisplay: '/api/app/receiver-groups',\r\n  // },\r\n];\r\n\r\n\r\n// GET\r\n// /api/identity/customize-users/assignable-tenants","import { DataFieldTranslationKeysMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = [\r\n  // {\r\n  //   dataField: 'tenantId',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n  // {\r\n  //   name: 'tenantCode',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n  // {\r\n  //   name: 'tenantName',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n\r\n  // {\r\n  //   dataField: 'parentReceiverGroupId',\r\n  //   translateKeys: ['ParentReceiverGroupId'],\r\n  // },\r\n  // {\r\n  //   name: 'parentReceiverGroupCode',\r\n  //   translateKeys: ['ParentReceiverGroupId'],\r\n  // },\r\n  // {\r\n  //   name: 'parentReceiverGroupName',\r\n  //   translateKeys: ['ParentReceiverGroupId'],\r\n  // },\r\n\r\n  // {\r\n  //   dataField: 'name',\r\n  //   translateKeys: ['Name'],\r\n  // },\r\n];\r\n","import { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\n\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n  {\r\n    dataField: 'id',\r\n    mapping: ['receiverGroup', 'id'],\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    mapping: ['receiverGroup', 'concurrencyStamp'],\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    queryStringKey: 'TenantName',\r\n    mapping: ['tenant', 'name']\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    queryStringKey: 'receivers',\r\n    mapping: ['receivers']\r\n  },\r\n\r\n  {\r\n    dataField: 'name',\r\n    queryStringKey: 'Name',\r\n    mapping: ['receiverGroup', 'name'],\r\n  },\r\n  {\r\n    dataField: 'idCode',\r\n    queryStringKey: 'IdCode',\r\n    mapping: ['receiverGroup', 'idCode'],\r\n  },\r\n  {\r\n    dataField: 'sortingNumber',\r\n    queryStringKey: 'SortingNumber',\r\n    mapping: ['receiverGroup', 'sortingNumber'],\r\n  },\r\n  {\r\n    dataField: 'subTenantId',\r\n    queryStringKey: 'SubTenantId',\r\n    mapping: ['subTenant', 'id'],\r\n  },\r\n  {\r\n    dataField: 'subTenantName',\r\n    queryStringKey: 'SubTenantName',\r\n    mapping: ['subTenant', 'name'],\r\n  },\r\n  {\r\n    name: 'receivers',\r\n    mapping: ['receivers']\r\n  },\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    mapping: ['tenant', 'id']\r\n  }\r\n];","import type { Editing } from 'devextreme/ui/data_grid';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\n\r\nconst formItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    editorType: 'dxSelectBox'\r\n  },\r\n  {\r\n    dataField: 'idCode',\r\n    editorType: 'dxTextBox',\r\n    validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    editorType: 'dxTextBox',\r\n    validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'subTenantId',\r\n    editorType: 'dxSelectBox',\r\n    editorOptions: {\r\n      displayExpr: 'displayName'\r\n    }\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    label: {\r\n      visible: false\r\n    }\r\n  },\r\n  {\r\n    dataField: 'sortingNumber',\r\n    editorType: 'dxNumberBox'\r\n  },\r\n];\r\n\r\nconst editFormItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    editorType: 'dxSelectBox',\r\n    editorOptions: {\r\n      disabled: true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'subTenantId',\r\n    editorType: 'dxSelectBox',\r\n    editorOptions: {\r\n      displayExpr: 'displayName',\r\n      disabled: true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'idCode',\r\n    editorType: 'dxTextBox',\r\n    editorOptions: {\r\n      disabled: true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    editorType: 'dxTextBox'\r\n  },\r\n  {\r\n    dataField: 'receiverIds',\r\n    label: {\r\n      visible: false\r\n    }\r\n  },\r\n  {\r\n    dataField: 'sortingNumber',\r\n    editorType: 'dxNumberBox'\r\n  }\r\n];\r\n/**\r\n * Properties for creating popup form.\r\n */\r\nexport const editingPropertiesForCreating: Editing = {\r\n  popup: {\r\n    title: 'JbNotifier::Permission:ReceiverGroups',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    showCloseButton: true,\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar'\r\n      }\r\n    ],\r\n    width: 500\r\n  },\r\n  form: {\r\n    colCount: 1,\r\n    items: formItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  },\r\n};\r\n\r\n/**\r\n * Properties for updating popup form.\r\n */\r\nexport const editingPropertiesForUpdating: Editing = {\r\n  popup: {\r\n    title: 'JbNotifier::Permission:ReceiverGroups',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    showCloseButton: true,\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar'\r\n      }\r\n    ],\r\n    width: 500\r\n  },\r\n  form: {\r\n    colCount: 1,\r\n    items: editFormItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  },\r\n};","<div class=\"receiver-groups-container\">\r\n  <app-tenant-chooser></app-tenant-chooser>\r\n  <div class=\"receiver-groups\">\r\n    <div #treeViewContainer class=\"receiver-groups-tree-view\">\r\n      <dx-load-panel\r\n        [container]=\"treeViewContainer\"\r\n        shadingColor=\"rgba(0,0,0,0.3)\"\r\n        [position]=\"{ of: treeViewContainer }\"\r\n        [visible]=\"treeViewLoading\"\r\n        [showIndicator]=\"true\"\r\n        [showPane]=\"true\"\r\n        [shading]=\"false\"\r\n        [hideOnOutsideClick]=\"false\"\r\n      >\r\n      </dx-load-panel>\r\n      <dx-button\r\n        appGridAddButton\r\n        (onClick)=\"grid.instance.addRow()\"\r\n      >\r\n      </dx-button>\r\n  \r\n      <dx-tree-view\r\n        #treeview\r\n        appTreeView\r\n        [dataSource]=\"treeViewDataSource\"\r\n        [elementAttr]=\"{class: 'custom-tree-view'}\"\r\n        selectionMode=\"single\"\r\n        dataStructure=\"plain\"\r\n        keyExpr=\"id\"\r\n        displayExpr=\"name\"\r\n        parentIdExpr=\"parentId\"\r\n        scrollDirection=\"both\"\r\n        (onItemClick)=\"onTreeViewItemClick($event)\"\r\n        (onContentReady)=\"onContentReady()\"\r\n      >\r\n      </dx-tree-view>\r\n    </div>\r\n  \r\n    <div class=\"receiver-groups-data-grid\">\r\n      <div class=\"grid-toolbar\">\r\n        <div class=\"grid-after-tool-bar\">\r\n          <app-grid-reload-button [grid]=\"grid\" (click)=\"reloadTreeView()\"></app-grid-reload-button>\r\n          <app-grid-column-chooser [grid]=\"grid\"></app-grid-column-chooser>\r\n          <app-grid-general-filter [grid]=\"grid\"></app-grid-general-filter>\r\n        </div>\r\n      </div>\r\n  \r\n      <dx-data-grid\r\n        #grid\r\n        appGridFeature\r\n        appGridFeatureNotification\r\n        [dataFieldTranslationKeysMapping]=\"dataFieldTranslationKeysMapping\"\r\n        [datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n        [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n        [editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n        [editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n        [columns]=\"columns\"\r\n        [dataSource]=\"gridDataSource\"\r\n        [gridProperties]=\"gridProperties\"\r\n        [isEditingDataAsync]=\"true\"\r\n        (onInitNewRow)=\"onInitNewRow($event)\"\r\n        (onEditorPreparing)=\"onEditorPreparing($event)\"\r\n        (onRowClick)=\"onRowClick($event)\"\r\n        (onRowInserted)=\"onRowInserted($event)\"\r\n        (onRowRemoved)=\"onRowRemoved($event)\"\r\n      >\r\n        <!-- <dxo-toolbar>\r\n          <dxi-item name=\"applyFilterButton\" cssClass=\"d-none\"></dxi-item>\r\n        </dxo-toolbar> -->\r\n  \r\n        <ng-container *ngFor=\"let template of templateStore.gridTemplates | keyvalue\">\r\n          <ng-container *dxTemplate=\"let cellInfo of template.key\">\r\n            <ng-container\r\n              *ngTemplateOutlet=\"\r\n                templateStore.getGridTemplates(template.key);\r\n                context: { $implicit: cellInfo }\r\n              \"\r\n            >\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n  \r\n        <div *dxTemplate=\"let cellInfo of 'bottom-toolbar'\">\r\n          <app-bottom-toolbar-btns [grid]=\"grid\"></app-bottom-toolbar-btns>\r\n        </div>\r\n  \r\n        <app-notification-tag-box\r\n          *dxTemplate=\"let cellInfo of 'receiverIds'\"\r\n          [dataSource]=\"cellInfo.column.editorOptions.dataSource\"\r\n          [rowData]=\"cellInfo.data['receivers']\"\r\n          [label]=\"cellInfo.column.caption\"\r\n          [isRequired]=\"cellInfo.column.validationRules && cellInfo.column.validationRules[0].type === 'required'\"\r\n          [value]=\"cellInfo.data.receiverIds\"\r\n          (valueChange)=\"cellInfo.setValue($event)\"\r\n        >\r\n        </app-notification-tag-box>\r\n      </dx-data-grid>\r\n  \r\n      <app-notification-pager [grid]=\"grid\"></app-notification-pager>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReceiverGroupsComponent } from './components/receiver-groups.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReceiverGroupsComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ReceiverGroupsRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport type { Editing, EditorPreparingEvent, InitNewRowEvent, Properties, RowClickEvent, RowInsertedEvent, RowRemovedEvent } from 'devextreme/ui/data_grid';\r\nimport type { DxDataGridComponent, DxTreeViewComponent } from 'devextreme-angular';\r\nimport type { Column } from 'devextreme/ui/data_grid';\r\nimport { columns } from '../config/columns';\r\nimport { cRUDEndpoints } from '../config/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from '../config/datafield-lookup-source-mapping';\r\nimport { dataFieldTranslationKeysMapping } from '../config/datafield-translation-mapping';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from '../config/datafield-value-query-string-key-mapping';\r\nimport {\r\n  editingPropertiesForCreating,\r\n  editingPropertiesForUpdating,\r\n} from '../config/form-properties';\r\nimport type DataSource from 'devextreme/data/data_source';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping, DataFieldTranslationKeysMapping, RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\nimport { GridDataSourceService } from 'src/app/shared/service/grid-data-source.service/grid-data-source.service';\r\nimport { TemplateStoreService } from 'src/app/shared/service/template-store.service';\r\nimport { ConfigStateService, RestService } from '@abp/ng.core';\r\nimport { ItemClickEvent as TreeViewItemClickEvent } from 'devextreme/ui/tree_view';\r\nimport { TenantChooserService } from 'src/app/shared/modules/tenant-chooser/tenant-chooser.service';\r\n\r\n@Component({\r\n  selector: 'app-receiver-groups',\r\n  templateUrl: 'receiver-groups.component.html',\r\n  styleUrls: ['./receiver-groups.component.scss'],\r\n})\r\n/**\r\n * Recevier Groups\r\n */\r\nexport class ReceiverGroupsComponent implements OnInit {\r\n  /**\r\n   * 取得datagrid元件，將之存於變數grid。\r\n   */\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent;\r\n\r\n  /**\r\n   * 取得treeview元件，將之存於變數treeview。\r\n   */\r\n  @ViewChild('treeview', { static: false }) treeview: DxTreeViewComponent\r\n\r\n  /**\r\n   * devextreme data grid columns\r\n   * \r\n   * 用來設定grid具有那些欄位。\r\n   * \r\n   * DevExtreme官方文件: [Column]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Columns/Overview/}\r\n   */\r\n  columns: Column[] = columns;\r\n\r\n  /**\r\n   * devextreme grid datasource\r\n   * \r\n   * grid dataSource, 用來連接grid與後端data的新增、讀取、修改、刪除。\r\n   * \r\n   * 透過[getDataSource]{@link GridDataSourceService#getDataSource}使用[cRUDEndpoints]{@link ReceiverGroupsComponent#cRUDEndpoints}與[relatedDataValueAndQueryStringKeyMapping]{@link ReceiverGroupsComponent#relatedDataValueAndQueryStringKeyMapping}產生。\r\n   * \r\n   * DevExtreme官方文件: [DataSource]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/Data_Layer/DataSource/}\r\n   */\r\n  gridDataSource: DataSource;\r\n\r\n  /**\r\n   * 顯示treeview資料的是否正在載入中。\r\n   */\r\n  treeViewLoading = false;\r\n\r\n  /**\r\n   * 設定增、刪、查、改的路徑\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link ReceiverGroupsComponent#gridDataSource}。\r\n   */\r\n  cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n\r\n  /**\r\n   * 選單與資料路徑對應設定檔案\r\n   * \r\n   * {@link GridFeatureDirective}接收後用來設定[DataGrid]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Getting_Started_with_DataGrid/}的新增、編輯表單裡的選單。\r\n   */\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n\r\n  /**\r\n   * 選單與翻譯鍵對應設定檔案\r\n   * \r\n   * {@link FormFeatureDirective}接收後用來設定欄位名稱的翻譯。\r\n   */\r\n  dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping =\r\n    dataFieldTranslationKeysMapping;\r\n\r\n  /**\r\n   * 欄位、值、與回應資料結構的對應設定檔案\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link ReceiverGroupsComponent#gridDataSource}。\r\n   */\r\n  relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping =\r\n    relatedDataValueAndQueryStringKeyMapping;\r\n\r\n  /**\r\n   * 新增的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n\r\n  /**\r\n   * 編輯的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n\r\n  /**\r\n   * [grid]{@link ReceiverGroupsComponent#grid}設定\r\n   * \r\n   * 將高度設置為0，配合CSS調整版面\r\n   * \r\n   * 將原生toolbar移除\r\n   */\r\n  gridProperties: Properties = {\r\n    hoverStateEnabled: true,\r\n    toolbar: {\r\n      visible: false\r\n    },\r\n    height: 0\r\n  }\r\n\r\n  /**\r\n   * 參考{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing|Editing}、\r\n   * [editCellTemplate]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxDataGrid/Configuration/columns/\\#editCellTemplate/}、\r\n   * [template]{@link js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxForm/Item_Types/SimpleItem/#template/}、\r\n   * [restService]{@link RestService}、[ConfigStateService]{@link https://abp.io/docs/latest/framework/ui/angular/config-state-service?_redirected=B8ABF606AA1BDF5C629883DF1061649A}、[tenantChooser]{@link TenantChooserService}\r\n   * [RestService]{@link https://abp.io/docs/8.1/UI/Angular/HTTP-Requests}\r\n   * \r\n   * \r\n   * @param gridDataSourceService dxdatagrid所使用的產生datasource相關功能\r\n   * @param templateStore 共用的dx template儲存service，用於dx-data-grid、dx-form的custom template, 參考editCellTemplate, template\r\n   * @param restService 需要CRUD時的共用service\r\n   * @param configStateService 取得目前登入租戶的資料\r\n   * @param tenantChooser 參考tenantChooser\r\n   */\r\n  constructor(\r\n    private gridDataSourceService: GridDataSourceService,\r\n    protected templateStore: TemplateStoreService,\r\n    private restService: RestService,\r\n    private tenantChooser: TenantChooserService,\r\n    private configStateService: ConfigStateService\r\n  ) {\r\n    this.configStateService.getOne$(\"currentUser\").subscribe(currentUser => {\r\n      if (currentUser.tenantId) {\r\n        this.editingPropertiesForCreating.form.items[0].visible = false;\r\n        this.editingPropertiesForUpdating.form.items[0].visible = false;\r\n        this.columns[1].visible = false\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 目前樹狀結構父層ID\r\n   */\r\n  parentReceiverGroupId: string;\r\n\r\n  /**\r\n   * devextreme treeview\r\n   * \r\n   * 應用在樹狀結構元件的資料\r\n   * \r\n   * 參考[treeview]{@link https://js.devexpress.com/Angular/Documentation/Guide/UI_Components/TreeView/Getting_Started_with_TreeView/}\r\n   */\r\n  treeViewDataSource = []\r\n\r\n  /**\r\n   * 利用[tenantChooser]{@link TenantChooserService}，取得指定租戶的ID\r\n   */\r\n  SpecifiedTenantId: string;\r\n\r\n  /**\r\n   * 當HOST登入時，在有選擇任一父層資料情況下，在新增表單中指定選擇父層資料的租戶ID\r\n   */\r\n  SpecifiedTenantIdWhenEditingForCreate: string\r\n\r\n  /**\r\n   * onContentReady階段時，是否需要捲動至項目的父層\r\n   */\r\n    isNeedToScrollToItem = false\r\n\r\n  /**\r\n   * 參考[tenantChooser]{@link TenantChooserService}\r\n   * \r\n   * 取得指定租戶ID後，配置到[SpecifiedTenantId]{@link ReceiverGroupsComponent#SpecifiedTenantId}中\r\n   * \r\n   * 元件初始化後，配置[grid]{@link ReceiverGroupsComponent#grid}、[treeview]{@link ReceiverGroupsComponent#treeview}\r\n   */\r\n  ngOnInit(): void {\r\n    this.tenantChooser.tenantId$.subscribe((res) => {\r\n      this.SpecifiedTenantId = res\r\n      this.setGridDataSource();\r\n      this.setTreeViewDataSource(res)\r\n      this.SpecifiedTenantIdWhenEditingForCreate = null\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 新增時，帶入[parentReceiverGroupId]{@link ReceiverGroupsComponent#parentReceiverGroupId}，receiverIds預設為空陣列\r\n   */\r\n  onInitNewRow(e: InitNewRowEvent) {\r\n    e.data.parentReceiverGroupId = this.parentReceiverGroupId;\r\n    e.data['receiverIds'] = []\r\n  }\r\n\r\n  /**\r\n   * 當HOST登入時，在有選擇任一父層資料情況下，新增的 Popup 中，租戶下拉選單自動選擇父層資料的 tenantId 並鎖定\r\n   * \r\n   * @param {EditorPreparingEvent} e EditorPreparingEvent\r\n   * @returns \r\n   */\r\n  onEditorPreparing(e: EditorPreparingEvent) {\r\n    if (e.dataField !== 'SpecifiedTenantId' || e.parentType !== 'dataRow') {\r\n      return\r\n    }\r\n\r\n    if (this.SpecifiedTenantId === 'null' && this.SpecifiedTenantIdWhenEditingForCreate === 'null') {\r\n      return\r\n    }\r\n\r\n    if (this.SpecifiedTenantIdWhenEditingForCreate) {\r\n      e.editorOptions.disabled = true\r\n      e.editorOptions.value = this.SpecifiedTenantIdWhenEditingForCreate \r\n      e.setValue(this.SpecifiedTenantIdWhenEditingForCreate)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 新增、移除或重新發出API拿資料後，如果[isNeedToScrollToItem]{@link ReceiverGroupsComponent#isNeedToScrollToItem}為true，代表需要使用\r\n   * [scrollToItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#scrollToItemkey}\r\n   * 將[treeview]{@link ReceiverGroupsComponent#treeview}捲動到父層\r\n   */\r\n  onContentReady() {\r\n    if (this.parentReceiverGroupId && this.isNeedToScrollToItem) {\r\n      this.treeview.instance.scrollToItem(this.parentReceiverGroupId)\r\n      this.isNeedToScrollToItem = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 觸發[RowClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowClickEvent/}時，\r\n   * 會將該筆資料的id與[treeViewDataSource]{@link ReceiverGroupsComponent#treeViewDataSource}進行比對，\r\n   * 並根據id觸發[setGridDataSource]{@link ReceiverGroupsComponent#setGridDataSource}後重新渲染[grid]{@link ReceiverGroupsComponent#grid}，\r\n   * 此時樹狀結構也會呼叫[expandItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#expandItemitemData}與\r\n   * [selectItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#selectItemitemData}後展開，\r\n   * 並記錄新的[parentReceiverGroupId]{@link ReceiverGroupsComponent#parentReceiverGroupId}與[SpecifiedTenantId]{@link ReceiverGroupsComponent#SpecifiedTenantId}\r\n   * \r\n   * 如果[RowClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowClickEvent/}\r\n   * 的對象是按鈕時，則不觸發\r\n   * \r\n   * 使用[scrollToItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#scrollToItemkey}\r\n   * 將[treeview]{@link NotificationCategoriesComponent#treeview}捲動到父層\r\n   * \r\n   * 參考[RowClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowClickEvent/}\r\n   * @param e RowClickEvent\r\n   */\r\n  onRowClick(e: RowClickEvent) {\r\n    if (e.event.target.classList.contains('dx-button-content')) {\r\n      return\r\n    }\r\n    const itemData = this.treeViewDataSource.find(item => item.id === e.data.id)\r\n    this.setGridDataSource(e.data.id)\r\n    this.treeview.instance.expandItem(itemData)\r\n    this.treeview.instance.selectItem(itemData)\r\n    this.parentReceiverGroupId = e.data.id\r\n    this.SpecifiedTenantIdWhenEditingForCreate = e.data.SpecifiedTenantId\r\n    this.treeview.instance.scrollToItem(this.parentReceiverGroupId)\r\n  }\r\n\r\n  /**\r\n   * 觸發[RowInsertedEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowInsertedEvent/}時，呼叫[setTreeViewDataSource]{@link ReceiverGroupsComponent#setTreeViewDataSource}，\r\n   * 並帶入指定租戶ID[SpecifiedTenantId]{@link ReceiverGroupsComponent#SpecifiedTenantId}\r\n   * \r\n   * 帶入新增資料中的parentReceiverGroupId，以選取該節點與展開\r\n   * \r\n   * 將[isNeedToScrollToItem]{@link ReceiverGroupsComponent#isNeedToScrollToItem}設置為true，使[treeview]{@link ReceiverGroupsComponent#treeview}\r\n   * 在onContentReady階段時，可以自動捲動到該新增項目的父層 \r\n   * @param e RowInsertedEvent\r\n   */\r\n  onRowInserted(e: RowInsertedEvent) {\r\n    this.setTreeViewDataSource(this.SpecifiedTenantId, e.data.parentReceiverGroupId)\r\n    this.isNeedToScrollToItem = true\r\n  }\r\n\r\n  /**\r\n   * 觸發[RowRemovedEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowRemovedEvent/}\r\n   * 時，將該筆資料從[treeViewDataSource]{@link ReceiverGroupsComponent#treeViewDataSource}移除\r\n   * \r\n   * 將[isNeedToScrollToItem]{@link ReceiverGroupsComponent#isNeedToScrollToItem}設置為true，使[treeview]{@link ReceiverGroupsComponent#treeview}\r\n   * 在onContentReady階段時，可以自動捲動到該移除項目的父層\r\n   * \r\n   * 參考[RowRemovedEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowRemovedEvent/}\r\n   * @param e RowRemovedEvent\r\n   */\r\n  onRowRemoved(e: RowRemovedEvent) {\r\n    this.treeViewDataSource = this.treeViewDataSource.filter(item => item.id !== e.data.id)\r\n    this.isNeedToScrollToItem = true\r\n  }\r\n\r\n  /**\r\n   * 透過[getDataSource]{@link GridDataSourceService#getDataSource}使用設定檔設定grid的dataSource - \r\n   * [gridDataSource]{@link *ReceiverGroupsComponent#gridDataSource}\r\n   * \r\n   * 透過[parentReceiverGroupId]{@link ReceiverGroupsComponent#parentReceiverGroupId}，取得需要的資料\r\n   * \r\n   * 參考[filter]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/Data_Layer/DataSource/Configuration/#filter}、\r\n   * [parentReceiverGroupId]{@link ReceiverGroupsComponent#parentReceiverGroupId}\r\n   * \r\n   * @param parentReceiverGroupId 目前樹狀結構父層ID\r\n   */\r\n  setGridDataSource = (parentReceiverGroupId?: string) => {\r\n    this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n      cRUDEndpoints,\r\n      relatedDataValueAndQueryStringKeyMapping\r\n    );\r\n\r\n    this.gridDataSource.filter([\"ParentReceiverGroupId\", \"=\", parentReceiverGroupId])\r\n  }\r\n\r\n  /**\r\n   * 取得接收者群組的Tree view階層資料，最上層必須自定義，\r\n   * 並根據資料parentId是否為null，決定該筆資料的parentId是否為最上層\r\n   * \r\n   * 新增後呼叫，則判斷Tree view階層資料是否有任何一筆的ID與parentNotificationCategoryId相同，\r\n   * 如果相同則根據selected與expanded，選取該節點並展開\r\n   * \r\n   * @param SpecifiedTenantId 指定租戶ID\r\n   * @param parentReceiverGroupId 新增後，重新呼叫此方法時，需要帶入父層節點的ID，以便展開該節點\r\n   */\r\n  setTreeViewDataSource(SpecifiedTenantId: string, parentReceiverGroupId?: string) {\r\n    this.treeViewLoading = true;\r\n    this.restService.request<void, any>({\r\n      method: 'GET',\r\n      url: '/api/app/receiver-groups/treeview',\r\n      params: {\r\n        SpecifiedTenantId\r\n      }\r\n    }).subscribe(res => {\r\n      const receiverGroups = res.items.map(receiverGroup => ({\r\n        id: receiverGroup.id,\r\n        name: receiverGroup.name,\r\n        parentId: receiverGroup.parentId || 'receiverGroups',\r\n        tenantId: receiverGroup.tenantId || 'null',\r\n        selected: receiverGroup.id === parentReceiverGroupId,\r\n        expanded: receiverGroup.id === parentReceiverGroupId\r\n      }))\r\n\r\n      this.treeViewDataSource = receiverGroups\r\n\r\n      this.treeViewDataSource.unshift({\r\n        id: 'receiverGroups',\r\n        name: '接收者群組',\r\n        parentId: null,\r\n        selected: true,\r\n        expanded: true\r\n      })\r\n      this.treeViewLoading = false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 當觸發[ItemClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Types/ItemClickEvent/}\r\n   * 時，判斷此時樹狀結構是否為最上層，並在[setGridDataSource]{@link ReceiverGroupsComponent#setGridDataSource}帶入對應的id或null\r\n   * \r\n   * 透過[expandItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#expandItemitemData}\r\n   * 與[selectItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#selectItemitemData}\r\n   * 展開樹狀結構，並設定[parentReceiverGroupId]{@link ReceiverGroupsComponent#parentReceiverGroupId}與\r\n   * [SpecifiedTenantId]{@link ReceiverGroupsComponent#SpecifiedTenantId}\r\n   * \r\n   * 參考[ItemClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Types/ItemClickEvent/}\r\n   * \r\n   * @param TreeViewItemClickEvent ItemClickEvent\r\n   */\r\n  onTreeViewItemClick(e: TreeViewItemClickEvent) {\r\n    this.setGridDataSource(e.itemData.id === 'receiverGroups' ? null : e.itemData.id as string)\r\n    this.treeview.instance.expandItem(e.itemData)\r\n    this.treeview.instance.selectItem(e.itemData)\r\n    this.parentReceiverGroupId = e.itemData.id as string\r\n    this.SpecifiedTenantIdWhenEditingForCreate = e.node.itemData.tenantId\r\n  }\r\n\r\n  /**\r\n   * 當按下重新呼叫API，取得[grid]{@link ReceiverGroupsComponent#grid}資料時，\r\n   * 也一併呼叫[setTreeViewDataSource]{@link ReceiverGroupsComponent#setTreeViewDataSource}，\r\n   * 重新取得[treeViewDataSource]{@link ReceiverGroupsComponent#treeViewDataSource}\r\n   * \r\n   * 需要帶入[parentReceiverGroupId]{@link ReceiverGroupsComponent#parentReceiverGroupId}，以便在重繪時\r\n   * 也可以展開該節點\r\n   * \r\n   * 將[isNeedToScrollToItem]{@link ReceiverGroupsComponent#isNeedToScrollToItem}設置為true，使[treeview]{@link ReceiverGroupsComponent#treeview}\r\n   * 在onContentReady階段時，可以自動捲動到項目的父層\r\n   */\r\n  reloadTreeView() {\r\n    this.setTreeViewDataSource(this.SpecifiedTenantId, this.parentReceiverGroupId)\r\n    this.isNeedToScrollToItem = true\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ReceiverGroupsComponent } from './components/receiver-groups.component';\r\nimport { ReceiverGroupsRoutingModule } from './receiver-groups-routing.module';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { DxTreeViewModule } from 'devextreme-angular';\r\nimport { NotificationPagerComponent } from '../shared/components/notification/notification-pager/notification-pager.component';\r\nimport { NotificationTagBoxComponent } from \"../shared/components/notification/notification-tag-box/notification-tag-box.component\";\r\nimport { TenantChooserModule } from '../shared/modules/tenant-chooser/tenant-chooser.module';\r\nimport { GridColumnChooserComponent } from \"../shared/components/grid/grid-column-chooser/grid-column-chooser.component\";\r\nimport { GridReloadButtonComponent } from \"../shared/components/grid/grid-reload-button/grid-reload-button.component\";\r\n@NgModule({\r\n  declarations: [ReceiverGroupsComponent],\r\n  imports: [\r\n    TenantChooserModule,\r\n    CommonModule,\r\n    ReceiverGroupsRoutingModule,\r\n    SharedModule,\r\n    DXComponentsModule,\r\n    DxTreeViewModule,\r\n    NotificationPagerComponent,\r\n    NotificationTagBoxComponent,\r\n    GridColumnChooserComponent,\r\n    GridReloadButtonComponent\r\n],\r\n})\r\nexport class ReceiverGroupsModule { }\r\n"],"x_google_ignoreList":[]}