{"version":3,"file":"62566.12a46bcab894616a.js","mappings":"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","names":["columns","type","fixed","buttons","name","template","dataField","caption","dataType","visible","filterOperations","filterOperationTypes","text","validationRules","requiredValidationRule","cRUDEndpoints","index","get","create","update","delete","dataFieldLookupSourceMapping","path","pathForSelectedDisplay","relatedDataValueAndQueryStringKeyMapping","mapping","queryStringKey","editingPropertiesForCreating","popup","title","wrapperAttr","class","showCloseButton","toolbarItems","toolbar","width","form","colCount","items","editorType","editorOptions","min","elementAttr","editingPropertiesForUpdating","disabled","dataFieldTranslationKeysMapping","i0","NotificationCategoriesComponent_ng_container_17_ng_container_1_ng_container_1_Template","ctx_r6","templateStore","getGridTemplates","template_r5","key","_c2","cellInfo_r7","NotificationCategoriesComponent_ng_container_17_ng_container_1_Template","_r2","routes","component","NotificationCategoriesComponent","constructor","gridDataSourceService","restService","configStateService","tenantChooser","this","treeViewLoading","gridProperties","height","treeViewDataSource","isNeedToScrollToItem","setGridDataSource","parentNotificationCategoryId","gridDataSource","getDataSource","filter","getOne$","subscribe","currentUser","tenantId","ngOnInit","tenantId$","res","SpecifiedTenantId","setTreeViewDataSource","SpecifiedTenantIdWhenEditingForCreate","onInitNewRow","e","data","onEditorPreparing","parentType","value","setValue","onContentReady","treeview","instance","scrollToItem","onRowClick","event","target","classList","contains","itemData","find","item","id","expandItem","selectItem","onRowInserted","onRowRemoved","request","method","url","params","notificationCategories","map","parentId","selected","expanded","unshift","onTreeViewItemClick","node","reloadTreeView","static","t","i1","i2","i3","i4","core","Xpm","selectors","viewQuery","rf","ctx","_r11","addRow","$event","NotificationCategoriesComponent_ng_container_17_Template","NotificationCategoriesComponent_div_19_Template","_r0","_c3","_c4","gridTemplates","canActivate","AuthGuard","PermissionGuard","NotificationCategoriesRoutingModule","oAB","cJS","RouterModule","forChild","NotificationCategoriesModule","TenantChooserModule","CommonModule","SharedModule","DXComponentsModule","DxTreeViewModule","NotificationPagerComponent"],"sourceRoot":"webpack:///","sources":["./src/app/notification-categories/config/columns.ts","./src/app/notification-categories/config/crud-endpoints.ts","./src/app/notification-categories/config/datafield-lookup-source-mapping.ts","./src/app/notification-categories/config/datafield-value-query-string-key-mapping.ts","./src/app/notification-categories/config/form-properties.ts","./src/app/notification-categories/config/datafield-translation-mapping.ts","./src/app/notification-categories/components/notification-categories.component.html","./src/app/notification-categories/notification-categories-routing.module.ts","./src/app/notification-categories/components/notification-categories.component.ts","./src/app/notification-categories/notification-categories.module.ts"],"sourcesContent":["// import { filterOperationTypes } from 'src/app/shared/const/filterOperations';\r\nimport type { Column } from 'devextreme/ui/data_grid';\r\nimport { filterOperationTypes } from 'src/app/shared/grid/filterOperations';\r\nimport { requiredValidationRule } from 'src/app/shared/validationRules/required';\r\n\r\nexport const columns: Column[] = [\r\n  {\r\n    type: 'buttons',\r\n    fixed: true,\r\n    buttons: [\r\n      {\r\n        name: 'save',\r\n        template: 'grid-save-button',\r\n      },\r\n      // {\r\n      //   name: 'detail',\r\n      //   template: 'detail-button',\r\n      // },\r\n      {\r\n        name: 'edit',\r\n        template: 'grid-edit-button',\r\n      },\r\n      {\r\n        name: 'delete',\r\n        template: 'grid-delete-button',\r\n      },\r\n      {\r\n        name: 'cancel',\r\n        template: 'grid-cancel-button',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    dataField: 'tenantName',\r\n    caption: '租戶名稱',\r\n    dataType: 'string'\r\n  },\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    caption: '指定租戶',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'id',\r\n    visible: false,\r\n  },\r\n  {\r\n    dataField: 'idCode',\r\n    caption: 'idCode',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    caption: '通知分類名稱',\r\n    dataType: 'string',\r\n    filterOperations: filterOperationTypes.text,\r\n    validationRules: [requiredValidationRule]\r\n  },\r\n  {\r\n    dataField: 'sortingNumber',\r\n    caption: '排序',\r\n    dataType: 'number',\r\n    visible: false\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    visible: false,\r\n  },\r\n  {\r\n    dataField: 'parentNotificationCategoryId',\r\n    caption: '',\r\n    dataType: 'string',\r\n    visible: false\r\n  },\r\n];\r\n","import { CRUDEndpoints } from \"src/app/shared/typing\";\r\nexport const cRUDEndpoints: CRUDEndpoints = {\r\n  index: '/api/app/notification-categories',\r\n  get: '/api/app/notification-categories',\r\n  create: '/api/app/notification-categories',\r\n  update: '/api/app/notification-categories',\r\n  delete: '/api/app/notification-categories',\r\n};","import { DataFieldLookUpSourceMapping } from \"src/app/shared/typing\";\r\nexport const dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    path: '/api/app/jbnotifier-admin/customized-users/tenant-lookup',\r\n    pathForSelectedDisplay: '/api/app/jbnotifier-admin/customized-tenants',\r\n  },\r\n];\r\n\r\n\r\n// GET\r\n// /api/app/jbnotifier-admin/api-keys/assignable-tenants","import { RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\n\r\nexport const relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping = [\r\n  {\r\n    dataField: 'id',\r\n    mapping: ['notificationCategory','id'],\r\n  },\r\n  {\r\n    dataField: 'concurrencyStamp',\r\n    mapping: ['concurrencyStamp'],\r\n  },\r\n\r\n  {\r\n    dataField: 'tenantId',\r\n    queryStringKey: 'TenantId',\r\n    mapping: ['tenantId'],\r\n  },\r\n  {\r\n    name: 'tenantCode',\r\n    queryStringKey: 'TenantId',\r\n    mapping: ['tenant'],\r\n  },\r\n  {\r\n    name: 'tenantName',\r\n    queryStringKey: 'TenantId',\r\n    mapping: ['tenant', 'name'],\r\n  },\r\n\r\n  {\r\n    dataField: 'parentNotificationCategoryId',\r\n    queryStringKey: 'ParentNotificationCategoryId',\r\n    mapping: ['parentNotificationCategoryId'],\r\n  },\r\n  {\r\n    name: 'parentNotificationCategoryCode',\r\n    queryStringKey: 'ParentNotificationCategoryId',\r\n    mapping: ['parentNotificationCategory'],\r\n  },\r\n  {\r\n    name: 'parentNotificationCategoryName',\r\n    queryStringKey: 'ParentNotificationCategoryId',\r\n    mapping: ['parentNotificationCategory'],\r\n  },\r\n\r\n  {\r\n    dataField: 'name',\r\n    queryStringKey: 'Name',\r\n    mapping: ['notificationCategory', 'name'],\r\n  },\r\n  {\r\n    dataField: 'idCode',\r\n    queryStringKey: 'IdCode',\r\n    mapping: ['notificationCategory', 'idCode'],\r\n  },\r\n  {\r\n    dataField: 'sortingNumber',\r\n    mapping: ['notificationCategory', 'sortingNumber']\r\n  },\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    mapping: ['tenant', 'id']\r\n  }\r\n];","import type { Editing } from 'devextreme/ui/data_grid';\r\n\r\nconst formItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    editorType: 'dxSelectBox'\r\n  },\r\n  {\r\n    dataField: 'idCode',\r\n    editorType: 'dxTextBox'\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    editorType: 'dxTextBox'\r\n  },\r\n  {\r\n    dataField: 'sortingNumber',\r\n    editorType: 'dxNumberBox',\r\n    editorOptions: {\r\n      min: 1\r\n    }\r\n  }\r\n];\r\n\r\nconst updateformItems: Editing['form']['items'] = [\r\n  {\r\n    dataField: 'SpecifiedTenantId',\r\n    editorType: 'dxSelectBox',\r\n    editorOptions: {\r\n      disabled: true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'idCode',\r\n    editorType: 'dxTextBox',\r\n    editorOptions: {\r\n      disabled: true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'name',\r\n    editorType: 'dxTextBox'\r\n  },\r\n  {\r\n    dataField: 'sortingNumber',\r\n    editorType: 'dxNumberBox',\r\n    editorOptions: {\r\n      min: 1,\r\n    }\r\n  }\r\n];\r\n/**\r\n * Properties for creating popup form.\r\n */\r\nexport const editingPropertiesForCreating: Editing = {\r\n  popup: {\r\n    title: 'JbNotifier::Permission:NotificationCategories',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    showCloseButton: true,\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar'\r\n      }\r\n    ],\r\n    width: 500,\r\n  },\r\n  form: {\r\n    colCount: 1,\r\n    items: formItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  },\r\n};\r\n\r\n/**\r\n * Properties for updating popup form.\r\n */\r\n\r\nexport const editingPropertiesForUpdating: Editing = {\r\n  popup: {\r\n    title: 'JbNotifier::Permission:NotificationCategories',\r\n    wrapperAttr: { class: 'basic-popup' },\r\n    showCloseButton: true,\r\n    toolbarItems: [\r\n      {\r\n        toolbar: 'bottom',\r\n        template: 'bottom-toolbar'\r\n      }\r\n    ],\r\n    width: 500,\r\n  },\r\n  form: {\r\n    colCount: 1,\r\n    items: updateformItems,\r\n    elementAttr: { class: 'custom-form custom-form--edit' }\r\n  },\r\n};","import { DataFieldTranslationKeysMapping } from \"src/app/shared/typing\";\r\n\r\nexport const dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping = [\r\n  // {\r\n  //   dataField: 'tenantId',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n  // {\r\n  //   name: 'tenantCode',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n  // {\r\n  //   name: 'tenantName',\r\n  //   translateKeys: ['TenantId'],\r\n  // },\r\n\r\n  // {\r\n  //   dataField: 'parentNotificationCategoryId',\r\n  //   translateKeys: ['ParentNotificationCategoryId'],\r\n  // },\r\n  // {\r\n  //   name: 'parentNotificationCategoryCode',\r\n  //   translateKeys: ['ParentNotificationCategoryId'],\r\n  // },\r\n  // {\r\n  //   name: 'parentNotificationCategoryName',\r\n  //   translateKeys: ['ParentNotificationCategoryId'],\r\n  // },\r\n\r\n  // {\r\n  //   dataField: 'name',\r\n  //   translateKeys: ['Name'],\r\n  // },\r\n];\r\n","<div class=\"notification-categories-container\">\r\n  <app-tenant-chooser></app-tenant-chooser>\r\n  <div class=\"notification-categories\">\r\n    <div #treeViewContainer class=\"notification-categories-tree-view\">\r\n      <dx-load-panel\r\n        [container]=\"treeViewContainer\"\r\n        shadingColor=\"rgba(0,0,0,0.3)\"\r\n        [position]=\"{ of: treeViewContainer }\"\r\n        [visible]=\"treeViewLoading\"\r\n        [showIndicator]=\"true\"\r\n        [showPane]=\"true\"\r\n        [shading]=\"false\"\r\n        [hideOnOutsideClick]=\"false\"\r\n      >\r\n      </dx-load-panel>\r\n\r\n      <dx-button\r\n        appGridAddButton\r\n        (onClick)=\"grid.instance.addRow()\"\r\n      >\r\n      </dx-button>\r\n\r\n      <dx-tree-view\r\n        #treeview\r\n        appTreeView\r\n        [dataSource]=\"treeViewDataSource\"\r\n        [elementAttr]=\"{class: 'custom-tree-view'}\"\r\n        selectionMode=\"single\"\r\n        dataStructure=\"plain\"\r\n        keyExpr=\"id\"\r\n        displayExpr=\"name\"\r\n        parentIdExpr=\"parentId\"\r\n        scrollDirection=\"both\"\r\n        (onItemClick)=\"onTreeViewItemClick($event)\"\r\n        (onContentReady)=\"onContentReady()\"\r\n      >\r\n      </dx-tree-view>\r\n    </div>\r\n\r\n    <div class=\"notification-categories-data-grid\">\r\n      <div class=\"grid-toolbar\">\r\n        <div class=\"grid-after-tool-bar\">\r\n          <app-grid-reload-button [grid]=\"grid\" (click)=\"reloadTreeView()\"></app-grid-reload-button>\r\n          <app-grid-column-chooser [grid]=\"grid\"></app-grid-column-chooser>\r\n          <app-grid-general-filter [grid]=\"grid\"></app-grid-general-filter>\r\n        </div>\r\n      </div>\r\n\r\n      <dx-data-grid\r\n        #grid\r\n        appGridFeature\r\n        appGridFeatureNotification\r\n        [dataFieldTranslationKeysMapping]=\"dataFieldTranslationKeysMapping\"\r\n        [datafieldValueQueryStringKeyMapping]=\"relatedDataValueAndQueryStringKeyMapping\"\r\n        [dataFieldLookUpSourceMapping]=\"dataFieldLookupSourceMapping\"\r\n        [editingPropertiesForCreating]=\"editingPropertiesForCreating\"\r\n        [editingPropertiesForUpdating]=\"editingPropertiesForUpdating\"\r\n        [columns]=\"columns\"\r\n        [dataSource]=\"gridDataSource\"\r\n        [gridProperties]=\"gridProperties\"\r\n        [isEditingDataAsync]=\"false\"\r\n        (onInitNewRow)=\"onInitNewRow($event)\"\r\n        (onEditorPreparing)=\"onEditorPreparing($event)\"\r\n        (onRowClick)=\"onRowClick($event)\"\r\n        (onRowInserted)=\"onRowInserted($event)\"\r\n        (onRowRemoved)=\"onRowRemoved($event)\"\r\n      >\r\n        <!-- <dxo-toolbar>\r\n          <dxi-item name=\"applyFilterButton\" cssClass=\"d-none\"></dxi-item>\r\n        </dxo-toolbar> -->\r\n\r\n        <ng-container *ngFor=\"let template of templateStore.gridTemplates | keyvalue\">\r\n          <ng-container *dxTemplate=\"let cellInfo of template.key\">\r\n            <ng-container\r\n              *ngTemplateOutlet=\"\r\n                templateStore.getGridTemplates(template.key);\r\n                context: { $implicit: cellInfo }\r\n              \"\r\n            >\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <div *dxTemplate=\"let cellInfo of 'bottom-toolbar'\">\r\n          <app-bottom-toolbar-btns [grid]=\"grid\"></app-bottom-toolbar-btns>\r\n        </div>\r\n      </dx-data-grid>\r\n\r\n      <app-notification-pager [grid]=\"grid\"></app-notification-pager>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AuthGuard, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotificationCategoriesComponent } from './components/notification-categories.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationCategoriesComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationCategoriesRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport type { Editing, InitNewRowEvent, Properties, Column, RowRemovedEvent, RowClickEvent, RowInsertedEvent, EditorPreparingEvent } from 'devextreme/ui/data_grid';\r\nimport type { DxDataGridComponent, DxTreeViewComponent } from 'devextreme-angular';\r\nimport { columns } from '../config/columns';\r\nimport { cRUDEndpoints } from '../config/crud-endpoints';\r\nimport { dataFieldLookupSourceMapping } from '../config/datafield-lookup-source-mapping';\r\nimport { relatedDataValueAndQueryStringKeyMapping } from '../config/datafield-value-query-string-key-mapping';\r\nimport {\r\n  editingPropertiesForCreating,\r\n  editingPropertiesForUpdating,\r\n} from '../config/form-properties';\r\nimport type DataSource from 'devextreme/data/data_source';\r\nimport { CRUDEndpoints, DataFieldLookUpSourceMapping, DataFieldTranslationKeysMapping, RelatedDataValueAndQueryStringKeyMapping } from 'src/app/shared/typing';\r\nimport { dataFieldTranslationKeysMapping } from '../config/datafield-translation-mapping';\r\nimport { GridDataSourceService } from 'src/app/shared/service/grid-data-source.service/grid-data-source.service';\r\nimport { TemplateStoreService } from 'src/app/shared/service/template-store.service';\r\nimport { ConfigStateService, RestService } from '@abp/ng.core';\r\nimport { ItemClickEvent as TreeViewItemClickEvent } from 'devextreme/ui/tree_view';\r\nimport { TenantChooserService } from 'src/app/shared/modules/tenant-chooser/tenant-chooser.service';\r\n\r\n@Component({\r\n  selector: 'app-notification-categories',\r\n  templateUrl: 'notification-categories.component.html',\r\n  styleUrls: ['./notification-categories.component.scss'],\r\n})\r\n/**\r\n *\r\n */\r\nexport class NotificationCategoriesComponent implements OnInit {\r\n  /**\r\n   * 取得datagrid元件，將之存於變數grid。\r\n   */\r\n  @ViewChild('grid', { static: false }) grid: DxDataGridComponent;\r\n\r\n  /**\r\n   * 取得treeview元件，將之存於變數treeview。\r\n   */\r\n  @ViewChild('treeview', { static: false }) treeview: DxTreeViewComponent\r\n\r\n  /**\r\n   * devextreme data grid columns\r\n   * \r\n   * 用來設定grid具有那些欄位。\r\n   * \r\n   * DevExtreme官方文件: [Column]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Columns/Overview/}\r\n   */\r\n  columns: Column[] = columns;\r\n\r\n  /**\r\n   * devextreme grid datasource\r\n   * \r\n   * grid dataSource, 用來連接grid與後端data的新增、讀取、修改、刪除。\r\n   * \r\n   * 透過[getDataSource]{@link GridDataSourceService#getDataSource}使用[cRUDEndpoints]{@link NotificationCategoriesComponent#cRUDEndpoints}與[relatedDataValueAndQueryStringKeyMapping]{@link NotificationCategoriesComponent#relatedDataValueAndQueryStringKeyMapping}產生。\r\n   * \r\n   * DevExtreme官方文件: [DataSource]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/Data_Layer/DataSource/}\r\n   */\r\n  gridDataSource: DataSource;\r\n\r\n  /**\r\n   * 設定增、刪、查、改的路徑\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link NotificationCategoriesComponent#gridDataSource}。\r\n   */\r\n  cRUDEndpoints: CRUDEndpoints = cRUDEndpoints;\r\n\r\n  /**\r\n   * 選單與資料路徑對應設定檔案\r\n   * \r\n   * {@link GridFeatureDirective}接收後用來設定[DataGrid]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Getting_Started_with_DataGrid/}的新增、編輯表單裡的選單。\r\n   */\r\n  dataFieldLookupSourceMapping: DataFieldLookUpSourceMapping = dataFieldLookupSourceMapping;\r\n\r\n  /**\r\n   * 選單與翻譯鍵對應設定檔案\r\n   * \r\n   * {@link FormFeatureDirective}接收後用來設定欄位名稱的翻譯。\r\n   */\r\n  dataFieldTranslationKeysMapping: DataFieldTranslationKeysMapping =\r\n    dataFieldTranslationKeysMapping;\r\n\r\n  /**\r\n   * 欄位、值、與回應資料結構的對應設定檔案\r\n   * \r\n   * 用於[getDataSource]{@link GridDataSourceService#getDataSource}接收然後利用產生[gridDataSource]{@link NotificationCategoriesComponent#gridDataSource}。\r\n   */\r\n  relatedDataValueAndQueryStringKeyMapping: RelatedDataValueAndQueryStringKeyMapping =\r\n    relatedDataValueAndQueryStringKeyMapping;\r\n\r\n  /**\r\n   * 新增的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForCreating: Editing = editingPropertiesForCreating;\r\n\r\n  /**\r\n   * 編輯的表單設定\r\n   * \r\n   * DevExtreme官方文件: [Editing]{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing/}\r\n   */\r\n  editingPropertiesForUpdating: Editing = editingPropertiesForUpdating;\r\n\r\n  /**\r\n   * 顯示treeview資料的是否正在載入中。\r\n   */\r\n  treeViewLoading = false;\r\n\r\n  /**\r\n   * [grid]{@link NotificationCategoriesComponent#grid}設定\r\n   * \r\n   * 將高度設置為0，配合CSS調整版面\r\n   * \r\n   * 將原生toolbar移除\r\n   */\r\n  gridProperties: Properties = {\r\n    toolbar: {\r\n      visible: false\r\n    },\r\n    height: 0\r\n  }\r\n\r\n  /**\r\n   * 參考{@link https://js.devexpress.com/Angular/Documentation/23_2/Guide/UI_Components/DataGrid/Editing|Editing}、\r\n   * [editCellTemplate]{@link https://js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxDataGrid/Configuration/columns/\\#editCellTemplate/}、\r\n   * [template]{@link js.devexpress.com/Angular/Documentation/23_2/ApiReference/UI_Components/dxForm/Item_Types/SimpleItem/#template/}、\r\n   * [restService]{@link RestService}、[ConfigStateService]{@link https://abp.io/docs/latest/framework/ui/angular/config-state-service?_redirected=B8ABF606AA1BDF5C629883DF1061649A}、[tenantChooser]{@link TenantChooserService}\r\n   * \r\n   * @param gridDataSourceService dxdatagrid所使用的產生datasource相關功能\r\n   * @param templateStore 共用的dx template儲存service，用於dx-data-grid、dx-form的custom template, 參考editCellTemplate, template\r\n   * @param restService 需要CRUD時的共用service\r\n   * @param configStateService 取得目前登入租戶的資料\r\n   * @param tenantChooser 參考tenantChooser\r\n   */\r\n  constructor(\r\n    private gridDataSourceService: GridDataSourceService,\r\n    protected templateStore: TemplateStoreService,\r\n    private restService: RestService,\r\n    private configStateService: ConfigStateService,\r\n    private tenantChooser: TenantChooserService\r\n  ) {\r\n    this.configStateService.getOne$(\"currentUser\").subscribe(currentUser => {\r\n      if (currentUser.tenantId) {\r\n        this.editingPropertiesForCreating.form.items[0].visible = false;\r\n        this.editingPropertiesForUpdating.form.items[0].visible = false;\r\n        this.columns[1].visible = false\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 目前樹狀結構父層ID\r\n   */\r\n  parentNotificationCategoryId: string;\r\n\r\n  /**\r\n   * devextreme treeview\r\n   * \r\n   * 應用在樹狀結構元件的資料\r\n   * \r\n   * 參考[treeview]{@link https://js.devexpress.com/Angular/Documentation/Guide/UI_Components/TreeView/Getting_Started_with_TreeView/}\r\n   */\r\n  treeViewDataSource = []\r\n\r\n  /**\r\n   * 取得指定租戶的ID\r\n   */\r\n  SpecifiedTenantId: string;\r\n\r\n  /**\r\n   * 當HOST登入時，在有選擇任一父層資料情況下，在新增表單中指定選擇父層資料的租戶ID\r\n   */\r\n  SpecifiedTenantIdWhenEditingForCreate: string\r\n\r\n  /**\r\n   * onContentReady階段時，是否需要捲動至項目的父層\r\n   */\r\n  isNeedToScrollToItem = false\r\n\r\n  /**\r\n   * 參考[tenantChooser]{@link TenantChooserService}\r\n   * \r\n   * 取得指定租戶ID後，配置到[SpecifiedTenantId]{@link NotificationCategoriesComponent#SpecifiedTenantId}中\r\n   * \r\n   * 元件初始化後，配置[grid]{@link NotificationCategoriesComponent#grid}、[treeview]{@link NotificationCategoriesComponent#treeview}\r\n   */\r\n  ngOnInit(): void {\r\n    this.tenantChooser.tenantId$.subscribe((res) => {\r\n      this.SpecifiedTenantId = res\r\n      this.setGridDataSource();\r\n      this.setTreeViewDataSource(res)\r\n      this.SpecifiedTenantIdWhenEditingForCreate = null\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 新增時，帶入[parentNotificationCategoryId]{@link NotificationCategoriesComponent#parentNotificationCategoryId}\r\n   */\r\n  onInitNewRow(e: InitNewRowEvent) {\r\n    e.data.parentNotificationCategoryId = this.parentNotificationCategoryId;\r\n  }\r\n\r\n  /**\r\n   * 當HOST登入時，在有選擇任一父層資料情況下，新增的 Popup 中，租戶下拉選單自動選擇父層資料的 tenantId 並鎖定\r\n   * \r\n   * @param {EditorPreparingEvent} e EditorPreparingEvent\r\n   * @returns \r\n   */\r\n    onEditorPreparing(e: EditorPreparingEvent) {\r\n      if (e.dataField !== 'SpecifiedTenantId' || e.parentType !== 'dataRow') {\r\n        return\r\n      }\r\n  \r\n      if (this.SpecifiedTenantId === 'null' && this.SpecifiedTenantIdWhenEditingForCreate === 'null') {\r\n        return\r\n      }\r\n  \r\n      if (this.SpecifiedTenantIdWhenEditingForCreate) {\r\n        e.editorOptions.disabled = true\r\n        e.editorOptions.value = this.SpecifiedTenantIdWhenEditingForCreate \r\n        e.setValue(this.SpecifiedTenantIdWhenEditingForCreate)\r\n      }\r\n    }\r\n\r\n  /**\r\n   * 新增、移除或重新發出API拿資料後，如果[isNeedToScrollToItem]{@link NotificationCategoriesComponent#isNeedToScrollToItem}為true，代表需要使用\r\n   * [scrollToItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#scrollToItemkey}\r\n   * 將[treeview]{@link NotificationCategoriesComponent#treeview}捲動到父層\r\n   */\r\n  onContentReady() {\r\n    if (this.parentNotificationCategoryId && this.isNeedToScrollToItem) {\r\n      this.treeview.instance.scrollToItem(this.parentNotificationCategoryId)\r\n      this.isNeedToScrollToItem = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 觸發[RowClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowClickEvent/}時，\r\n   * 會將該筆資料的id與[treeViewDataSource]{@link NotificationCategoriesComponent#treeViewDataSource}進行比對，\r\n   * 並根據id觸發[setGridDataSource]{@link NotificationCategoriesComponent#setGridDataSource}後\r\n   * 重新渲染[grid]{@link NotificationCategoriesComponent#grid}，\r\n   * 此時樹狀結構也會呼叫[expandItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#expandItemitemData}與[selectItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#selectItemitemData}後跟著展開，並記錄新的[parentNotificationCategoryId]{@link NotificationCategoriesComponent#parentNotificationCategoryId}，\r\n   * 如果[RowClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowClickEvent/}\r\n   * 的對象是按鈕時，則不觸發\r\n   * \r\n   * 使用[scrollToItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#scrollToItemkey}\r\n   * 將[treeview]{@link NotificationCategoriesComponent#treeview}捲動到父層\r\n   * \r\n   * 參考[RowClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowClickEvent/}\r\n   * @param e RowClickEvent\r\n   */\r\n  onRowClick(e: RowClickEvent) {\r\n    if (e.event.target.classList.contains('dx-button-content')) {\r\n      return\r\n    }\r\n    const itemData = this.treeViewDataSource.find(item => item.id === e.data.id)\r\n    this.setGridDataSource(e.data.id)\r\n    this.treeview.instance.expandItem(itemData)\r\n    this.treeview.instance.selectItem(itemData)\r\n    this.parentNotificationCategoryId = e.data.id\r\n    this.SpecifiedTenantIdWhenEditingForCreate = e.data.SpecifiedTenantId || 'null'\r\n    this.treeview.instance.scrollToItem(this.parentNotificationCategoryId)\r\n  }\r\n\r\n  /**\r\n   * 觸發[RowInsertedEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowInsertedEvent/}時，呼叫[setTreeViewDataSource]{@link NotificationCategoriesComponent#setTreeViewDataSource}，\r\n   * 並帶入指定租戶ID[SpecifiedTenantId]{@link NotificationCategoriesComponent#SpecifiedTenantId}\r\n   * \r\n   * 帶入新增資料中的parentNotificationCategoryId，以選取該節點與展開\r\n   * \r\n   * 將[isNeedToScrollToItem]{@link NotificationCategoriesComponent#isNeedToScrollToItem}設置為true，使[treeview]{@link NotificationCategoriesComponent#treeview}\r\n   * 在onContentReady階段時，可以自動捲動到該新增項目的父層\r\n   * @param e RowInsertedEvent\r\n   */\r\n  onRowInserted(e: RowInsertedEvent) {\r\n    this.setTreeViewDataSource(this.SpecifiedTenantId, e.data.parentNotificationCategoryId)\r\n    this.isNeedToScrollToItem = true\r\n  }\r\n\r\n  /**\r\n   * 觸發[RowRemovedEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowRemovedEvent/}\r\n   * 時，將該筆資料從[treeViewDataSource]{@link NotificationCategoriesComponent#treeViewDataSource}移除\r\n   * \r\n   * 將[isNeedToScrollToItem]{@link NotificationCategoriesComponent#isNeedToScrollToItem}設置為true，使[treeview]{@link NotificationCategoriesComponent#treeview}\r\n   * 在onContentReady階段時，可以自動捲動到該移除項目的父層\r\n   * \r\n   * 參考[RowRemovedEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxDataGrid/Types/RowRemovedEvent/}\r\n   * @param e RowRemovedEvent\r\n   */\r\n  onRowRemoved(e: RowRemovedEvent) {\r\n    this.treeViewDataSource = this.treeViewDataSource.filter(item => item.id !== e.data.id)\r\n    this.isNeedToScrollToItem = true\r\n  }\r\n\r\n  /**\r\n   * 透過[getDataSource]{@link GridDataSourceService#getDataSource}使用設定檔設定grid的dataSource - \r\n   * [gridDataSource]{@link *ReceiverGroupsComponent#gridDataSource}\r\n   * \r\n   * 透過[parentNotificationCategoryId]{@link ReceiverGroupsComponent#parentNotificationCategoryId}，取得需要的資料\r\n   * \r\n   * 參考[filter]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/Data_Layer/DataSource/Configuration/#filter}、\r\n   * [parentNotificationCategoryId]{@link ReceiverGroupsComponent#parentNotificationCategoryId}\r\n   * \r\n   * @param parentNotificationCategoryId 目前樹狀結構父層ID\r\n   */\r\n  setGridDataSource = (parentNotificationCategoryId?: string) => {\r\n    this.gridDataSource = this.gridDataSourceService.getDataSource(\r\n      cRUDEndpoints,\r\n      relatedDataValueAndQueryStringKeyMapping\r\n    );\r\n\r\n    this.gridDataSource.filter([\"parentNotificationCategoryId\", \"=\", parentNotificationCategoryId])\r\n  }\r\n\r\n  /**\r\n   * 取得通知群組的Tree view階層資料，最上層必須自定義，\r\n   * 並根據資料parentId是否為null，決定該筆資料的parentId是否為最上層\r\n   * \r\n   * 新增後呼叫，則判斷Tree view階層資料是否有任何一筆的ID與parentNotificationCategoryId相同，\r\n   * 如果相同則根據selected與expanded，選取該節點並展開\r\n   * \r\n   * @param SpecifiedTenantId 指定租戶ID\r\n   * @param parentNotificationCategoryId 新增後，重新呼叫此方法時，需要帶入父層節點的ID，以便展開該節點\r\n   */\r\n  setTreeViewDataSource(SpecifiedTenantId: string, parentNotificationCategoryId?: string) {\r\n    this.treeViewLoading = true\r\n\r\n    this.restService.request<void, any>({\r\n      method: 'GET',\r\n      url: '/api/app/notification-categories/treeview',\r\n      params: {\r\n        SpecifiedTenantId\r\n      }\r\n    }).subscribe(res => {\r\n      const notificationCategories = res.items.map(item => ({\r\n        id: item.id,\r\n        name: item.name,\r\n        parentId: item.parentId || 'notificationCategories',\r\n        tenantId: item.tenantId || 'null',\r\n        selected: item.id ===  parentNotificationCategoryId,\r\n        expanded: item.id ===  parentNotificationCategoryId\r\n      }))\r\n\r\n      this.treeViewDataSource = notificationCategories\r\n\r\n      this.treeViewDataSource.unshift({\r\n        id: 'notificationCategories',\r\n        name: '通知分類',\r\n        parentId: null,\r\n        selected: true,\r\n        expanded: true\r\n      })\r\n\r\n      this.treeViewLoading = false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 當觸發[ItemClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Types/ItemClickEvent/}\r\n   * 時，判斷此時樹狀結構是否為最上層，並在[setGridDataSource]{@link NotificationCategoriesComponent#setGridDataSource}帶入對應的id或null\r\n   * \r\n   * 透過[expandItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#expandItemitemData}\r\n   * 與[selectItem]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Methods/#selectItemitemData}\r\n   * 展開樹狀結構，並設定[parentNotificationCategoryId]{@link NotificationCategoriesComponent#parentNotificationCategoryId}\r\n   * \r\n   * 參考[ItemClickEvent]{@link https://js.devexpress.com/Angular/Documentation/ApiReference/UI_Components/dxTreeView/Types/ItemClickEvent/} \r\n   * @param TreeViewItemClickEvent ItemClickEvent\r\n   */\r\n  onTreeViewItemClick(e: TreeViewItemClickEvent) {\r\n    this.setGridDataSource(e.itemData.id === 'notificationCategories' ? null : e.itemData.id as string)\r\n    this.treeview.instance.expandItem(e.itemData)\r\n    this.treeview.instance.selectItem(e.itemData)\r\n    this.parentNotificationCategoryId = e.itemData.id as string\r\n    this.SpecifiedTenantIdWhenEditingForCreate = e.node.itemData.tenantId\r\n  }\r\n\r\n  /**\r\n   * 當按下重新呼叫API，取得[grid]{@link ReceiverGroupsComponent#grid}資料時，\r\n   * 也一併呼叫[setTreeViewDataSource]{@link ReceiverGroupsComponent#setTreeViewDataSource}，\r\n   * 重新取得[treeViewDataSource]{@link ReceiverGroupsComponent#treeViewDataSource}\r\n   * \r\n   * 需要帶入[parentNotificationCategoryId]{@link ReceiverGroupsComponent#parentNotificationCategoryId}，以便在重繪時\r\n   * 也可以展開該節點\r\n   * \r\n   * 將[isNeedToScrollToItem]{@link NotificationCategoriesComponent#isNeedToScrollToItem}設置為true，使[treeview]{@link NotificationCategoriesComponent#treeview}\r\n   * 在onContentReady階段時，可以自動捲動到該移除項目的父層\r\n   */\r\n    reloadTreeView() {\r\n      this.setTreeViewDataSource(this.SpecifiedTenantId, this.parentNotificationCategoryId)\r\n      this.isNeedToScrollToItem = true\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { NotificationCategoriesComponent } from './components/notification-categories.component';\r\nimport { NotificationCategoriesRoutingModule } from './notification-categories-routing.module';\r\nimport { DXComponentsModule } from '../shared/dx-components.module';\r\nimport { DxTreeViewModule } from 'devextreme-angular';\r\nimport { NotificationPagerComponent } from '../shared/components/notification/notification-pager/notification-pager.component';\r\nimport { TenantChooserModule } from '../shared/modules/tenant-chooser/tenant-chooser.module';\r\nimport { GridReloadButtonComponent } from \"../shared/components/grid/grid-reload-button/grid-reload-button.component\";\r\nimport { GridColumnChooserComponent } from \"../shared/components/grid/grid-column-chooser/grid-column-chooser.component\";\r\n\r\n@NgModule({\r\n  declarations: [NotificationCategoriesComponent],\r\n  imports: [\r\n    TenantChooserModule,\r\n    CommonModule,\r\n    NotificationCategoriesRoutingModule,\r\n    SharedModule,\r\n    DXComponentsModule,\r\n    DxTreeViewModule,\r\n    NotificationPagerComponent,\r\n    GridReloadButtonComponent,\r\n    GridColumnChooserComponent\r\n],\r\n})\r\nexport class NotificationCategoriesModule { }"],"x_google_ignoreList":[]}